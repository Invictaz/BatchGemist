[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}]

[{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}]

[{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v^"}^, {^"type^": ^"h264^"^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content.omroep.nl/kro/video/binnenstebuiten/BB_161013_Kevin-Audio_wk8_POMS_high_video.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/kro/video/binnenstebuiten/BB_161013_Kevin-Audio_wk8_POMS_low_video.mp4^"}]

[{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}]

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4",
  "type": "text/plain;charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 missing credentials",
    "Date: Fri, 23 Dec 2016 22:12:17 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://s.nos.nl/img/video/geen-toegang.png",
    "Content-Length: 20",
    "Cache-Control: no-cache",
    "X-WorkerInstancename: dlr2c",
    "Content-Type: text/plain;charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2cfp; path=/;",
    "Connection: close",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'post':'[{\"file\":\"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4\"}]','url':'http://nos.nl/video/resolve/'})"
{
  "url": "http://nos.nl/video/resolve/",
  "type": "application/json",
  "headers": [
    "HTTP/1.1 200 OK",
    "Server: nginx/1.11.4",
    "Content-Type: application/json",
    "Transfer-Encoding: chunked",
    "Connection: keep-alive",
    "Vary: Accept-Encoding",
    "X-Powered-By: PHP/5.6.26",
    "Cache-Control: no-cache",
    "Date: Fri, 23 Dec 2016 22:14:47 GMT",
    "X-Instance-Name: nos1lwb.omroep.nl",
    "",
    "\u0000\u0000"
  ],
  "raw": "[{\"file\":\"https:\\/\\/video.omroep.nl\\/secure\\/ccfc7a0123a798997df810a274a3e239\\/585da1d7\\/nos\\/content-ip\\/mp4\\/web03\\/2016\\/08\\/20\\/274109.mp4\"}]",
  "json": [
    {
      "file": "https://video.omroep.nl/secure/ccfc7a0123a798997df810a274a3e239/585da1d7/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"
    }
  ]
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 Found",
    "Date: Fri, 23 Dec 2016 22:19:30 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://content1d.omroep.nl/urishieldv2/l27m0990c6a41ede5b6800585da2f2000000.0cfe89d69980b45324a48f9323803f69/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",
    "Cache-Control: \"max-age=60\"",
    "Expires: Fri, 23 Dec 2016 22:20:30 GMT",
    "X-WorkerInstancename: dlr2a",
    "Content-Type: text/html; charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2afp; path=/;",
    "Connection: close",
    "",
    "\u0000n"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 404 Not Found",
    "Date: Fri, 23 Dec 2016 22:21:11 GMT",
    "Server: Apache/2.4.23 (Unix) OpenSSL/1.0.2j",
    "Last-Modified: Wed, 09 Apr 2014 12:15:10 GMT",
    "ETag: \"758-4f69b0d478f80\"",
    "Accept-Ranges: bytes",
    "Content-Length: 1880",
    "X-ProxyInstancename: dlr1b",
    "Connection: close",
    "Content-Type: text/html",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 403 Forbidden",
    "Server: nginx/1.11.4",
    "Date: Fri, 23 Dec 2016 22:23:39 GMT",
    "Content-Type: text/html",
    "Content-Length: 169",
    "Connection: keep-alive",
    "X-EdgeError: lmhash mismatch [cb4aa61336292e4528b6440a973fdecc]",
    "X-Instance-Name: dl1afp.omroep.nl",
    "",
    "\u0000?"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'302')) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'40')) then () else url)"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "mp4-3", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"}, {"format": "mp4-2", "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "mp4-3", "url": "https://video.omroep.nl/secure/ed64cb4aef309da7eac655c4a7207e99/585db2df/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"}, {"format": "mp4-2", "url": "https://video.omroep.nl/secure/b4357506b4e714f8058bc7bffa27ba63/585db2df/nos/content-ip/ipod/2016/08/20/274109.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "wmv-2", "url": "mms://hurley.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=585db375&wmhash=133cf8ce"}, {"format": "wmv-1", "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=585db375&wmhash=66f209f6"}, {"format": "mp4-2", "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]
formats := wmv-1, wmv-2, mp4-2
best := mp4-2

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
v_url := mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=585db3e1&wmhash=5abbdbb3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v^"}^, {^"type^": ^"h264^"^, ^"url^": ^"http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "mp4-2", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v"}, {"format": "mp4-1", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v"}, {"format": "mp4-3", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v"}]
formats := mp4-1, mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
v_url := http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
...

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "if (count($json()/url)=1) then v_url:=if (ends-with($json()/url,'asf')) then doc($json()/url)//@href else x:request({'data':$json()/url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ()) else let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())}[url] return if ($a) then (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
v_url :=

--xquery "if (count($json()/url)=1) then
            v_url:=if (ends-with($json()/url,'asf')) then
              doc($json()/url)//@href
            else
              x:request(
                {
                  'data':$json()/url,
                  'method':'HEAD',
                  'error-handling':'xxx=accept'
                }
              )/(
                if (some $x in ('200','302') satisfies contains(headers[1],$x)) then
                  url
                else
                  ()
              )
          else
            let $a:=$json()/{
              'format':if (type) then
                concat(
                  'mp4-',
                  max($json()/kwaliteit)+1
                )
              else
                concat(
                  if (formaat='h264') then
                    'mp4'
                  else
                    formaat,
                  '-',
                  kwaliteit
                ),
              'url':if (ends-with(url,'asf')) then
                doc(url)//@href
              else
                if (contains(url,'content-ip')) then
                  x:request(
                    {
                      'post':serialize-json([{\"file\":url}]),
                      'url':'http://nos.nl/video/resolve/'
                    }
                  )//file
                else
                  x:request(
                    {
                      'data':url,
                      'method':'HEAD',
                      'error-handling':'xxx=accept'
                    }
                  )/(
                    if (some $x in ('200','302') satisfies contains(headers[1],$x)) then
                      ()
                    else
                      url
                  )
            }[url]
            return
            if ($a) then (
              json:=[$a],
              let $b:=(
                for $x in $json()[contains(format,'wmv')]/format order by $x return $x,
                for $x in $json()[contains(format,'mp4')]/format order by $x return $x
              ) return (
                formats:=join($b,', '),
                best:=$b[last()]
              )
            )
            else
              ()"

================================================================================================================================

http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html (artikel met 1 video)
http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html (1 video)
http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html (artikel met 1 beveiligde video)
http://nos.nl/video/2128675-het-eredivisieweekend-in-vogelvlucht.html (1 beveiligde video)
http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html (artikel met 2 losse video's)
http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html (artikel met 2 video's in slide)
http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html (artikel met 4 beveiligde video's)

xidel-0.9.6.exe -s --color=never "http://nos.nl/uitzending/18162-nos-journaal.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Journaal (29082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/mp4/web01/2016/08/29/18162/mp4_web01.mp4"}, {"format": "mp4-720", "url": "http://download.omroep.nl/nos/content/mp4/web02/2016/08/29/18162/mp4_web02.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/29/18162/mp4_web03.mp4"}]
formats := mp4-360, mp4-480, mp4-720
best := mp4-720

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Het eredivisieweekend in vogelvlucht (29082016)
json := [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/4e9d66815ca103cc38e6aee137622a21/585e6b5f/nos/content-ip/video/2016/08/29/171451/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/dd18c8f172f6be0f17195be6b369a543/585e6b5f/nos/content-ip/video/2016/08/29/171451/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
json := [{"1e": {"name": "NOS - Nabestaande: de kinderen zijn getekend voor het leven (29082016)", "
formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/web03.mp4"}]}}, {"2e": {"name": "NOS - Verklaring van verdachte dodelijk ongeluk A2: ''Ik moest gewoon hard rijden'' (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
json := [{"1e": {"name": "NOS - 2015: Van Oostveen geeft aan Hiddink te willen behouden voor KNVB (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/web03.mp4"}]}}, {"2e": {"name": "NOS - ''KNVB stapelt fout op fout'' (21082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
json := [{"1e": {"name": "NOS - Bertens komt net tekort voor titel in Gstaad (17072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/97e014e44918d1ce0d4fbb6afe4a172a/585e6c6b/nos/content-ip/video/2016/07/17/168011/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/41166b2fbb769e23af44dafd26572b10/585e6c6b/nos/content-ip/video/2016/07/17/168011/web03.mp4"}]}}, {"2e": {"name": "NOS - Bertens niet opgewassen tegen Halep (02072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/6fc13aad534188e85e69c92df24be43d/585e6c6b/nos/content-ip/video/2016/07/02/166777/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/c9733b44ea59b860f715cc50f6b83374/585e6c6b/nos/content-ip/video/2016/07/02/166777/web03.mp4"}]}}, {"3e": {"name": "NOS - Bertens in eerste ronde Rio onderuit (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/0182bea4ab8217d03cbfb6dc0126c419/585e6c6b/nos/content-ip/video/2016/08/06/169289/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/170ae8f74c109c4b647283d19c6e474c/585e6c6b/nos/content-ip/video/2016/08/06/169289/web03.mp4"}]}}, {"4e": {"name": "NOS - Bertens na snelle exit: zware omstandigheden (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/2a65d3505c3086129bd9b32f214ae0e9/585e6c6b/nos/content-ip/video/2016/08/06/169295/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/757c9d0af5af41d68b4a21ac4e62c86e/585e6c6b/nos/content-ip/video/2016/08/06/169295/web03.mp4"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "if (//div[@class='video-play']) then
            if (count(//div[@class='video-play'])=1) then
              doc(
                //div[@class='video-play']/a/@href
              )/(
                name:=concat(
                  'NOS - ',
                  replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                ),
                  replace(
                    //@datetime,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                json:=[
                  //source/{
                    'format':replace(
                      @data-label,
                      '.+?(\d+).',
                      'mp4-$1'
                    ),
                    'url':if (contains(@src,'content-ip')) then
                      x:request(
                        {
                          'post':serialize-json([{\"file\":string(@src)}]),
                          'url':'http://nos.nl/video/resolve/'
                        }
                      )//file
                    else
                      @src
                  }
                ]
              )
            else
              json:=[
                //div[@class='video-play']/a/doc(@href)/{
                  position()||'e':{
                    'name':concat(
                      'NOS - ',
                      replace(
                        //meta[@property='og:title']/@content,
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        //@datetime,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats'://source/{
                      'format':replace(
                        @data-label,
                        '.+?(\d+).',
                        'mp4-$1'
                      ),
                      'url':if (contains(@src,'content-ip')) then
                        x:request(
                          {
                            'post':serialize-json([{\"file\":string(@src)}]),
                            'url':'http://nos.nl/video/resolve/'
                          }
                        )//file
                      else
                        @src
                    }
                  }
                }
              ]
          else (
            name:=concat(
              'NOS - ',
              if (//meta[@property='og:title']) then
                replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                )
              else
                substring-after(//h1,'NOS '),
              replace(
                //@datetime,
                '(\d+)-(\d+)-(\d+).+',
                ' ($3$2$1)'
              )
            ),
            json:=[
              //source/{
                'format':replace(
                  @data-label,
                  '.+?(\d+).',
                  'mp4-$1'
                ),
                'url':if (contains(@src,'content-ip')) then
                  x:request(
                    {
                      'post':serialize-json([{\"file\":string(@src)}]),
                      'url':'http://nos.nl/video/resolve/'
                    }
                  )//file
                else
                  @src
              }
            ]
          ),
          if ($json(1)/format) then
            let $a:=for $x in $json()/format order by $x return $x return (
              formats:=join($a,', '),
              best:=$a[last()]
            )
          else
            videos:=join($json()(),', ')"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -e "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')"
http://c.brightcove.com/services/viewer/htmlFederated?isVid=1&isUI=1&publisherID=20318290001&playerID=2234112204001&autoStart=false&domain=embed&@videoPlayer=5095479777001&branding=sbs&playertitle=true&linkBaseURL=http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123?sbs_device=pc

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -f "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')" --xquery "json(extract(//body,'experienceJSON = (.+\});',1))/(if (.//mediaDTO) then .//mediaDTO/(name:=concat(if (customFields/sbs_station='veronicatv') then 'Veronica' else upper-case(customFields/sbs_station),' - ',displayName,replace(creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=if ((renditions)()[size=0]) then [let $a:=(renditions)()[size=0]/defaultURL return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}),json(concat('http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',id))/(videos)() ! {'format':replace(.,'.+-(\d+).*\.(.+)','$2-$1'),'url':.}] else [(renditions)()/{'format':concat('mp4_',encodingRate idiv 1000),'url':defaultURL}],let $b:=(for $x in $json()[contains(format,'mp4')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as double]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ())"
name := SBS6 - De Smaakpolitie: Aflevering 123 (23082016)
json := [{"format": "meta", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/sbs6_desmaakpolitie_S00E123_160823101909613418-hls-main.m3u8"}, {"format": "610", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r1/sbs6_desmaakpolitie_S00E123_160823101007613418-hls-350.m3u8"}, {"format": "928", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r2/sbs6_desmaakpolitie_S00E123_160823101038613418-hls-650.m3u8"}, {"format": "1288", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r3/sbs6_desmaakpolitie_S00E123_160823100125613418-hls-900.m3u8"}, {"format": "1643", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r4/sbs6_desmaakpolitie_S00E123_160823101148613418-hls-1200.m3u8"}, {"format": "2179", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r8/sbs6_desmaakpolitie_S00E123_160823100831613418-hls-1885.m3u8"}, {"format": "mp4-350", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101306613418-bg-350.mp4"}, {"format": "mp4-650", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823095841613418-bg-650.mp4"}, {"format": "mp4-900", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101358613418-bg-900.mp4"}, {"format": "mp4-1200", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100603613418-bg-1200.mp4"}, {"format": "mp4-1885", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100449613418-bg-1885.mp4"}]
formats := mp4-350, mp4-650, mp4-900, mp4-1200, mp4-1885, meta, 610, 928, 1288, 1643, 2179
best := 2179

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/KxsFnNTV9Njv/het-is-weer-smerig-vies" -f "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')" --xquery "json(extract(//body,'experienceJSON = (.+\});',1))/(if (.//mediaDTO) then .//mediaDTO/(name:=concat(if (customFields/sbs_station='veronicatv') then 'Veronica' else upper-case(customFields/sbs_station),' - ',displayName,replace(creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=if ((renditions)()[size=0]) then [let $a:=(renditions)()[size=0]/defaultURL return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}),json(concat('http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',id))/(videos)() ! {'format':replace(.,'.+-(\d+).*\.(.+)','$2-$1'),'url':.}] else [(renditions)()/{'format':concat('mp4_',encodingRate idiv 1000),'url':defaultURL}],let $b:=(for $x in $json()[contains(format,'mp4')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as double]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ())"
name := SBS6 - Het is weer smerig vies (21122012)
json := [{"format": "mp4_287", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4"}, {"format": "mp4_975", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4"}, {"format": "mp4_608", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4"}, {"format": "mp4_1611", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4"}]
formats := mp4_287, mp4_608, mp4_975, mp4_1611
best := mp4_1611

-f "replace(
      replace(
        parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,
        'federated_f9',
        'htmlFederated'
      ),
      'videoId',
      '@videoPlayer'
    )"
--xquery "json(
            extract(//body,'experienceJSON = (.+\});',1)
          )/(
            if (.//mediaDTO) then
              .//mediaDTO/(
                name:=concat(
                  if (customFields/sbs_station='veronicatv') then
                    'Veronica'
                  else
                    upper-case(customFields/sbs_station),
                  ' - ',
                  displayName,
                  replace(
                    creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),
                    '(\d+)-(\d+)-(\d+)',
                    ' ($3$2$1)'
                  )
                ),
                json:=if ((renditions)()[size=0]) then [
                  let $a:=(renditions)()[size=0]/defaultURL return (
                    {
                      'format':'meta',
                      'url':$a
                    },
                    tail(
                      tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')
                    ) ! {
                      'format':string(
                        extract(.,'BANDWIDTH=(\d+)',1) idiv 1000
                      ),
                      'url':concat(
                        resolve-uri('.',$a),
                        extract(.,'(.+m3u8)',1)
                      )
                    }
                  ),
                  json(
                    concat(
                      'http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',
                      id
                    )
                  )/(videos)() ! {
                    'format':replace(.,'.+-(\d+).*\.(.+)','$2-$1'),
                    'url':.
                  }
                ] else [
                  (renditions)()/{
                    'format':concat('mp4_',encodingRate idiv 1000),
                    'url':defaultURL
                  }
                ],
                let $b:=(
                  for $x in $json()[contains(format,'mp4')]/format order by $x return $x,
                  $json()[format='meta']/format,
                  for $x in $json()[format castable as double]/format order by $x return $x
                ) return (
                  formats:=join($b,', '),
                  best:=$b[last()]
                )
              )
            else
              ()
          )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/alex-and-co/alex-and-co-aflevering-25-seizoen-2-540f724beb736cfda983bae3" -e "ref:=string-to-base64Binary(concat('http://',$host))" -f "let $a:=//script/json(extract(.,'burger=(.+):\(',1)[.])//externals return concat('http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',$a//account,'&2:service=baseentry&2:action=get&2:entryId=',$a//data_id,'&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',$a//data_id)" --xquery "name:=$json(2)/concat('Disney - ',name,replace(createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=[let $a:=concat(substring-before($json(2)/dataUrl,'format'),'flavorIds/',join($json(3)()[isWeb='true']/id,','),'/format/applehttp/protocol/http?referrer=',$ref) return ({'format':'meta','url':x:request({'data':$a,'method':'HEAD','error-handling':'4xx=accept'})/(if (contains($headers[1],'404')) then () else url)},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8.+)',1)},$json(3)()/{'format':if (isOriginal='true') then 'mp4-source' else concat(fileExt,'-',bitrate),'url':x:request({'data':concat($json(2)/dataUrl,'/flavorId/',id,'?referrer=',$ref),'method':'HEAD','error-handling':'4xx=accept'})/(if (contains($headers[1],'404')) then () else url)}[url])],let $b:=(for $x in $json()[contains(format,'-')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as double]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])" --output-encoding=oem
ref := aHR0cDovL3ZpZGVvLmRpc25leS5ubA==
name := Disney - Alex & Co - Aflevering 25 - Seizoen 2 (10112016)
json := [{"format": "meta", "url":"http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_5k54sqro/flavorIds/1_zwd6ahuz,1_jec1dkgy,1_ls0d8d52,1_kz7zre1b,1_evxdy5u7,1_2ufaggkl/format/applehttp/protocol/http?referrer=aHR0cDovL3ZpZGVvLmRpc25leS5ubA=="}, {"format": "476", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/1/flavorId/1_zwd6ahuz/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "679", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_jec1dkgy/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "987", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_ls0d8d52/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "1667", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_kz7zre1b/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "2691", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_evxdy5u7/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "3745", "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_2ufaggkl/name/a.mp4/index.m3u8?__hdnea__=st=1481461909~exp=1481483509~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/*~hmac=42398a718394f458873046213ed07a73df43e4cff0ed90df159c3cb4d32edcd0"}, {"format": "mp4-source", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/1/flavorId/1_i5fxret4/forceproxy/true/name/a.mp4?__hdnea__=st=1481461910~exp=1481483510~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/1/flavorId/1_i5fxret4/forceproxy/true/name/a.mp4*~hmac=bb00674e7ce18c83683260803b5985a71dbd2dab8ae8ee9005c5c1603ac45536"}, {"format": "mp4-465", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/1/flavorId/1_zwd6ahuz/forceproxy/true/name/a.mp4?__hdnea__=st=1481461910~exp=1481483510~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/1/flavorId/1_zwd6ahuz/forceproxy/true/name/a.mp4*~hmac=6cb66059cae55be7d28ff351868a6c200a4508607c380e6998b4619c0338167c"}, {"format": "mp4-664", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_jec1dkgy/forceproxy/true/name/a.mp4?__hdnea__=st=1481461910~exp=1481483510~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_jec1dkgy/forceproxy/true/name/a.mp4*~hmac=4764734830774da526b79b896f3b790f2f5635b18b1b628a9ded678a4b8234b8"}, {"format": "webm-819", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_jnpimjo4/forceproxy/true/name/a.webm?__hdnea__=st=1481461911~exp=1481483511~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_jnpimjo4/forceproxy/true/name/a.webm*~hmac=beb6d80b92efea0338fde8ab37ee6109b9a27155d51830fe2e4796c4e82baad1"}, {"format": "mp4-964", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_ls0d8d52/forceproxy/true/name/a.mp4?__hdnea__=st=1481461911~exp=1481483511~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_ls0d8d52/forceproxy/true/name/a.mp4*~hmac=901016e6abff20db85b09516a1445c5599bcbe7b233873a87770f5cc55c4d24d"}, {"format": "mp4-1628", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_kz7zre1b/forceproxy/true/name/a.mp4?__hdnea__=st=1481461911~exp=1481483511~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_kz7zre1b/forceproxy/true/name/a.mp4*~hmac=8f567fd20e4ccd75905df0c7803fa570e23b6f0e7f49a93b2a2c15982ff5a2fc"}, {"format": "mp4-2628", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_evxdy5u7/forceproxy/true/name/a.mp4?__hdnea__=st=1481461912~exp=1481483512~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_evxdy5u7/forceproxy/true/name/a.mp4*~hmac=feed054a086750fe89dd326f85a3e53baf51b964b3423224efcff0bf5b973929"}, {"format": "mp4-3658", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_2ufaggkl/forceproxy/true/name/a.mp4?__hdnea__=st=1481461912~exp=1481483512~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_2ufaggkl/forceproxy/true/name/a.mp4*~hmac=f4b36e4631b2716a01e39b159e5aa4b81bfc9d7910f824627a09cb2f09d9727e"}, {"format": "3gp-363", "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_mlwrh4vf/forceproxy/true/name/a.3gp?__hdnea__=st=1481461912~exp=1481483512~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_5k54sqro/v/2/flavorId/1_mlwrh4vf/forceproxy/true/name/a.3gp*~hmac=e035d73d54059a7a6260766b0924b6c4d3f90505c44edae133f64cde68eb15ab"}]
formats := 3gp-363, mp4-465, mp4-664, mp4-964, mp4-1628, mp4-2628, mp4-3658, mp4-source, webm-819, meta, 476, 679, 987, 1667, 2691, 3745
best := 3745

-e "ref:=string-to-base64Binary(
      concat('http://',$host)
    )"
-f "let $a:=//script/json(extract(.,'burger=(.+):\(',1)[.])//externals return
    concat(
      'http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',
      $a//account,
      '&2:service=baseentry&2:action=get&2:entryId=',
      $a//data_id,
      '&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',
      $a//data_id
    )"
--xquery "name:=$json(2)/concat(
            'Disney - ',
            name,
            replace(
              createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
              '(\d+)-(\d+)-(\d+)',
              ' ($3$2$1)'
            )
          ),
          json:=[
            let $a:=concat(
              substring-before($json(2)/dataUrl,'format'),
              'flavorIds/',
              join($json(3)()[isWeb='true']/id,','),
              '/format/applehttp/protocol/http?referrer=',
              $ref
            ) return (
              {
                'format':'meta',
                'url':x:request(
                  {
                    'data':$a,
                    'method':'HEAD',
                    'error-handling':'4xx=accept'
                  }
                )/(
                  if (contains($headers[1],'404')) then
                    ()
                  else
                    url
                )
              },
              tail(
                tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')
              ) ! {
                'format':string(
                  extract(.,'BANDWIDTH=(\d+)',1) idiv 1000
                ),
                'url':extract(.,'(.+m3u8.+)',1)
              },
              $json(3)()/{
                'format':if (isOriginal='true') then
                  'mp4-source'
                else
                  concat(
                    fileExt,
                    '-',
                    bitrate
                  ),
                'url':x:request(
                  {
                    'data':concat(
                      $json(2)/dataUrl,
                      '/flavorId/',
                      id,
                      '?referrer=',
                      $ref
                    ),
                    'method':'HEAD',
                    'error-handling':'4xx=accept'
                  }
                )/(
                  if (contains($headers[1],'404')) then
                    ()
                  else
                    url
                )
              }[url]
            )
          ],
          let $b:=(
            for $x in $json()[contains(format,'-')]/format order by $x return $x,
            $json()[format='meta']/format,
            for $x in $json()[format castable as double]/format order by $x return $x
          ) return (
            formats:=join($b,', '),
            best:=$b[last()]
          )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://www.cartoonnetwork.nl/videos/intro-lied" -f "concat('http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',//@data-partner-id,'&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',//@data-video-id,'&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',//@data-video-id)" --xquery "name:=$json(2)/concat('Cartoon Network - ',name,replace(createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=[$json(3)()/{'format':if (isOriginal='true') then 'mp4-source' else concat(fileExt,'-',bitrate),'url':x:request({'data':concat(substring-before($json(2)/downloadUrl,'raw'),'playManifest/entryId/',$json(2)/id,'/flavorId/',id,'/format/url/protocol/http/a.',fileExt),'method':'HEAD','error-handling':'4xx=accept'})/(if (contains(headers[1],'404')) then () else url)}[url]],let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()])"
name := Cartoon Network - OTGW - Intro Song - NL (27102015)
json := [{"format": "mp4-source", "url": "http://cfvod.kaltura.com/pd/p/1745101/sp/174510100/serveFlavor/entryId/1_wcq8svyb/v/11/flavorId/1_vmo6w5me/name/a.mp4"}, {"format": "mp4-468", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_4yxhgjqf_1.mp4"}, {"format": "mp4-665", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_hrfcq5kv_1.mp4"}, {"format": "mp4-808", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_157xchqy_1.mp4"}, {"format": "mp4-1410", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_t1sgf7sq_1.mp4"}, {"format": "mp4-2297", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_y4zh6jf7_1.mp4"}, {"format": "mp4-3805", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_7vssax6s_1.mp4"}]
formats := mp4-468, mp4-665, mp4-808, mp4-1410, mp4-2297, mp4-3805, mp4-source
best := mp4-source

-f "concat(
      'http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',
      //@data-partner-id,
      '&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',
      //@data-video-id,
      '&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',
      //@data-video-id
    )"
--xquery "name:=$json(2)/concat(
            'Cartoon Network - ',
            name,
            replace(
              createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
              '(\d+)-(\d+)-(\d+)',
              ' ($3$2$1)'
            )
          ),
          json:=[
            $json(3)()/{
              'format':if (isOriginal='true') then
                'mp4-source'
              else 
                concat(
                  fileExt,
                  '-',
                  bitrate
                ),
              'url':x:request(
                {
                  'data':concat(
                    substring-before($json(2)/downloadUrl,'raw'),
                    'playManifest/entryId/',
                    $json(2)/id,
                    '/flavorId/',
                    id,
                    '/format/url/protocol/http/a.',
                    fileExt
                  ),
                  'method':'HEAD',
                  'error-handling':'4xx=accept'
                }
              )/(
                if (contains(headers[1],'404')) then
                  ()
                else
                  url
              )
            }[url]
          ],
          let $a:=for $x in $json()/format order by $x return $x return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://vtm.be/belgiums-got-talent/monden-vallen-open-bij-de-knalprestatie-van-2sdc-crew" --xquery "let $a:=concat(//meta[@property='og:site_name']/@content,if (//meta[@itemprop='articleProgram']) then concat(' - ',//meta[@itemprop='articleProgram']/@content) else ()) return let $b:=[{'1e':{'name':replace(concat($a,' - ',//meta[@property='og:title']/@content,replace((//@datetime[1],//meta[@property='article:published_time']/@content),'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]',''''''),'url'://source/@src}},//script/json(extract(.,'vmmaplayer=(.+);',1)[.])/{position()+1||'e':{'name':concat($a,' - ',title,replace(videoUrl,'.+?(\d+)/(\d+)/(\d+).+',' ($3$2$1)')),'url':videoUrl}}] return if ($b()('2e')) then (json:=$b,videos:=join($json()(),', ')) else $b()('1e') ! (name:=name,v_url:=url)"
name := VTM - Belgium''s Got Talent - Monden vallen open bij de knalprestatie van 2SDC Crew! (23122016)
v_url := http://flvpd.vtm.be/videocms/vmma/2016/12/23/201612231323275010034065084005056B7305C0000004916B00000D0F059198.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217811-rechters-snoeihard-na-uitspraken-de-wever" --xquery "let $a:=concat(//meta[@property='og:site_name']/@content,if (//meta[@itemprop='articleProgram']) then concat(' - ',//meta[@itemprop='articleProgram']/@content) else ()) return let $b:=[{'1e':{'name':replace(concat($a,' - ',//meta[@property='og:title']/@content,replace((//@datetime[1],//meta[@property='article:published_time']/@content),'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]',''''''),'url'://source/@src}},//script/json(extract(.,'vmmaplayer=(.+);',1)[.])/{position()+1||'e':{'name':concat($a,' - ',title,replace(videoUrl,'.+?(\d+)/(\d+)/(\d+).+',' ($3$2$1)')),'url':videoUrl}}] return if ($b()('2e')) then (json:=$b,videos:=join($json()(),', ')) else $b()('1e') ! (name:=name,v_url:=url)"
name := VTM NIEUWS - Rechters snoeihard na uitspraken De Wever (10122016)
v_url := http://flvpd.vtm.be/videocms/nieuws/2016/12/10/201612101312391010034065084005056B7305C0000004916B00000D0F034975.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217669-de-wever-haalt-uit-naar-rechters" --xquery "let $a:=concat(//meta[@property='og:site_name']/@content,if (//meta[@itemprop='articleProgram']) then concat(' - ',//meta[@itemprop='articleProgram']/@content) else ()) return let $b:=[{'1e':{'name':replace(concat($a,' - ',//meta[@property='og:title']/@content,replace((//@datetime[1],//meta[@property='article:published_time']/@content),'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]',''''''),'url'://source/@src}},//script/json(extract(.,'vmmaplayer=(.+);',1)[.])/{position()+1||'e':{'name':concat($a,' - ',title,replace(videoUrl,'.+?(\d+)/(\d+)/(\d+).+',' ($3$2$1)')),'url':videoUrl}}] return if ($b()('2e')) then (json:=$b,videos:=join($json()(),', ')) else $b()('1e') ! (name:=name,v_url:=url)"
json := [{"1e": {"name": "VTM NIEUWS - De Wever haalt uit naar rechters (09122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/09/201612091914374010034065084005056B7305C0000004916B00000D0F034130.mp4"}}, {"2e": {"name": "VTM NIEUWS - Video: Theo Francken stapt naar Cassatie (08122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/08/201612081921518010034065084005056B7305C0000004916B00000D0F032052.mp4"}}, {"3e": {"name": "VTM NIEUWS - Video: België betaalt dwangsom voor Syrische familie (26102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/26/201610261943566010034065084005056B7305C0000005076B00000D0F089298.mp4"}}, {"4e": {"name": "VTM NIEUWS - Video: Francken in beroep na heisa rond dwangsom (27102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/27/201610271318187010034065084005056B7305C0000005076B00000D0F090649.mp4"}}]
videos := 1e, 2e, 3e, 4e

--xquery "let $a:=concat(
            //meta[@property='og:site_name']/@content,
            if (//meta[@itemprop='articleProgram']) then
              concat(' - ',//meta[@itemprop='articleProgram']/@content)
            else
              ()
          ) return
          let $b:=[
            {
              '1e':{
                'name':replace(
                  concat(
                    $a,
                    ' - ',
                    //meta[@property='og:title']/@content,
                    replace(
                      (//@datetime[1],//meta[@property='article:published_time']/@content),
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  '[&quot;&apos;]',
                  ''''''
                ),
                'url'://source/@src
              }
            },
            //script/json(
              extract(.,'vmmaplayer=(.+);',1)[.]
            )/{
              position()+1||'e':{
                'name':concat(
                  $a,
                  ' - ',
                  title,
                  replace(
                    videoUrl,
                    '.+?(\d+)/(\d+)/(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                'url':videoUrl
              }
            }
          ] return
          if ($b()('2e')) then (
            json:=$b,
            videos:=join($json()(),', ')
          ) else
            $b()('1e') ! (
              name:=name,
              v_url:=url
            )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://www.foxtv.nl/programmas/fox/the-simpsons/videos/inglorious-bastards-the-simpsons-seizoen-24-aflevering-8" -e "date:=replace(extract($raw,'publishingDate=(\d{8})',1),'(\d{4})(\d{2})(\d{2})',' ($3$2$1)')" -f "extract($raw,'tp:releaseUrl=\"(.+^)\"',1)" --xquery "name:=concat('FOX - ',replace(//param[@name='fullTitle']/@value,'[&quot;&apos;]',''''''),$date),s_url:=//textstream[@lang='nl'][@type='text/srt']/@src" -f "//video/@src" --xquery "json:=[{'format':'meta','url':$url},tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8)',1)}],let $a:=($json()[format='meta']/format,for $x in $json()[format!='meta']/format order by $x return $x) return (formats:=join($a,', '),best:=$a[last()])"
date :=  (16122016)
name := FOX - Inglorious Bastards - The Simpsons - S24E8 (16122016)
s_url := http://sire-foxnl-pmd.fichub.com/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~nl~~~1.srt
json := [{"format": "meta", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/master.m3u8?__b__=1200"}, {"format": "1281", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_3_av.m3u8"}, {"format": "4033", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_0_av.m3u8"}, {"format": "2493", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_1_av.m3u8"}, {"format": "1870", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_2_av.m3u8"}, {"format": "655", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_4_av.m3u8"}, {"format": "458", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_5_av.m3u8"}]
formats := meta, 458, 655, 1281, 1870, 2493, 4033
best := 4033

-e "date:=replace(
      extract($raw,'publishingDate=(\d{8})',1),
      '(\d{4})(\d{2})(\d{2})',
      ' ($3$2$1)'
    )"
-f "extract($raw,'tp:releaseUrl=\"(.+^)\"',1)"
--xquery "name:=concat(
            'FOX - ',
            replace(
              //param[@name='fullTitle']/@value,
              '[&quot;&apos;]',
              ''''''
            ),
            $date
          ),
          s_url:=//textstream[@lang='nl'][@type='text/srt']/@src"
-f "//video/@src"
--xquery "json:=[
            {
              'format':'meta',
              'url':$url
            },
            tail(
              tokenize($raw,'#EXT-X-STREAM-INF:')
            ) ! {
              'format':string(
                extract(.,'BANDWIDTH=(\d+)',1) idiv 1000
              ),
              'url':extract(.,'(.+m3u8)',1)
            }
          ],
          let $a:=(
            $json()[format='meta']/format,
            for $x in $json()[format!='meta']/format order by $x return $x
          ) return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-opc-2012/" -e "let $a:=[//script/reverse(extract(.,'(http.+mp4)',1,'*')[.]) ! {'format':concat('mp4-',position()),'url':.}] return (name:=concat('ABHD - ',//div[@id='playerObject']//a,replace($a(1)/url,'.+?/(\d+)/(\d{2})(\d{2}).+',' ($3$2$1)')),if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := ABHD - Opel Astra OPC 2012 (25062012)
v_url := http://static.autojunk.nl/flv/2012/0625/120055_hq.mp4

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-j-2009-2015-occasion/" -e "let $a:=[//script/reverse(extract(.,'(http.+mp4)',1,'*')[.]) ! {'format':concat('mp4-',position()),'url':.}] return (name:=concat('ABHD - ',//div[@id='playerObject']//a,replace($a(1)/url,'.+?/(\d+)/(\d{2})(\d{2}).+',' ($3$2$1)')),if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := ABHD - Opel Astra J (2009-2015) occasion (10112016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1110/095704_hq.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1110/095704_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

-e "let $a:=[
      //script/reverse(
        extract(.,'(http.+mp4)',1,'*')[.]
      ) !
        {
          'format':concat('mp4-',position()),
          'url':.
        }
    ] return (
      name:=concat(
        'ABHD - ',
        //div[@id='playerObject']//a,
        replace(
          $a(1)/url,
          '.+?/(\d+)/(\d{2})(\d{2}).+',
          ' ($3$2$1)'
        )
      ),
      if (count($a()/url)=1) then
        v_url:=$a()/url
      else (
        json:=$a,
        let $b:=$a()/format return (
          formats:=join($b,', '),
          best:=$b[last()]
        )
      )
    )"

================================================================================================================================

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/the-fate-of-the-furious" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - The Fate of the Furious (09122016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1209/185214.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1209/185214_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/ferrari-488-gtb-by-xxx-performance-w-capristo-exhaust" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - Ferrari 488 GTB by xXx Performance w/ Capristo Exhaust (10122016)
v_url := https://youtu.be/Y9snaArzog8

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2009/11/peugeot-206-rally-crash" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - Peugeot 206 rally crash (15112009)
v_url := http://static.autojunk.nl/flv/2009/1115/135833.mp4

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2007/03/7-seconden-op-de-ring" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - 7 seconden op de ring (23032007)
v_url := http://static.autojunk.nl/flv/2007/0323/120040.flv

-e "name:=concat(
      'Autojunk - ',
      //meta[@property='og:title']/@content,
      replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')
    ),
    //div[@id='playerWrapper']/(
      if (iframe) then
        v_url:=replace(
          iframe/@src,
          '.+/(.+)',
          'https://youtu.be/$1'
        )
      else
        let $a:=[
          script/extract(.,'myfile = ''(.+)''',1,'*')[.] !
            {
              'format':concat(replace(.,'.+\.(.+)','$1-'),position()),
              'url':.
            }
        ] return
        if (count($a()/url)=1) then
          v_url:=$a()/url
        else (
          json:=$a,
          let $b:=$a()/format return (
            formats:=join($b,', '),
            best:=$b[last()]
          )
        )
    )"
