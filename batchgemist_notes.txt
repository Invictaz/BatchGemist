[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]
[https://github.com/Reino17/BatchGemist/commit/c3ebc47b93bf8f4694a690188ed4d04dc02f8069]
[https://github.com/Reino17/BatchGemist/commit/b0d5b4722930cef75568492b4848f72bb8cd3bd0]

http://www.npo.nl/china-blaast-nieuw-leven-in-zijderoutes/20-08-2016/WO_NOS_4863988
videofragment in meerdere formaten:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"}]

http://www.npo.nl/volleybalsters-grijpen-naast-bronzen-medaille/20-08-2016/WO_NOS_4863992
beveiligd videofragment in meerdere formaten:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4"}]

http://www.npo.nl/promo-opgelicht-06-09-2016/05-09-2016/WO_AT_4993516
videofragment in meerdere formaten, met voor het formaat met de hoogste resolutie het attribuut "type" i.p.v. "formaat" en "kwaliteit":
[{"formaat": "h264", "kwaliteit": 2, "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v"}, {"formaat": "h264", "kwaliteit": 1, "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v"}, {"type": "h264", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v"}]

http://www.npo.nl/slimmer-in-een-minuut-sociale-robots/20-10-2016/WO_NPO_5486659
videofragment in één formaat met 'uri-decoded' videolink, die dus zonder '%20' niet werkt:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4"}]

http://www.npo.nl/escaperoom-8-jill/21-10-2016/WO_KN_5639189
videofragment in meerdere formaten, maar welke onbeschikbaar is ('HTTP/1.1 404 Not Found'):
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4"}]

http://www.npo.nl/reacties-binnenhof/10-11-2016/WO_NOS_5947382
videofragment in één formaat met een in eerste instantie al herleide url, die dus niet werkt:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4"}]
de NPO heeft het in de tussentijd gecorrigeerd, want deze werkt wel:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4"}]

http://www.npo.nl/willem-wever/14-01-2006/NCRV_1210567
'Windows Media' videostream in meerdere formaten:
[{"formaat": "wmv", "kwaliteit": 2, "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf"}, {"formaat": "wmv", "kwaliteit": 1, "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]

http://www.npo.nl/zigeunermuziek-doet-pijn/21-07-2010/WO_VPRO_043833
'Windows Media' videostream in één formaat (zeldzaam):
[{"formaat": "wmv", "kwaliteit": 2, "url": "http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf"}]

-------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4",
  "type": "text/plain;charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 missing credentials",
    "Date: Fri, 23 Dec 2016 22:12:17 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://s.nos.nl/img/video/geen-toegang.png",
    "Content-Length: 20",
    "Cache-Control: no-cache",
    "X-WorkerInstancename: dlr2c",
    "Content-Type: text/plain;charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2cfp; path=/;",
    "Connection: close",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'post':'[{\"file\":\"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4\"}]','url':'http://nos.nl/video/resolve/'})"
{
  "url": "http://nos.nl/video/resolve/",
  "type": "application/json",
  "headers": [
    "HTTP/1.1 200 OK",
    "Server: nginx/1.11.4",
    "Content-Type: application/json",
    "Transfer-Encoding: chunked",
    "Connection: keep-alive",
    "Vary: Accept-Encoding",
    "X-Powered-By: PHP/5.6.26",
    "Cache-Control: no-cache",
    "Date: Fri, 23 Dec 2016 22:14:47 GMT",
    "X-Instance-Name: nos1lwb.omroep.nl",
    "",
    "\u0000\u0000"
  ],
  "raw": "[{\"file\":\"https:\\/\\/video.omroep.nl\\/secure\\/ccfc7a0123a798997df810a274a3e239\\/585da1d7\\/nos\\/content-ip\\/mp4\\/web03\\/2016\\/08\\/20\\/274109.mp4\"}]",
  "json": [
    {
      "file": "https://video.omroep.nl/secure/ccfc7a0123a798997df810a274a3e239/585da1d7/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"
    }
  ]
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",		// Xidel 'uri-encode' urls automatisch als dat nodig is.
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 Found",
    "Date: Fri, 23 Dec 2016 22:19:30 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://content1d.omroep.nl/urishieldv2/l27m0990c6a41ede5b6800585da2f2000000.0cfe89d69980b45324a48f9323803f69/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",
    "Cache-Control: \"max-age=60\"",
    "Expires: Fri, 23 Dec 2016 22:20:30 GMT",
    "X-WorkerInstancename: dlr2a",
    "Content-Type: text/html; charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2afp; path=/;",
    "Connection: close",
    "",
    "\u0000n"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 404 Not Found",
    "Date: Fri, 23 Dec 2016 22:21:11 GMT",
    "Server: Apache/2.4.23 (Unix) OpenSSL/1.0.2j",
    "Last-Modified: Wed, 09 Apr 2014 12:15:10 GMT",
    "ETag: \"758-4f69b0d478f80\"",
    "Accept-Ranges: bytes",
    "Content-Length: 1880",
    "X-ProxyInstancename: dlr1b",
    "Connection: close",
    "Content-Type: text/html",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 403 Forbidden",
    "Server: nginx/1.11.4",
    "Date: Fri, 23 Dec 2016 22:23:39 GMT",
    "Content-Type: text/html",
    "Content-Length: 169",
    "Connection: keep-alive",
    "X-EdgeError: lmhash mismatch [cb4aa61336292e4528b6440a973fdecc]",
    "X-Instance-Name: dl1afp.omroep.nl",
    "",
    "\u0000?"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 Found",
    "Date: Fri, 30 Dec 2016 12:58:03 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://content1c.omroep.nl/urishieldv2/l27m0657993561fb87e800586659db000000.1949881edf7c6f09e653ad311ab7b58e/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
    "Cache-Control: \"max-age=60\"",
    "Expires: Fri, 30 Dec 2016 12:59:03 GMT",
    "X-WorkerInstancename: dlr2a",
    "Content-Type: text/html; charset=UTF-8",
    "X-ProxyInstancename: dlr1a",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2afp; path=/;",
    "Connection: close",
    "",
    "\u0000m"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf",
  "type": "video/x-ms-wmv",
  "headers": [
    "HTTP/1.1 200 OK",
    "Date: Sat, 31 Dec 2016 13:32:34 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Content-Length: 178",
    "Pragma: no-cache",
    "Cache-Control: no-cache",
    "X-WorkerInstancename: sapi2a",
    "Content-Type: video/x-ms-wmv",
    "X-ProxyInstancename: sapi1b",
    "Set-Cookie: balancer://sapi2cluster=balancer.sapi2a; path=/;",
    "Keep-Alive: timeout=1, max=100",
    "Connection: Keep-Alive",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

-------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'302')) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'40')) then () else url)"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'200')) then url else if (contains(headers[1],'302')) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

-------------------------------------------------------------------------------------------------------------------------------

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else url)} return $a"
{
  "format": "mp4-3",
  "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"
}
{
  "format": "mp4-2",
  "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": "https://video.omroep.nl/secure/ba015198a1db78f6c4eaf1696c5fb33e/586662c4/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"
}
{
  "format": "mp4-2",
  "url": "https://video.omroep.nl/secure/7eb67accaf222a86ab36fca2ad5a9eb1/586662c5/nos/content-ip/ipod/2016/08/20/274109.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": null
}
{
  "format": "mp4-2",
  "url": null
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "wmv-2",
  "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=58666396&wmhash=3ad17bb6"
}
{
  "format": "wmv-1",
  "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=58666396&wmhash=59bc589c"
}
{
  "format": "mp4-2",
  "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"
}

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "wmv-2",
  "url": "mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=58666ccb&wmhash=4d5da383"
}

-------------------------------------------------------------------------------------------------------------------------------

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else url)}[url] return if ($a) then if (count($a)=1) then v_url:=$a/url else (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "mp4-3", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"}, {"format": "mp4-2", "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
json := [{"format": "mp4-3", "url": "https://video.omroep.nl/secure/ed64cb4aef309da7eac655c4a7207e99/585db2df/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"}, {"format": "mp4-2", "url": "https://video.omroep.nl/secure/b4357506b4e714f8058bc7bffa27ba63/585db2df/nos/content-ip/ipod/2016/08/20/274109.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
v_url := http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
json := [{"format": "wmv-2", "url": "mms://hurley.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=585db375&wmhash=133cf8ce"}, {"format": "wmv-1", "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=585db375&wmhash=66f209f6"}, {"format": "mp4-2", "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]
formats := wmv-1, wmv-2, mp4-2
best := mp4-2

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
v_url := mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=585db3e1&wmhash=5abbdbb3

-------------------------------------------------------------------------------------------------------------------------------

--xquery "let $a:=$json()/{
            'format':if (type) then
              concat(
                'mp4-',
                max($json()/kwaliteit)+1
              )
            else
              concat(
                if (formaat='h264') then
                  'mp4'
                else
                  formaat,
                '-',
                kwaliteit
              ),
            'url':x:request(
              {
                'data':url,
                'method':'HEAD',
                'error-handling':'xxx=accept'
              }
            )[some $x in ('200','302') satisfies contains(headers[1],$x)]/(
              if (ends-with(url,'asf')) then
                doc(url)//@href
              else if (contains(url,'content-ip')) then
                x:request(
                  {
                    'post':serialize-json(
                      [
                        {
                          \"file\":url
                        }
                      ]
                    ),
                    'url':'http://nos.nl/video/resolve/'
                  }
                )//file
              else
                url
            )
          }[url] return
          if ($a) then
            if (count($a)=1) then
              v_url:=$a/url
            else (
              json:=[$a],
              let $b:=(
                for $x in $json()[contains(format,'wmv')]/format order by $x return $x,
                for $x in $json()[contains(format,'mp4')]/format order by $x return $x
              ) return (
                formats:=join($b,', '),
                best:=$b[last()]
              )
            )
          else
            ()"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]

http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html (artikel met 1 video)
http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html (1 video)
http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html (artikel met 1 beveiligde video)
http://nos.nl/video/2128675-het-eredivisieweekend-in-vogelvlucht.html (1 beveiligde video)
http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html (artikel met 2 losse video's)
http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html (artikel met 2 video's in slide)
http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html (artikel met 4 beveiligde video's)

xidel-0.9.6.exe -s --color=never "http://nos.nl/uitzending/18162-nos-journaal.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Journaal (29082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/mp4/web01/2016/08/29/18162/mp4_web01.mp4"}, {"format": "mp4-720", "url": "http://download.omroep.nl/nos/content/mp4/web02/2016/08/29/18162/mp4_web02.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/29/18162/mp4_web03.mp4"}]
formats := mp4-360, mp4-480, mp4-720
best := mp4-720

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html" --xquery "..."
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html" --xquery "..."
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html" --xquery "..."
name := NOS - Het eredivisieweekend in vogelvlucht (29082016)
json := [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/4e9d66815ca103cc38e6aee137622a21/585e6b5f/nos/content-ip/video/2016/08/29/171451/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/dd18c8f172f6be0f17195be6b369a543/585e6b5f/nos/content-ip/video/2016/08/29/171451/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html" --xquery "..."
json := [{"1e": {"name": "NOS - Nabestaande: de kinderen zijn getekend voor het leven (29082016)", "
formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/web03.mp4"}]}}, {"2e": {"name": "NOS - Verklaring van verdachte dodelijk ongeluk A2: ''Ik moest gewoon hard rijden'' (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html" --xquery "..."
json := [{"1e": {"name": "NOS - 2015: Van Oostveen geeft aan Hiddink te willen behouden voor KNVB (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/web03.mp4"}]}}, {"2e": {"name": "NOS - ''KNVB stapelt fout op fout'' (21082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html" --xquery "..."
json := [{"1e": {"name": "NOS - Bertens komt net tekort voor titel in Gstaad (17072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/97e014e44918d1ce0d4fbb6afe4a172a/585e6c6b/nos/content-ip/video/2016/07/17/168011/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/41166b2fbb769e23af44dafd26572b10/585e6c6b/nos/content-ip/video/2016/07/17/168011/web03.mp4"}]}}, {"2e": {"name": "NOS - Bertens niet opgewassen tegen Halep (02072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/6fc13aad534188e85e69c92df24be43d/585e6c6b/nos/content-ip/video/2016/07/02/166777/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/c9733b44ea59b860f715cc50f6b83374/585e6c6b/nos/content-ip/video/2016/07/02/166777/web03.mp4"}]}}, {"3e": {"name": "NOS - Bertens in eerste ronde Rio onderuit (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/0182bea4ab8217d03cbfb6dc0126c419/585e6c6b/nos/content-ip/video/2016/08/06/169289/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/170ae8f74c109c4b647283d19c6e474c/585e6c6b/nos/content-ip/video/2016/08/06/169289/web03.mp4"}]}}, {"4e": {"name": "NOS - Bertens na snelle exit: zware omstandigheden (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/2a65d3505c3086129bd9b32f214ae0e9/585e6c6b/nos/content-ip/video/2016/08/06/169295/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/757c9d0af5af41d68b4a21ac4e62c86e/585e6c6b/nos/content-ip/video/2016/08/06/169295/web03.mp4"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "if (//div[@class='video-play']) then
            if (count(//div[@class='video-play'])=1) then
              doc(
                //div[@class='video-play']/a/@href
              )/(
                name:=concat(
                  'NOS - ',
                  replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                ),
                  replace(
                    //@datetime,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                json:=[
                  //source/{
                    'format':replace(
                      @data-label,
                      '.+?(\d+).',
                      'mp4-$1'
                    ),
                    'url':if (contains(@src,'content-ip')) then
                      x:request(
                        {
                          'post':serialize-json(
                            [
                              {
                                \"file\":string(@src)
                              }
                            ]
                          ),
                          'url':'http://nos.nl/video/resolve/'
                        }
                      )//file
                    else
                      @src
                  }
                ]
              )
            else
              json:=[
                //div[@class='video-play']/a/doc(@href)/{
                  position()||'e':{
                    'name':concat(
                      'NOS - ',
                      replace(
                        //meta[@property='og:title']/@content,
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        //@datetime,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats'://source/{
                      'format':replace(
                        @data-label,
                        '.+?(\d+).',
                        'mp4-$1'
                      ),
                      'url':if (contains(@src,'content-ip')) then
                        x:request(
                          {
                            'post':serialize-json(
                              [
                                {
                                  \"file\":string(@src)
                                }
                              ]
                            ),
                            'url':'http://nos.nl/video/resolve/'
                          }
                        )//file
                      else
                        @src
                    }
                  }
                }
              ]
          else (
            name:=concat(
              'NOS - ',
              if (//meta[@property='og:title']) then
                replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                )
              else
                substring-after(//h1,'NOS '),
              replace(
                //@datetime,
                '(\d+)-(\d+)-(\d+).+',
                ' ($3$2$1)'
              )
            ),
            json:=[
              //source/{
                'format':replace(
                  @data-label,
                  '.+?(\d+).',
                  'mp4-$1'
                ),
                'url':if (contains(@src,'content-ip')) then
                  x:request(
                    {
                      'post':serialize-json(
                        [
                          {
                            \"file\":string(@src)
                          }
                        ]
                      ),
                      'url':'http://nos.nl/video/resolve/'
                    }
                  )//file
                else
                  @src
              }
            ]
          ),
          if ($json(1)/format) then
            let $a:=for $x in $json()/format order by $x return $x return (
              formats:=join($a,', '),
              best:=$a[last()]
            )
          else
            videos:=join($json()(),', ')"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8f8798c92ced113028ddfb01a4b7dbd3dabfbd5a]
[https://github.com/Reino17/BatchGemist/commit/e38e7c24b240921304fc19832a1218d6ada89237]

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -e "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')"
http://c.brightcove.com/services/viewer/htmlFederated?isVid=1&isUI=1&publisherID=20318290001&playerID=2234112204001&autoStart=false&domain=embed&@videoPlayer=5095479777001&branding=sbs&playertitle=true&linkBaseURL=http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123?sbs_device=pc

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -f "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')" --xquery "json(extract(//body,'experienceJSON = (.+\});',1))/(if (.//mediaDTO) then .//mediaDTO/(name:=concat(if (customFields/sbs_station='veronicatv') then 'Veronica' else upper-case(customFields/sbs_station),' - ',displayName,replace(creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=if ((renditions)()[size=0]) then [let $a:=(renditions)()[size=0]/defaultURL return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}),json(concat('http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',id))/(videos)() ! {'format':replace(.,'.+-(\d+).*\.(.+)','$2-$1'),'url':.}] else [(renditions)()/{'format':concat('mp4_',encodingRate idiv 1000),'url':defaultURL}],let $b:=(for $x in $json()[contains(format,'mp4')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ())"
name := SBS6 - De Smaakpolitie: Aflevering 123 (23082016)
json := [{"format": "meta", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/sbs6_desmaakpolitie_S00E123_160823101909613418-hls-main.m3u8"}, {"format": "610", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r1/sbs6_desmaakpolitie_S00E123_160823101007613418-hls-350.m3u8"}, {"format": "928", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r2/sbs6_desmaakpolitie_S00E123_160823101038613418-hls-650.m3u8"}, {"format": "1288", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r3/sbs6_desmaakpolitie_S00E123_160823100125613418-hls-900.m3u8"}, {"format": "1643", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r4/sbs6_desmaakpolitie_S00E123_160823101148613418-hls-1200.m3u8"}, {"format": "2179", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r8/sbs6_desmaakpolitie_S00E123_160823100831613418-hls-1885.m3u8"}, {"format": "mp4-350", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101306613418-bg-350.mp4"}, {"format": "mp4-650", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823095841613418-bg-650.mp4"}, {"format": "mp4-900", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101358613418-bg-900.mp4"}, {"format": "mp4-1200", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100603613418-bg-1200.mp4"}, {"format": "mp4-1885", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100449613418-bg-1885.mp4"}]
formats := mp4-350, mp4-650, mp4-900, mp4-1200, mp4-1885, meta, 610, 928, 1288, 1643, 2179
best := 2179

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/KxsFnNTV9Njv/het-is-weer-smerig-vies" -f "..." --xquery "..."
name := SBS6 - Het is weer smerig vies (21122012)
json := [{"format": "mp4_287", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4"}, {"format": "mp4_975", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4"}, {"format": "mp4_608", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4"}, {"format": "mp4_1611", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4"}]
formats := mp4_287, mp4_608, mp4_975, mp4_1611
best := mp4_1611

-------------------------------------------------------------------------------------------------------------------------------
xidel-0.9.6.exe -s --color=never "http://embed.kijk.nl/video/QoULoMK4ulxd" -f "replace($url,'embed','www')" -f "..." --xquery "..."
name := SBS6 - Shownieuws (28012017)
json := [{"format": "meta", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/clip___170128221149061506-hls-main-pv.m3u8"}, {"format": "610", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r1/clip___170128221147061506-hls-350-pv.m3u8"}, {"format": "928", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r2/clip___170128220952061506-hls-650-pv.m3u8"}, {"format": "1288", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r3/clip___170128220905061506-hls-900-pv.m3u8"}, {"format": "1643", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r4/clip___170128220804061506-hls-1200-pv.m3u8"}, {"format": "2179", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r8/clip___170128221106061506-hls-1885-pv.m3u8"}, {"format": "mp4-350", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220649061506-bg-350-pv.mp4"}, {"format": "mp4-650", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220550061506-bg-650-pv.mp4"}, {"format": "mp4-900", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220528061506-bg-900-pv.mp4"}, {"format": "mp4-1200", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220459061506-bg-1200-pv.mp4"}, {"format": "mp4-1885", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220607061506-bg-1885-pv.mp4"}]
formats := mp4-350, mp4-650, mp4-900, mp4-1200, mp4-1885, meta, 610, 928, 1288, 1643, 2179
best := 2179
-------------------------------------------------------------------------------------------------------------------------------

-f "replace(
      $url,
      'embed',
      'www'
    )"
-f "replace(
      replace(
        parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,
        'federated_f9',
        'htmlFederated'
      ),
      'videoId',
      '@videoPlayer'
    )"
--xquery "json(
            extract(
              //body,
              'experienceJSON = (.+\});',1
            )
          )/(
            if (.//mediaDTO) then
              .//mediaDTO/(
                name:=concat(
                  if (customFields/sbs_station='veronicatv') then
                    'Veronica'
                  else
                    upper-case(customFields/sbs_station),
                  ' - ',
                  displayName,
                  replace(
                    creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),
                    '(\d+)-(\d+)-(\d+)',
                    ' ($3$2$1)'
                  )
                ),
                json:=if ((renditions)()[size=0]) then [
                  let $a:=(renditions)()[size=0]/defaultURL return (
                    {
                      'format':'meta',
                      'url':$a
                    },
                    tail(
                      tokenize(
                        unparsed-text($a),
                        '#EXT-X-STREAM-INF:'
                      )
                    ) ! {
                      'format':string(
                        extract(
                          .,
                          'BANDWIDTH=(\d+)',1
                        ) idiv 1000
                      ),
                      'url':concat(
                        resolve-uri('.',$a),
                        extract(
                          .,'(.+m3u8)',1
                        )
                      )
                    }
                  ),
                  json(
                    concat(
                      'http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',
                      id
                    )
                  )/(videos)() ! {
                    'format':replace(
                      .,
                      '.+-(\d+).*\.(.+)',
                      '$2-$1'
                    ),
                    'url':.
                  }
                ] else [
                  (renditions)()/{
                    'format':concat('mp4_',
                      encodingRate idiv 1000
                    ),
                    'url':defaultURL
                  }
                ],
                let $b:=(
                  for $x in $json()[contains(format,'mp4')]/format order by $x return $x,
                  $json()[format='meta']/format,
                  for $x in $json()[format castable as int]/format order by $x return $x
                ) return (
                  formats:=join($b,', '),
                  best:=$b[last()]
                )
              )
            else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8252ce0275f281dcc32fa0c3be397061c0b83386]

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -e "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]"
http://video.disney.nl/embed/54637ca563d5fc6b66f3ba8d

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "json(//script/extract(.,'(\{.+);',1)[.])/(.//externals)[1]/(concat('Disney - ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),.//dataUrl)"
Disney - Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "json(//script/extract(.,'(\{.+);',1)[.])//flavors/join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),',')"
1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "let $ref:=string-to-base64Binary(concat('http://',$host)) return json(//script/extract(.,'(\{.+\})',1)[.])/((.//externals)()[1]/(name:=concat('Disney- ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),dataUrl:=.//dataUrl),m3u8:=.//flavors/concat(substring-before($dataUrl,'format'),'flavorIds/',join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),','),'/format/applehttp/protocol/http?referrer=',$ref))"
name := Disney- Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
dataUrl := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http
m3u8 := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/flavorIds/1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1/format/applehttp/protocol/http?referrer=aHR0cDovL3ZpZGVvLmRpc25leS5ubA==

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" --xquery "let $ref:=string-to-base64Binary(concat('http://',$host)) return json(//script/extract(.,'(\{.+\})',1)[.])/((.//externals)()[1]/(name:=concat('Disney- ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),dataUrl:=.//dataUrl),json:=[let $a:=.//flavors/concat(substring-before($dataUrl,'format'),'flavorIds/',join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),','),'/format/applehttp/protocol/http?referrer=',$ref) return ({'format':'meta','url':x:request({'data':$a,'method':'HEAD','error-handling':'4xx=accept'})/(if (contains($headers[1],'404')) then () else url)},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8.+)',1)},(.//flavors)()[height!=0]/{'format':concat(replace(format,'.+-(.+)','$1'),'-',bitrate),'url':url})]),let $b:=(for $x in $json()[contains(format,'-')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])"
name := Disney - Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
dataUrl := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http
json := [
  {
    "format": "meta",
    "url": "http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/flavorIds/1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1/format/applehttp/protocol/http?referrer=aHR0cDovL3ZpZGVvLmRpc25leS5ubA=="
  },
  {
    "format": "480",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "684",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "987",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "1667",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "2691",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "3815",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "mp4-469",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_400)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_400)).mp4/forceproxy/true/name/a.mp4*~hmac=b7994c830ddc54aa2688dbd016d6f237df33483cabdaf9ba98fdca54b4192577"
  },
  {
    "format": "mp4-668",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_600)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_600)).mp4/forceproxy/true/name/a.mp4*~hmac=39a797cc2194e0a0a44bac7e72840d64bbcab6be48f34e83ec3590aee81d5a97"
  },
  {
    "format": "webm-834",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_affrsao7/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(WebM).webm/forceproxy/true/name/a.webm?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_affrsao7/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(WebM).webm/forceproxy/true/name/a.webm*~hmac=e1e3f9704e1e79bbdec1109d6e76a47f1645c67072b1ad66cce52468275aa689"
  },
  {
    "format": "mp4-964",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Small_-_WEB_MBL_(H264_900)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Small_-_WEB_MBL_(H264_900)).mp4/forceproxy/true/name/a.mp4*~hmac=ad039eeedc3bf5f7697c4e0095611a9d710ff79f5a1fea0624081ff863d3f3a8"
  },
  {
    "format": "mp4-1628",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Large_-_WEB_MBL_(H264_1500)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Large_-_WEB_MBL_(H264_1500)).mp4/forceproxy/true/name/a.mp4*~hmac=119a7594c8d70c2b24f89ddf465fb0b3d16447aa0dfabe0a2e688f54cf29aeee"
  },
  {
    "format": "mp4-2628",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_720_-_WEB_(H264_2500)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_720_-_WEB_(H264_2500)).mp4/forceproxy/true/name/a.mp4*~hmac=f4015c4df2aaeaf3d3b569741a2c32341d9430a5562a8bb1289c85b65023cf55"
  },
  {
    "format": "mp4-3726",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_1080_-_WEB_(H264_4000)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_1080_-_WEB_(H264_4000)).mp4/forceproxy/true/name/a.mp4*~hmac=06fc4547c43f622518f0f3e3b860a034daedd30b88b5ae7449d1bbc61c21d1f2"
  },
  {
    "format": "3gp-369",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_sqmco8lx/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Mobile_(3GP)).3gp/forceproxy/true/name/a.3gp?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_sqmco8lx/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Mobile_(3GP)).3gp/forceproxy/true/name/a.3gp*~hmac=5034bec57496766f84df309fd3ccafa1712939d3863e0c89c63f97b900c57877"
  }
]
formats := 3gp-369, mp4-469, mp4-668, mp4-964, mp4-1628, mp4-2628, mp4-3726, webm-834, meta, 480, 684, 987, 1667, 2691, 3815
best := 3815

-f "json(
      //script/extract(
        .,
        'burger=(.+):\(',1
      )[.]
    )/(.//embedURL)[1]"
--xquery "let $ref:=string-to-base64Binary(
            concat(
              'http://',
              $host
            )
          ) return
          json(
            //script/extract(
              .,
              '(\{.+\})',1
            )[.]
          )/(
            (.//externals)()[1]/(
              name:=concat(
                'Disney- ',
                .//name,
                replace(
                  .//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
                  '(\d+)-(\d+)-(\d+)',
                  ' ($3$2$1)'
                )
              ),
              dataUrl:=.//dataUrl
            ),
            json:=[
              let $a:=.//flavors/concat(
                substring-before(
                  $dataUrl,
                  'format'
                ),
                'flavorIds/',
                join(
                  .()[height!=0][format='mp4']/extract(
                    url,
                    'flavorId/(.+?)/',1
                  ),
                  ','
                ),
                '/format/applehttp/protocol/http?referrer=',
                $ref
              ) return (
                {
                  'format':'meta',
                  'url':x:request(
                    {
                      'data':$a,
                      'method':'HEAD',
                      'error-handling':'4xx=accept'
                    }
                  )/(
                    if (contains($headers[1],'404')) then
                      ()
                    else
                      url
                  )
                },
                tail(
                  tokenize(
                    unparsed-text($a),
                    '#EXT-X-STREAM-INF:'
                  )
                ) ! {
                  'format':string(
                    extract(
                      .,
                      'BANDWIDTH=(\d+)',1
                    ) idiv 1000
                  ),
                  'url':extract(
                    .,
                    '(.+m3u8.+)',1
                  )
                },
                (.//flavors)()[height!=0]/{
                  'format':concat(
                    replace(
                      format,
                      '.+-(.+)',
                      '$1'
                    ),
                    '-',
                    bitrate
                  ),
                  'url':url
                }
              )
            ]
          ),
          let $b:=(
            for $x in $json()[contains(format,'-')]/format order by $x return $x,
            $json()[format='meta']/format,
            for $x in $json()[format castable as int]/format order by $x return $x
          ) return (
            formats:=join($b,', '),
            best:=$b[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]

xidel-0.9.6.exe -s --color=never "http://www.cartoonnetwork.nl/videos/intro-lied" -f "concat('http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',//@data-partner-id,'&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',//@data-video-id,'&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',//@data-video-id)" --xquery "name:=$json(2)/concat('Cartoon Network - ',name,replace(createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=[$json(3)()/{'format':if (isOriginal='true') then 'mp4-source' else concat(fileExt,'-',bitrate),'url':x:request({'data':concat(substring-before($json(2)/downloadUrl,'raw'),'playManifest/entryId/',$json(2)/id,'/flavorId/',id,'/format/url/protocol/http/a.',fileExt),'method':'HEAD','error-handling':'4xx=accept'})/(if (contains(headers[1],'404')) then () else url)}[url]],let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()])"
name := Cartoon Network - OTGW - Intro Song - NL (27102015)
json := [{"format": "mp4-source", "url": "http://cfvod.kaltura.com/pd/p/1745101/sp/174510100/serveFlavor/entryId/1_wcq8svyb/v/11/flavorId/1_vmo6w5me/name/a.mp4"}, {"format": "mp4-468", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_4yxhgjqf_1.mp4"}, {"format": "mp4-665", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_hrfcq5kv_1.mp4"}, {"format": "mp4-808", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_157xchqy_1.mp4"}, {"format": "mp4-1410", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_t1sgf7sq_1.mp4"}, {"format": "mp4-2297", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_y4zh6jf7_1.mp4"}, {"format": "mp4-3805", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_7vssax6s_1.mp4"}]
formats := mp4-468, mp4-665, mp4-808, mp4-1410, mp4-2297, mp4-3805, mp4-source
best := mp4-source

-f "concat(
      'http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',
      //@data-partner-id,
      '&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',
      //@data-video-id,
      '&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',
      //@data-video-id
    )"
--xquery "name:=$json(2)/concat(
            'Cartoon Network - ',
            name,
            replace(
              createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
              '(\d+)-(\d+)-(\d+)',
              ' ($3$2$1)'
            )
          ),
          json:=[
            $json(3)()/{
              'format':if (isOriginal='true') then
                'mp4-source'
              else 
                concat(
                  fileExt,
                  '-',
                  bitrate
                ),
              'url':x:request(
                {
                  'data':concat(
                    substring-before(
                      $json(2)/downloadUrl,
                      'raw'
                    ),
                    'playManifest/entryId/',
                    $json(2)/id,
                    '/flavorId/',
                    id,
                    '/format/url/protocol/http/a.',
                    fileExt
                  ),
                  'method':'HEAD',
                  'error-handling':'4xx=accept'
                }
              )/(
                if (contains(headers[1],'404')) then
                  ()
                else
                  url
              )
            }[url]
          ],
          let $a:=for $x in $json()/format order by $x return $x return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/c6ce4400b6d335af7e9196703dfb45087e95a8e7]

xidel-0.9.6.exe -s --color=never "http://vtm.be/belgiums-got-talent/monden-vallen-open-bij-de-knalprestatie-van-2sdc-crew" --xquery "let $a:=concat(//meta[@property='og:site_name']/@content,if (//meta[@itemprop='articleProgram']) then concat(' - ',//meta[@itemprop='articleProgram']/@content) else ()) return let $b:=[{'1e':{'name':replace(concat($a,' - ',//meta[@property='og:title']/@content,replace((//@datetime[1],//meta[@property='article:published_time']/@content),'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]',''''''),'url'://source/@src}},//script/json(extract(.,'vmmaplayer=(.+);',1)[.])/{position()+1||'e':{'name':concat($a,' - ',title,replace(videoUrl,'.+?(\d+)/(\d+)/(\d+).+',' ($3$2$1)')),'url':videoUrl}}] return if ($b()('2e')) then (json:=$b,videos:=join($json()(),', ')) else $b()('1e') ! (name:=name,v_url:=url)"
name := VTM - Belgium''s Got Talent - Monden vallen open bij de knalprestatie van 2SDC Crew! (23122016)
v_url := http://flvpd.vtm.be/videocms/vmma/2016/12/23/201612231323275010034065084005056B7305C0000004916B00000D0F059198.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217811-rechters-snoeihard-na-uitspraken-de-wever" --xquery "..."
name := VTM NIEUWS - Rechters snoeihard na uitspraken De Wever (10122016)
v_url := http://flvpd.vtm.be/videocms/nieuws/2016/12/10/201612101312391010034065084005056B7305C0000004916B00000D0F034975.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217669-de-wever-haalt-uit-naar-rechters" --xquery "..."
json := [{"1e": {"name": "VTM NIEUWS - De Wever haalt uit naar rechters (09122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/09/201612091914374010034065084005056B7305C0000004916B00000D0F034130.mp4"}}, {"2e": {"name": "VTM NIEUWS - Video: Theo Francken stapt naar Cassatie (08122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/08/201612081921518010034065084005056B7305C0000004916B00000D0F032052.mp4"}}, {"3e": {"name": "VTM NIEUWS - Video: België betaalt dwangsom voor Syrische familie (26102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/26/201610261943566010034065084005056B7305C0000005076B00000D0F089298.mp4"}}, {"4e": {"name": "VTM NIEUWS - Video: Francken in beroep na heisa rond dwangsom (27102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/27/201610271318187010034065084005056B7305C0000005076B00000D0F090649.mp4"}}]
videos := 1e, 2e, 3e, 4e

--xquery "let $a:=concat(
            //meta[@property='og:site_name']/@content,
            if (//meta[@itemprop='articleProgram']) then
              concat(
                ' - ',
                //meta[@itemprop='articleProgram']/@content
              )
            else
              ()
          ) return
          let $b:=[
            {
              '1e':{
                'name':replace(
                  concat(
                    $a,
                    ' - ',
                    //meta[@property='og:title']/@content,
                    replace(
                      (
                        //@datetime[1],
                        //meta[@property='article:published_time']/@content
                      ),
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  '[&quot;&apos;]',
                  ''''''
                ),
                'url'://source/@src
              }
            },
            //script/json(
              extract(
                .,
                'vmmaplayer=(.+);',1
              )[.]
            )/{
              position()+1||'e':{
                'name':concat(
                  $a,
                  ' - ',
                  title,
                  replace(
                    videoUrl,
                    '.+?(\d+)/(\d+)/(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                'url':videoUrl
              }
            }
          ] return
          if ($b()('2e')) then (
            json:=$b,
            videos:=join($json()(),', ')
          ) else
            $b()('1e') ! (
              name:=name,
              v_url:=url
            )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/6629f05abc5f8a27eea61ef967241a4bd880e98c]

xidel-0.9.6.exe -s --color=never "http://www.foxtv.nl/programmas/fox/the-simpsons/videos/inglorious-bastards-the-simpsons-seizoen-24-aflevering-8" -e "date:=replace(extract($raw,'publishingDate=(\d{8})',1),'(\d{4})(\d{2})(\d{2})',' ($3$2$1)')" -f "extract($raw,'tp:releaseUrl=\"(.+^)\"',1)" --xquery "name:=concat('FOX - ',replace(//param[@name='fullTitle']/@value,'[&quot;&apos;]',''''''),$date),s_url:=//textstream[@lang='nl'][@type='text/srt']/@src" -f "//video/@src" --xquery "json:=[{'format':'meta','url':$url},tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8)',1)}],let $a:=($json()[format='meta']/format,for $x in $json()[format!='meta']/format order by $x return $x) return (formats:=join($a,', '),best:=$a[last()])"
date :=  (16122016)
name := FOX - Inglorious Bastards - The Simpsons - S24E8 (16122016)
s_url := http://sire-foxnl-pmd.fichub.com/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~nl~~~1.srt
json := [{"format": "meta", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/master.m3u8?__b__=1200"}, {"format": "1281", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_3_av.m3u8"}, {"format": "4033", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_0_av.m3u8"}, {"format": "2493", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_1_av.m3u8"}, {"format": "1870", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_2_av.m3u8"}, {"format": "655", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_4_av.m3u8"}, {"format": "458", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_5_av.m3u8"}]
formats := meta, 458, 655, 1281, 1870, 2493, 4033
best := 4033

-e "date:=replace(
      extract(
        $raw,
        'publishingDate=(\d{8})',1
      ),
      '(\d{4})(\d{2})(\d{2})',
      ' ($3$2$1)'
    )"
-f "extract(
      $raw,
      'tp:releaseUrl=\"(.+^)\"',1
    )"
--xquery "name:=concat(
            'FOX - ',
            replace(
              //param[@name='fullTitle']/@value,
              '[&quot;&apos;]',
              ''''''
            ),
            $date
          ),
          s_url:=//textstream[@lang='nl'][@type='text/srt']/@src"
-f "//video/@src"
--xquery "json:=[
            {
              'format':'meta',
              'url':$url
            },
            tail(
              tokenize(
                $raw,
                '#EXT-X-STREAM-INF:'
              )
            ) ! {
              'format':string(
                extract(
                  .,
                  'BANDWIDTH=(\d+)',1
                ) idiv 1000
              ),
              'url':extract(
                .,
                '(.+m3u8)',1
              )
            }
          ],
          let $a:=(
            $json()[format='meta']/format,
            for $x in $json()[format!='meta']/format order by $x return $x
          ) return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8980d9b6732eac5e7f031645353c03a0d5ac1691]

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-opc-2012/" -e "let $a:=[//script/reverse(extract(.,'(http.+mp4)',1,'*')[.]) ! {'format':concat('mp4-',position()),'url':.}] return (name:=concat('ABHD - ',//div[@id='playerObject']//a,replace($a(1)/url,'.+?/(\d+)/(\d{2})(\d{2}).+',' ($3$2$1)')),if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := ABHD - Opel Astra OPC 2012 (25062012)
v_url := http://static.autojunk.nl/flv/2012/0625/120055_hq.mp4

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-j-2009-2015-occasion/" -e "..."
name := ABHD - Opel Astra J (2009-2015) occasion (10112016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1110/095704_hq.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1110/095704_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

-e "let $a:=[
      //script/reverse(
        extract(
          .,
          '(http.+mp4)',1,'*'
        )[.]
      ) !
        {
          'format':concat(
            'mp4-',
            position()
          ),
          'url':.
        }
    ] return (
      name:=concat(
        'ABHD - ',
        //div[@id='playerObject']//a,
        replace(
          $a(1)/url,
          '.+?/(\d+)/(\d{2})(\d{2}).+',
          ' ($3$2$1)'
        )
      ),
      if (count($a()/url)=1) then
        v_url:=$a()/url
      else (
        json:=$a,
        let $b:=$a()/format return (
          formats:=join($b,', '),
          best:=$b[last()]
        )
      )
    )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/1f8593bf0c029471086af9c3c4c9a5a35a941dcc]

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/the-fate-of-the-furious" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - The Fate of the Furious (09122016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1209/185214.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1209/185214_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/ferrari-488-gtb-by-xxx-performance-w-capristo-exhaust" -e "..."
name := Autojunk - Ferrari 488 GTB by xXx Performance w/ Capristo Exhaust (10122016)
v_url := https://youtu.be/Y9snaArzog8

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2009/11/peugeot-206-rally-crash" -e "..."
name := Autojunk - Peugeot 206 rally crash (15112009)
v_url := http://static.autojunk.nl/flv/2009/1115/135833.mp4

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2007/03/7-seconden-op-de-ring" -e "..."
name := Autojunk - 7 seconden op de ring (23032007)
v_url := http://static.autojunk.nl/flv/2007/0323/120040.flv

-e "name:=concat(
      'Autojunk - ',
      //meta[@property='og:title']/@content,
      replace(
        //span[@class='posted'],
        '.+?(\d+)-(\d+)-(\d+).+',
        ' ($1$2$3)'
      )
    ),
    //div[@id='playerWrapper']/(
      if (iframe) then
        v_url:=replace(
          iframe/@src,
          '.+/(.+)',
          'https://youtu.be/$1'
        )
      else
        let $a:=[
          script/extract(
            .,'myfile = ''(.+)''',1,'*'
          )[.] !
            {
              'format':concat(
                replace(
                  .,
                  '.+\.(.+)',
                  '$1-'
                ),
                position()
              ),
              'url':.
            }
        ] return
        if (count($a()/url)=1) then
          v_url:=$a()/url
        else (
          json:=$a,
          let $b:=$a()/format return (
            formats:=join($b,', '),
            best:=$b[last()]
          )
        )
    )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/0f871ca56ff739fddadd408904bfa1c6998bb451]
[https://github.com/Reino17/BatchGemist/commit/d95e3374cfd6c8550908e6dd0571b7f4d0c64cd7]
[https://github.com/Reino17/BatchGemist/commit/7aa16a291215513a1f010e61d6a11c234ca7e5a9]
[https://github.com/Reino17/BatchGemist/commit/]

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -t 14 "VPWON_1269922-frag.srt"
1
00:00:00,000 --> 00:00:03,013
En in lenigheid zijn ze hun grote neef zeker de baas.

2
00:00:38,005 --> 00:00:44,000
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

3
00:00:44,005 --> 00:00:47,004
en leniger is dan die machtige roofdieren.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -ss 642 -t 14 "VPWON_1269922-frag.srt"
1
00:00:03,014 --> 00:00:09,009
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

2
00:00:09,014 --> 00:00:12,013
en leniger is dan die machtige roofdieren.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 630 -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -ss 12 -t 14 "VPWON_1269922-frag.srt"
1
00:00:03,014 --> 00:00:09,009
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

2
00:00:09,014 --> 00:00:12,013
en leniger is dan die machtige roofdieren.

--------------------------------------------------------------------------------------------------------------------------------

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922-frag.mp4"
Met --ss 642 vóór de eerste input krijg je wel het juiste videofragment, maar de ondertiteling wordt niks mee gedaan en start vanaf het begin.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -ss 642 -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922-frag.mp4"
Met -ss 642 vóór elke input krijg je:
[mp4 @ 0373e180] Application provided duration: -34986 / timestamp: 9014 is out of range for mov/mp4 format
[mp4 @ 0373e180] pts has no value
Je krijgt wel het juiste videofragment, maar de tijdsduur klopt niks van. De ondertiteling loopt wel synchroon, maar toch gaat ook hier iets mis, want de regel vóór #1 (#86 in de hele video) is vanaf het begin van het videofragment in beeld.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -ss 642 -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922_url-frag.mp4"
Met -ss 642 ná de laatste input krijg je het juiste videofragment én ondertiteling die synchroon loopt, maar omdat er nu nauwkeurig gezocht moet worden, kost het enige tijd voordat 00:10:42 bereikt is. Niet optimaal dus.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 630 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -ss 630 -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -ss 12 -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922_url-frag.mp4"
Met -ss 630 vóór elke input én -ss 12 ná de laatste input krijg je het juiste videofragment én ondertiteling die synchroon loopt.
Er wordt eerst snel gezocht naar 00:10:30 en daarna nauwkeurig naar 00:10:42. Hierdoor gaat het dus ook lekker snel.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Vervolgens doemt het volgende probleem op:
De ondertiteling in deze mp4-bestanden wordt, i.t.t. Media Player Classic - HC/BE op mijn pc, door mijn Samsung SMART TV (en waarschijnlijk veel meer modellen) niet goed weergegeven. Lijnen worden maar willekeurig getoond, of gewoon voor een lange tijd niet.
I.t.t. FFMpeg genereert MP4Box tx3g-ondertitelingstreams wel volgens de specificaties:

mp4box.exe -add "VPWON_1269922.srt:lang=dut:name=" "NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mp4"
Timed Text (SRT) import - text track 1024 x 576, font Serif (size 18)
Saving NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mp4: 0.500 secs Interleaving

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://tt888.omroep.nl/tt888/VPWON_1269922" -c copy -bsf:a aac_adtstoasc -c:s srt -metadata:s:s language=dut "NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mkv"
Ondertitelingstreams in Matroska daarentegen zijn voor mijn smart tv (en voor de meeste smart tv's waarschijnlijk) geen enkel probleem.

--------------------------------------------------------------------------------------------------------------------------------

Nu moet de (ingevoerde) begintijd opgesplitst worden in een voor FFMpeg -ss parameter voor vóór de input en een voor ná de input.

Invoer al dan niet converteren naar tijd en d.m.v. de 'from-time'-functies ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='642' return let $a:=if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00') return (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60,ss2:=seconds-from-time($a))"
ss1 := 600
ss2 := 42

Invoer al dan niet converteren naar tijd en d.m.v. tokenize ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='00:10:42' return let $a:=tokenize(if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00'),':') return (ss1:=$a[1]*3600+$a[2]*60,ss2:=$a[3])"
ss1 := 600
ss2 := 42

Invoer al dan niet converteren naar seconden en rekenkundig ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='00:10:42' return let $a:=if ($a castable as time) then hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) else $a return (ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 600
ss2 := 42

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Speciale gevallen verder uitwerken:

xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00') return (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60,ss2:=seconds-from-time($a))"
xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=tokenize(if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00'),':') return (ss1:=$a[1]*3600+$a[2]*60,ss2:=$a[3])"
xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=if ($a castable as time) then hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) else $a return (ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 0		// ffmpeg.exe -ss 0 -i "..." is NIET hetzelfde als ffmpeg.exe -i "..." en moet dus niet worden toegekend!
ss2 := 59

xidel-0.9.6.exe ... '00:00:59' ... return ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:00:59' ... return (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:00:59' ... return (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss2 := 59

xidel-0.9.6.exe ... '00:01:00' ... return ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 60
ss2 := 00		// DEZE zou dus juist 60 moeten zijn voor de -ss ná de input

xidel-0.9.6.exe ... '00:01:00' ... return if (seconds-from-time($a)=0) then (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60-60,ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return if (($a[2]*60+$a[3]) mod 60=0) then (ss1:=$a[1]*3600+$a[2]*60-60,ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return if ($a mod 60=0) then (ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 0		// ffmpeg.exe -ss 0 -i "..." is NIET hetzelfde als ffmpeg.exe -i "..." en moet dus niet toegekend worden!
ss2 := 60

xidel-0.9.6.exe ... '00:01:00' ... return if (seconds-from-time($a)=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return if ($a mod 60=0) then (if ($a=60) then () else ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss2 := 60

xidel-0.9.6.exe ... '00:01:01' ... return if (seconds-from-time($a)=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
ss1 := 60
ss2 := 1
xidel-0.9.6.exe ... '00:01:01' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
ss1 := 60
ss2 := 01		// Alleen bij deze methode moet de 0 bij 1 t/m 9 nog weg
xidel-0.9.6.exe ... '00:01:01' ... return if ($a mod 60=0) then (if ($a=60) then () else ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 60
ss2 := 1

xidel-0.9.6.exe ... '00:01:01' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=float($a[3]))"
ss1 := 60
ss2 := 1

'00:59:59'     --> ss1:=3540 ss2:=59
'01:00:00'     --> ss1:=3540 ss2:=60
'01:00:01'     --> ss1:=3600 ss2:=1
'01:00:01.317' --> ss1:=3600 ss2:=1.317

Op 30 seconden opsplitsen (zoals FFMpeg voorbeeld hierboven) i.p.v. op de hele minuut:

xidel-0.9.6.exe ... '01:00:00' ... return if (seconds-from-time($a) mod 30=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)-30) ! (if (.=0) then () else ss1:=.),ss2:=30) else ((hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)-(seconds-from-time($a) mod 30)) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a) mod 30)"
xidel-0.9.6.exe ... '01:00:00' ... return if (($a[2]*60+$a[3]) mod 30=0) then (($a[1]*3600+$a[2]*60+$a[3]-30) ! (if (.=0) then () else ss1:=.),ss2:=30) else (($a[1]*3600+$a[2]*60+$a[3]-($a[3] mod 30)) ! (if (.=0) then () else ss1:=.),ss2:=$a[3] mod 30)"		// float() kan ook weg hierdoor
xidel-0.9.6.exe ... '01:00:00' ... return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
ss1 := 3570
ss2 := 30

De laatste methode is duidelijk de kortste en efficiëntste, helemaal als er voor deze laatste stap geen extra code aan toegevoegd hoeft te worden.

-e "let $a:='01:00:00' return
    let $a:=if ($a castable as time) then
      hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)
    else
      $a
    return
    if ($a mod 30=0) then (
      if ($a=30) then
        ()
      else
        ss1:=$a - 30,
      ss2:=30
    ) else (
      if ($a<30) then
        ()
      else
        ss1:=$a - ($a mod 30),
      ss2:=$a mod 30
    )"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

M.b.v. read() kan stdin uitgelezen worden:
xidel-0.9.6.exe -s --color=never -e "let $a:=read() return let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
01:00:00		// Prompt, dus zelf in moeten vullen
ss1 := 3570
ss2 := 30

Dit werkt niet in een for-loop in batch, omdat alle uitvoer pas aan het einde wordt verwerkt, terwijl de tekst tussentijds moet worden weergeven:
xidel-0.9.6.exe -s --color=never -e "'Voer begintijd in (in seconden, of als uu:mm:ss[.xxx]): '" -e "let $a:=read() return let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
Voer begintijd in (in seconden, of als uu:mm:ss[.xxx]): 01:00:00		// Prompt, dus zelf in moeten vullen

ss1 := 3570
ss2 := 30

Extra checks toevoegen voor :Download bij geen invoer, of als invoer 0 is:
xidel-0.9.6.exe -s --color=never -e "let $a:=read() return if ($a) then let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a=0) then () else if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30) else ()"

-e "let $a:=read() return
    if ($a) then
      let $a:=if ($a castable as time) then
        hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)
      else
        $a
      return
      if ($a=0) then
        ()
      else
        if ($a mod 30=0) then (
          if ($a=30) then
            ()
          else
            ss1:=$a - 30,
          ss2:=30
        ) else (
          if ($a<30) then
            ()
          else
            ss1:=$a - ($a mod 30),
          ss2:=$a mod 30
        )
    else
      ()"

Bij ECHO !json! ^| %xidel% - (:Formats) komt de json al via stdin. Dus read() gaat hier niet werken.

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://tt888.omroep.nl/tt888/POW_00942206')"		// ANSI (1252)
false

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://tt888.omroep.nl/tt888/POW_00942206','LATIN1')"
true

In dit geval is -sub_charenc CP1252 nodig voor FFMpeg, maar ondanks dat gaat het hier om een coderingsfout bij de NPO, omdat 'München' niet goed wordt weergegeven:
xidel-0.9.6.exe -s --color=never -e "unparsed-text-lines('http://tt888.omroep.nl/tt888/POW_00942206','LATIN1')[9]"
Op de veiligheidsconferentie in MEunchen klinkt duidelijke taal over het Oekraiense conflict.

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://tt888.omroep.nl/tt888/VPWON_1269922')"		// UTF-8
true

Hier is uiteraard geen -sub_charenc CP1252 nodig:
xidel-0.9.6.exe -s --color=never -e "unparsed-text-lines('http://tt888.omroep.nl/tt888/VPWON_1269922')[349]"
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

Update (26112017): Dit is niet meer van toepassing. De beschikbaarheids controle is niet meer nodig. De NPO heeft gewoon alle regels met 'extended ASCII'-tekens verwijderd...

--------------------------------------------------------------------------------------------------------------------------------

https://www.npo.nl/hunted/20-11-2017/AT_2084949/POMS_AT_11768999

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POMS_AT_11768999" -e "json(extract($raw,'\((.+)\)',1)) ! (if (tijdsduur) then (duration:=tijdsduur,t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),start:=start,(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (ss:=.,if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),end:=eind,to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind),if (publicatie_eind) then (let $a:=dateTime(publicatie_eind) - current-dateTime() return expire:=concat(replace(publicatie_eind,'(\d+)-(\d+)-(\d+)T(.+)\+.+','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ()) else (),if (tt888='ja') then s_url:='http://tt888.omroep.nl/tt888/POMS_AT_11768999' else ())"
duration := 00:01:59
t := 119
start := 00:02:01
ss := 121
ss1 := 120
ss2 := 1
end := 00:04:00
to := 240
expire := 20-11-2018 21:17:52 (nog 359 dagen en 7u36m9s)
s_url := http://tt888.omroep.nl/tt888/POMS_AT_11768999

https://www.npo.nl/nos-journaal/18-11-2017/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POW_03375508" -e "[...]"
duration := 00:20:22
t := 1222
start :=
end :=
to :=
expire := 18-11-2018 20:21:17 (nog 357 dagen en 7u30m9s)
s_url := http://tt888.omroep.nl/tt888/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POW_03375508" -e "json(extract($raw,'\((.+)\)',1)) ! (if (tijdsduur) then (duration:=tijdsduur,t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),if (start) then (start:=start,(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (ss:=.,if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),end:=eind,to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)) else (),if (publicatie_eind) then (let $a:=dateTime(publicatie_eind) - current-dateTime() return expire:=concat(replace(publicatie_eind,'(\d+)-(\d+)-(\d+)T(.+)\+.+','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ()) else (),if (tt888='ja') then s_url:='http://tt888.omroep.nl/tt888/POW_03375508' else ())"
duration := 00:20:22
t := 1222
expire := 18-11-2018 20:21:17 (nog 357 dagen en 7u30m9s)
s_url := http://tt888.omroep.nl/tt888/POW_03375508

http://www.npo.nl/promo-opgelicht-06-09-2016/05-09-2016/WO_AT_4993516

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_AT_4993516" -e "json(extract($raw,'\((.+)\)',1))"
{
  "STATUS": "ERROR",
  "VERSION": "1.12.6",
  "MDI": "npoapi",
  "code": 440,
  "error": "De opgevraagde aflevering is niet gevonden"
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_AT_4993516" -e "json(extract($raw,'\((.+)\)',1))[not(error)] ! (if (tijdsduur) then (duration:=tijdsduur,t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),if (start) then (start:=start,(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (ss:=.,if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),end:=eind,to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)) else (),if (publicatie_eind) then (let $a:=dateTime(publicatie_eind) - current-dateTime() return expire:=concat(replace(publicatie_eind,'(\d+)-(\d+)-(\d+)T(.+)\+.+','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ()) else (),if (tt888='ja') then s_url:='http://tt888.omroep.nl/tt888/WO_AT_4993516' else ())"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "json(
            extract(
              $raw,
              '\((.+)\)',
              1
            )
          )[not(error)] ! (
            if (tijdsduur) then (
              duration:=tijdsduur,
              t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),
              if (start) then (
                start:=start,
                (hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (
                  ss:=.,
                  if (. mod 30=0) then (
                    if (.=30) then
                      ()
                    else
                      ss1:=. - 30,
                    ss2:=30
                  ) else (
                    if (.<30) then
                      ()
                    else
                      ss1:=. - (. mod 30),
                    ss2:=. mod 30
                  )
                ),
                end:=eind,
                to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)
              ) else
                (),
              if (publicatie_eind) then (
                let $a:=dateTime(publicatie_eind) - current-dateTime() return
                expire:=concat(
                  replace(
                    publicatie_eind,
                    '(\d+)-(\d+)-(\d+)T(.+)\+.+',
                    '$3-$2-$1 $4'
                  ),
                  ' (nog ',
                  days-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else if (.=1) then
                      .||' dag en '
                    else
                      .||' dagen en '
                  ),
                  hours-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'u'
                  ),
                  minutes-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'m'
                  ),
                  floor(seconds-from-duration($a)),
                  's)'
                )
              ) else
                ()
            ) else
              (),
            if (tt888='ja') then
              s_url:='http://tt888.omroep.nl/tt888/WO_AT_4993516'
            else
              ()
          )"

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5391.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=52009553-3547-3298-88f9-4619441d9aa5/fmt=adaptive/" --xquery "$json/(material)()/(duration:=substring-before(duration,'.'),t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00') let $b:=$a - current-dateTime() return expire:=concat(replace($a,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($b) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($b) ! (if (.=0) then () else .||'u'),minutes-from-duration($b) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($b)),'s)'))"
duration := 01:01:43
t := 3703
expire := 11-03-2017 20:35:44 (nog 5 dagen en 6u5m4s)

xidel-0.9.7.5447-openssl.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=00a3f1ec-1477-439f-a806-aa54555eb52d/fmt=adaptive/" --xquery "$json/(material)()/(duration:=substring-before(duration,'.'),t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),if ((.//ddr_timeframes)()[model='AVOD']/stop) then let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00') let $b:=$a - current-dateTime() return expire:=concat(replace($a,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($b) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($b) ! (if (.=0) then () else .||'u'),minutes-from-duration($b) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($b)),'s)') else ())"				# Video zonder "Gratis tot"-datum.
duration := 00:03:55
t := 235

--xquery "$json/(material)()/(
            duration:=substring-before(duration,'.'),
            t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),
            if ((.//ddr_timeframes)()[model='AVOD']/stop) then
              let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00')
              let $b:=$a - current-dateTime() return
              expire:=concat(
                replace(
                  $a,
                  '(\d+)-(\d+)-(\d+)T(.+)',
                  '$3-$2-$1 $4'
                ),
                ' (nog ',
                days-from-duration($b) ! (
                  if (.=0) then
                    ()
                  else if (.=1) then
                    .||' dag en '
                  else
                    .||' dagen en '
                ),
                hours-from-duration($b) ! (
                  if (.=0) then
                    ()
                  else
                    .||'u'
                ),
                minutes-from-duration($b) ! (
                  if (.=0) then
                    ()
                  else
                    .||'m'
                ),
                floor(
                  seconds-from-duration($b)
                ),
                's)'
              )
            else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/a18a79b733631d8d173190fce6c28d9599965484]
[https://github.com/Reino17/BatchGemist/commit/7983bba09cce9be8c00be877d9d52b0ba34cee31]

Prettification:

xidel-0.9.6.exe -s --color=never ^
-e ^"let $a:='01:00:00' return ^
     let $a:=if ($a castable as time) then ^
       hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) ^
     else ^
       $a ^
     return ^
     if ($a mod 30=0) then ( ^
       if ($a=30) then ^
         () ^
       else ^
         ss1:=$a - 30, ^
       ss2:=30 ^
     ) else ( ^
       if ($a^<30) then ^
         () ^
       else ^
         ss1:=$a - ($a mod 30), ^
       ss2:=$a mod 30 ^
     )^"

Het einde van elke regel moet ge-escaped worden met een caret. Als elke opeenvolgende regel aan het begin begint (zoals de 2e regel hierboven), dan moet er een spatie vóór de laatste caret.
Ook < en " moeten hier ge-escaped worden.

--------------------------------------------------------------------------------------------------------------------------------

SET xidel="D:\Storage\Media\Binaries\xidel-0.9.6.exe"

FOR /F "delims=" %%A IN ('^"%xidel% -s --color^=never
-e ^"let $a:^='01:00:00' return
     let $a:^=if ($a castable as time^) then
       hours-from-time($a^)*3600+minutes-from-time($a^)*60+seconds-from-time($a^)
     else
       $a
     return
     if ($a mod 30^=0^) then (
       if ($a^=30^) then
         (^)
       else
         ss1:^=$a - 30^,
       ss2:^=30
     ^) else (
       if ($a^<30^) then
         (^)
       else
         ss1:^=$a - ($a mod 30^)^,
       ss2:^=$a mod 30
     ^)^" --output-format^=cmd^"') DO %%A

Ik dacht altijd dat het in een for-loop nooit mogelijk was, maar blijkbaar toch wel. :)
Het escapen van elke regel is hier niet nodig, maar die van alle escape-characters wel! Hier zijn dat " = ) , en <

De Xidel commando wordt nog steeds ontleed als één lange regel, waardoor de limiet van 8192 tekens ook hier van kracht is.

--------------------------------------------------------------------------------------------------------------------------------

Ontleed een specifiek gedeelte van een tekstbestand en escape alle escape-characters:
xidel-0.9.6.exe -s --color=never -e "file:read-text-lines('batchgemist-1.6_notes.txt')[position()>1261][position()<88] ! replace(.,'([\^&<>|\"\",;=()])','^$1')" | clip

Officieel zijn dit de escape-characters: [^&<>|",;()=], maar een ^ vooraan moet worden ge-escaped. Een " moeten ook worden ge-escaped, maar ook verdubbeld, omdat één " in Batch problemen geeft.

I.p.v. de " te moeten verdubbelen, kan ook xquery gebruikt worden (denk wel om de eerste &):
xidel-0.9.6.exe -s --color=never --xquery "file:read-text-lines('batchgemist-1.6_notes.txt')[position()>1261][position()<88] ! replace(.,'([\^&amp;<>|&quot;,;=()])','^$1')" | clip

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/dca7a6c88b583d02d6ec25a70495b4a2f4b2abf2]

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return $a[1]"
a

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return head($a)"
a

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return tail($a)"
b
c
d
e
f

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return ($a)[last()]"
f

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return ($a)[position()<count($a)]"
a
b
c
d
e

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return remove($a,count($a))"
a
b
c
d
e

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return reverse(tail(reverse($a)))"
a
b
c
d
e

--------------------------------------------------------------------------------------------------------------------------------

[https://github.com/Reino17/BatchGemist/commit/dca7a6c88b583d02d6ec25a70495b4a2f4b2abf2]

xidel-0.9.6.exe -s --color=never "http://www.omroepflevoland.nl/kijken/nieuws/01-10-2016/17-00" --xquery "let $a:=//div[@class='jwplayercontainer'] return if (count($a)=2) then (name:=concat('Omroep Flevoland - ',if (contains($url,'kijken')) then //meta[@name='keywords']/@content else extract($a[1]/@data-video-name,'.+?- (.+) -',1),replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[for $x in json(//script/extract(.,concat($a[1]/div/@id,'.+sources:(.+?\])'),1,'s')[.])()[starts-with(file,'http')] return (if (ends-with($x/file,'m3u8')) then ({'format':'meta','url':$x/file},tail(tokenize(unparsed-text($x/file),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$x/file),extract(.,'(.+m3u8)',1))}) else ('laag','middel','hoog') ! {'format':concat('mp4-',.),'url':replace($x/file,'middel',.)})],let $b:=($json()[contains(format,'mp4')]/format,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else (json:=[for $x at $i in remove($a,count($a)) return {$i||'e':{'name':concat('Omroep Flevoland - ',extract($x/@data-video-name,'.+?- (.+) -',1),replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':for $y in json(//script/extract(.,concat($x/div/@id,'.+sources:(.+?\])'),1,'s')[.])()[starts-with(file,'http')] return (if (ends-with($y/file,'m3u8')) then ({'format':'meta','url':$y/file},tail(tokenize(unparsed-text($y/file),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$y/file),extract(.,'(.+m3u8)',1))}) else ('laag','middel','hoog') ! {'format':concat('mp4-',.),'url':replace($y/file,'middel',.)})}}],videos:=join($json()(),', '))"
name := Omroep Flevoland - Nieuws (01102016)
json := [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/playlist.m3u8"}, {"format": "1536", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b1536000_t64SG9vZw==.m3u8"}, {"format": "1024", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b1024000_t64TWlkZGVs.m3u8"}, {"format": "819", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b819200_t64TGFhZw==.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/161001_NW.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/161001_NW.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/161001_NW.mp4"}]
formats := mp4-laag, mp4-middel, mp4-hoog, meta, 819, 1024, 1536
best := 1536

xidel-0.9.6.exe -s --color=never "http://www.omroepflevoland.nl/nieuws/138485/dronten-meerpaaldagen-een-grote-reunie" --xquery "..."
json := [{"1e": {"name": "Omroep Flevoland - Meerpaaldagen: ''Een grote reünie'' - Meerpaaldagen: ''Een grote reünie'' (12082016)", "formats": [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4/playlist.m3u8"}, {"format": "1697", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4/chunklist_w321678006.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/160813_Meerpaaldagen_00000G1Z.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/160813_Meerpaaldagen_00000G1Z.mp4"}]}}, {"2e": {"name": "Omroep Flevoland - Meerpaaldagen: ''Een grote reünie'' - Optreden op het Meerpaalplein (12082016)", "formats": [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/playlist.m3u8"}, {"format": "1536", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b1536000_t64SG9vZw==.m3u8"}, {"format": "1024", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b1024000_t64TWlkZGVs.m3u8"}, {"format": "819", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b819200_t64TGFhZw==.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/160813_meerpaaldagen_Int.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/160813_meerpaaldagen_Int.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/160813_meerpaaldagen_Int.mp4"}]}}]
videos := 1e, 2e

--xquery "let $a:=//div[@class='jwplayercontainer'] return
          if (count($a)=2) then (
            name:=concat(
              'Omroep Flevoland - ',
              if (contains($url,'kijken')) then
                //meta[@name='keywords']/@content
              else
                extract(
                  $a[1]/@data-video-name,
                  '.+?- (.+) -',1
                ),
              replace(
                //meta[@property='article:published_time']/@content,
                '(\d+)-(\d+)-(\d+).+',
                ' ($3$2$1)'
              )
            ),
            json:=[
              for $x in json(
                //script/extract(
                  .,
                  concat(
                    $a[1]/div/@id,
                    '.+sources:(.+?\])'
                  ),
                  1,'s'
                )[.]
              )()[starts-with(file,'http')] return (
                if (ends-with($x/file,'m3u8')) then (
                  {
                    'format':'meta',
                    'url':$x/file
                  },
                  tail(
                    tokenize(
                      unparsed-text($x/file),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':string(
                      extract(
                        .,
                        'BANDWIDTH=(\d+)',1
                      ) idiv 1000
                    ),
                    'url':concat(
                      resolve-uri(
                        '.',
                        $x/file
                      ),
                      extract(
                        .,
                        '(.+m3u8)',1
                      )
                    )
                  }
                ) else
                  ('laag','middel','hoog') ! {
                    'format':concat('mp4-',.),
                    'url':replace(
                      $x/file,
                      'middel',
                      .
                    )
                  }
              )
            ],
            let $b:=(
              $json()[contains(format,'mp4')]/format,
              $json()[format='meta']/format,
              for $x in $json()[format castable as int]/format order by $x return $x
            ) return (
              formats:=join($b,', '),
              best:=$b[last()]
            )
          ) else (
            json:=[
              for $x at $i in remove(
                $a,
                count($a)
              ) return {
                $i||'e':{
                  'name':concat(
                    'Omroep Flevoland - ',
                    extract(
                      $x/@data-video-name,
                      '.+?- (.+) -',1
                    ),
                    replace(
                      //meta[@property='article:published_time']/@content,
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  'formats':for $y in json(
                    //script/extract(
                      .,
                      concat(
                        $x/div/@id,
                        '.+sources:(.+?\])'
                      ),
                      1,'s'
                    )[.]
                  )()[starts-with(file,'http')] return (
                    if (ends-with($y/file,'m3u8')) then (
                      {
                        'format':'meta',
                        'url':$y/file
                      },
                      tail(
                        tokenize(
                          unparsed-text($y/file),
                          '#EXT-X-STREAM-INF:'
                        )
                      ) ! {
                        'format':string(
                          extract(
                            .,
                            'BANDWIDTH=(\d+)',1
                          ) idiv 1000
                        ),
                        'url':concat(
                          resolve-uri(
                            '.',
                            $y/file
                          ),
                          extract(
                            .,
                            '(.+m3u8)',1
                          )
                        )
                      }
                    ) else
                      ('laag','middel','hoog') ! {
                        'format':concat('mp4-',.),
                        'url':replace(
                          $y/file,
                          'middel',
                          .
                        )
                      }
                  )
                }
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/f4267b67035242bbcf02f21c93eddaa9454b65fc]

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/gemist/uitzending/rtvutrecht/u-vandaag/20161006-1210/8106766" --xquery "let $a:=//script/extract(.,'(http.+mp4)',1)[.] return if (count($a)=1) then (name:=concat('RTV Utrecht - ',if (contains($url,'gemist')) then substring-before(//h2[@class='h2-large-met-grijs border-top'][1],' -') else replace(if (//p[@class='margin-bottom-5 fragment-bijschrift']) then //p[@class='margin-bottom-5 fragment-bijschrift'] else //meta[@name='og:title']/@content,'[&quot;&apos;]',''''''),replace($a,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')),v_url:=$a) else (json:=[for $x at $i in $a return {$i||'e':{'name':concat('RTV Utrecht - ',replace(//p[@class='margin-bottom-5 fragment-bijschrift'][$i],'[&quot;&apos;]',''''''),replace($x,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')),'url':$x}}],videos:=join($json()(),', '))"
name := RTV Utrecht - U Vandaag (06102016)
v_url := https://content.omroep.nl/rtvutrecht/uitzendinggemist/rtvutrecht/2016/10/06/RTV1514348_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528141/hippe-frietwinkels-en-hamburgertenten-zijn-blijvertje.html" --xquery "..."
name := RTV Utrecht - ''''Consumenten willen weten waar voedsel vandaan komt'' (05102016)
v_url := https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/875160_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528134/docent-verliest-weddenschap-en-springt-in-oudegracht.html" --xquery "..."
name := RTV Utrecht - Docent verliest weddenschap en springt in Oudegracht (05102016)
v_url := https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/876228_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528065/opas-en-omas-in-het-zonnetje-tijdens-de-kinderboekenweek.html" --xquery "..."
json := [{"1e": {"name": "RTV Utrecht - Kinderen verkleed als opa''s en oma''s tijdens Kinderboekenweek (05102016)", "url": "https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/875042_MQ.mp4"}}, {"2e": {"name": "RTV Utrecht - De Utrechtse kinderboekenschrijver Marcel van Driel over de Kinderboekenweek. (06102016)", "url": "https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/06/876461_MQ.mp4"}}]
videos := 1e, 2e

--xquery "let $a:=//script/extract(
            .,
            '(http.+mp4)',1
          )[.] return
          if (count($a)=1) then (
            name:=concat(
              'RTV Utrecht - ',
              if (contains($url,'gemist')) then
                substring-before(
                  //h2[@class='h2-large-met-grijs border-top'][1],
                  ' -'
                )
              else
                replace(
                  if (//p[@class='margin-bottom-5 fragment-bijschrift']) then
                    //p[@class='margin-bottom-5 fragment-bijschrift']
                  else
                    //meta[@name='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                ),
                replace(
                  $a,
                  '.+(\d{4})/(\d{2})/(\d{2}).+',
                  ' ($3$2$1)'
                )
            ),
            v_url:=$a
          ) else (
            json:=[
              for $x at $i in $a return {
                $i||'e':{
                  'name':concat(
                    'RTV Utrecht - ',
                    replace(
                      //p[@class='margin-bottom-5 fragment-bijschrift'][$i],
                      '[&quot;&apos;]',
                      ''''''
                    ),
                    replace(
                      $x,
                      '.+(\d{4})/(\d{2})/(\d{2}).+',
                      ' ($3$2$1)'
                    )
                  ),
                  'url':$x
                }
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/aef9c6676c5098ccc652545159d7f488a10ba351]

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/Portal.aspx?type=tv" --xquery "if (count((//@data-url,//@data-script))=1) then json(extract(unparsed-text((//@data-url,//@data-script)),'var opts = (.+);',1))/clipData/(if (contains($url,'Portal')) then (name:=replace('%date%','.+?(\d+)-(\d+)-(\d+)','Omroep Brabant - Livestream ($1$2$3)'),let $a:=substring-before((assets)(1)/src,'?') return json:=[{'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'.+/(.+m3u8)',1))}]) else (name:=concat('Omroep Brabant - ',replace(title,'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[(assets)()/{'format':concat('mp4-',bandwidth),'url':src}]),let $b:=($json()[format='meta']/format,for $x in $json()[format!='meta']/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else (if (//@data-script) then (json:=[//@data-script ! {position()||'e':json(extract(unparsed-text(.),'var opts = (.+);',1))/clipData/{'name':concat('Omroep Brabant - ',replace(title,'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':[(assets)()/{'format':concat('mp4-',bandwidth),'url':src}]}}],videos:=join($json()(),', ')) else ())"
name := Omroep Brabant - Livestream (30012017)
json := [{"format": "meta", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/index.m3u8"}, {"format": "3029", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-1920-1080-2750000-index.m3u8"}, {"format": "1822", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-640-360-1600000-index.m3u8"}, {"format": "982", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-480-272-800000-index.m3u8"}, {"format": "457", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-320-180-300000-index.m3u8"}, {"format": "142", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-au-index.m3u8"}]
formats := meta, 142, 457, 982, 1822, 3029
best := 3029

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/?epg/17761652/Brabant+Nieuws.aspx" --xquery "..."
name := Omroep Brabant - Brabant Nieuws (30012017)
json := [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_elq.mp4"}]
formats := mp4-500, mp4-1100, mp4-1700, mp4-2300, mp4-2900, mp4-3500
best := mp4-3500

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/?news/2558441033/Nieuw+persoonlijk+record+en+tiende+plek+voor+Harm+Sengers+in+zijn+laatste+marathon.aspx" --xquery "..."
json := [{"1e": {"name": "Omroep West - Snelste Nederlander op Marathon Eindhoven Harm Sengers maandag weer gewoon aan het werk bij ASML  (10102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_elq.mp4"}]}}, {"2e": {"name": "Omroep West - Keniaan Festus Talam wint 33e Eindhoven Marathon; Harm Sengers uit Eindhoven beste Nederlander. (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_elq.mp4"}]}}, {"3e": {"name": "Omroep West - Ontlading bij Harm Sengers na de finish in de Eindhovense marathon (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_elq.mp4"}]}}, {"4e": {"name": "Omroep West - Harm Sengers liep een nieuw persoonlijk record in de marathon van Eindhoven (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_elq.mp4"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "if (count((//@data-url,//@data-script))=1) then
            json(
              extract(
                unparsed-text(
                  (
                    //@data-url,
                    //@data-script
                  )
                ),
                'var opts = (.+);',1
              )
            )/clipData/(
              if (contains($url,'Portal')) then (
                name:=replace(
                  '%date%',
                  '.+?(\d+)-(\d+)-(\d+)',
                  'Omroep Brabant - Livestream ($1$2$3)'
                ),
                let $a:=substring-before(
                  (assets)(1)/src,
                  '?'
                ) return
                json:=[
                  {
                    'format':'meta',
                    'url':$a
                  },
                  tail(
                    tokenize(
                      unparsed-text($a),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':string(
                      extract(
                        .,
                        'BANDWIDTH=(\d+)',1
                      ) idiv 1000
                    ),
                    'url':concat(
                      resolve-uri('.',$a),
                      extract(
                        .,
                        '.+/(.+m3u8)',1
                      )
                    )
                  }
                ]
              ) else (
                name:=concat(
                  'Omroep Brabant - ',
                  replace(
                    title,
                    '[&quot;&apos;]',
                    ''''''
                  ),
                  replace(
                    publisheddate,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                json:=[
                  (assets)()/{
                    'format':concat(
                      'mp4-',
                      bandwidth
                    ),
                    'url':src
                  }
                ]
              ),
              let $b:=(
                $json()[format='meta']/format,
                for $x in $json()[format!='meta']/format order by $x return $x
              ) return (
                formats:=join($b,', '),
                best:=$b[last()]
              )
            )
          else (
            if (//@data-script) then (
              json:=[
                //@data-script ! {
                  position()||'e':json(
                    extract(
                      unparsed-text(.),
                      'var opts = (.+);',1
                    )
                  )/clipData/{
                    'name':concat(
                      'Omroep Brabant - ',
                      replace(
                        title,
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        publisheddate,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats':[
                      (assets)()/{
                        'format':concat(
                          'mp4-',
                          bandwidth
                        ),
                        'url':src
                      }
                    ]
                  }
                }
              ],
              videos:=join($json()(),', ')
            ) else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/fdc37f89740f0ebb90860ba2e9af14bbc2059489]

xidel-0.9.6.exe -s --color=never "https://l1.nl/l1nws-29-jan-2017-126340/" --xquery "let $a:=//div/script[contains(@src,'video')]/@src return if (count($a)=1) then json(extract(unparsed-text($a),'var opts = (.+);',1))/(if (clipData) then let $b:=.//defaultMediaAssetPath return clipData/(name:=concat('L1 - ',replace(replace(title,'(.+) -.+','$1'),'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[(assets)()/{'format':concat('mp4-',bandwidth),'url':concat($b,src)}],let $c:=for $x in $json()/format order by $x return $x return (formats:=join($c,', '),best:=$c[last()])) else ()) else (json:=[for $x at $i in $a return {$i||'e':json(extract(unparsed-text($x),'var opts = (.+);',1))/(let $b:=.//defaultMediaAssetPath return clipData/{'name':concat('L1 - ',replace(replace(title,'(.+) -.+','$1'),'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':[(assets)()/{'format':concat('mp4-',bandwidth),'url':concat($b,src)}]})}],videos:=join($json()(),', '))"
name := L1 - L1NWS (29012017)
json := [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170129181408-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170129181853-IPOD.m4v"}]
formats := mp4-600, mp4-1000
best := mp4-1000

xidel-0.9.6.exe -s --color=never "https://l1.nl/bij-l1-treinschoonmaker-danny-wordt-een-dagje-een-conducteur-126353/" --xquery "..."
name := L1 - L1NWS: Droom komt uit voor treinschoonmaker van het jaar? (30012017)
json := [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170130131826-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170130131907-IPOD.m4v"}]
formats := mp4-600, mp4-1000
best := mp4-1000

xidel-0.9.6.exe -s --color=never "https://l1.nl/spik-en-span-katja-henz-en-fer-naus-in-vastelaovendgaste-126359/" --xquery "..."
json := [{"1e": {"name": "L1 - VastelaovendGaste (30012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170130195603-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170130200959-IPOD.m4v"}]}}, {"2e": {"name": "L1 - Hukske fastelaovend (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115033-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115155-IPOD.m4v"}]}}, {"3e": {"name": "L1 - VastelaovendGaste - Spik en Span (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115244-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115354-IPOD.m4v"}]}}, {"4e": {"name": "L1 - VastelaovendGaste - Katja Henz (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115555-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115640-IPOD.m4v"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "let $a:=//div/script[contains(@src,'video')]/@src return
          if (count($a)=1) then
            json(
              extract(
                unparsed-text($a),
                'var opts = (.+);',1
              )
            )/(
              if (clipData) then
                let $b:=.//defaultMediaAssetPath return
                clipData/(
                  name:=concat(
                    'L1 - ',
                    replace(
                      replace(
                        title,
                        '(.+) -.+',
                        '$1'
                      ),
                      '[&quot;&apos;]',
                      ''''''
                    ),
                    replace(
                      publisheddate,
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  json:=[
                    (assets)()/{
                      'format':concat(
                        'mp4-',
                        bandwidth
                      ),
                      'url':concat(
                        $b,
                        src
                      )
                    }
                  ],
                  let $c:=for $x in $json()/format order by $x return $x return (
                    formats:=join($c,', '),
                    best:=$c[last()]
                  )
                )
              else
                ()
            )
          else (
            json:=[
              for $x at $i in $a return {
                $i||'e':json(
                  extract(
                    unparsed-text($x),
                    'var opts = (.+);',1
                  )
                )/(
                  let $b:=.//defaultMediaAssetPath return
                  clipData/{
                    'name':concat(
                      'L1 - ',
                      replace(
                        replace(
                          title,
                          '(.+) -.+',
                          '$1'
                        ),
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        publisheddate,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats':[
                      (assets)()/{
                        'format':concat(
                          'mp4-',
                          bandwidth
                        ),
                        'url':concat(
                          $b,
                          src
                        )
                      }
                    ]
                  }
                )
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/a5765908f40ea52a300fa7df4eb463c7d9cee695]

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/gemist/tv/123/25320/-" --xquery "name:=concat('AT5 - ',replace(if (contains($url,'gemist')) then concat(if (contains(//div[@class='banner_label'],'Nieuws')) then 'Nieuws' else concat(//div[@class='banner_label'],'- ',//div[@class='banner_title']),replace(//a[@class='video-player']/@href,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')) else concat(//meta[@property='og:title']/@content,replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]','''''')),if (//iframe) then () else (let $a:=json(concat('http://www.at5.nl/video/json?m=',(//div[@class='video-container']/substring-after(@id,'video'),//div/@data-video)))/source return json:=[('low','medium','hi') ! {'format':concat('mp4-',.),'url':replace($a/(fb)(1)/file,'(hi)',.)},for $x in ('low','medium','hi') ! replace($a/(def)()[type='hls']/file,'(hi)',.) return tail(tokenize(unparsed-text($x),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$x),extract(.,'(.+m3u8)',1))}],formats:=join($json()/format,', '),best:=$json()[last()]/format)"
name := AT5 - Nieuws (30012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_hi.mp4"}, {"format": "533", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_low.mp4/chunklist_w704258857.m3u8"}, {"format": "1597", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_medium.mp4/chunklist_w1300114578.m3u8"}, {"format": "2523", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_hi.mp4/chunklist_w329487467.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 533, 1597, 2523
best := 2523

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/gemist/tv/76/25309/-" --xquery "..."
name := AT5 - Het Verkeer- Valkenburgerstraat (27012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_hi.mp4"}, {"format": "409", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_low.mp4/chunklist_w1116493247.m3u8"}, {"format": "1137", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_medium.mp4/chunklist_w462340801.m3u8"}, {"format": "2077", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_hi.mp4/chunklist_w363490560.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 409, 1137, 2077
best := 2077

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/artikelen/165092/auto-botst-met-politieauto-in-oost" --xquery "..."
name := AT5 - Auto botst met politieauto in Oost (28012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_hi.mp4"}, {"format": "389", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_low.mp4/chunklist_w314958199.m3u8"}, {"format": "1057", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_medium.mp4/chunklist_w1691483806.m3u8"}, {"format": "1803", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_hi.mp4/chunklist_w1032020203.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 389, 1057, 1803
best := 1803

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/artikelen/165100/bekende-voetballers-kopen-massaal-huizen-op-in-amsterdam" --xquery "..."	//artikel met 1 embedded Kijk.nl video
name := AT5 - ''Bekende voetballers kopen massaal huizen op in Amsterdam'' (28012017)

--xquery "name:=concat(
            'AT5 - ',
            replace(
              if (contains($url,'gemist')) then
                concat(
                  if (contains(//div[@class='banner_label'],'Nieuws')) then
                    'Nieuws'
                  else
                    concat(
                      //div[@class='banner_label'],
                      '- ',
                      //div[@class='banner_title']
                    ),
                  replace(
                    //a[@class='video-player']/@href,
                    '.+(\d{4})/(\d{2})/(\d{2}).+',
                    ' ($3$2$1)'
                  )
                )
              else
                concat(
                  //meta[@property='og:title']/@content,
                  replace(
                    //meta[@property='article:published_time']/@content,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
              '[&quot;&apos;]',
              ''''''
            )
          ),
          if (//iframe) then
            ()
          else (
            let $a:=json(
              concat(
                'http://www.at5.nl/video/json?m=',
                (
                  //div[@class='video-container']/substring-after(@id,'video'),
                  //div/@data-video
                )
              )
            )/source return
            json:=[
              ('low','medium','hi') ! {
                'format':concat('mp4-',.),
                'url':replace(
                  $a/(fb)(1)/file,
                  '(hi)',
                  .
                )
              },
              for $x in ('low','medium','hi') ! replace(
                $a/(def)()[type='hls']/file,
                '(hi)',
                .
              ) return
              tail(
                tokenize(
                  unparsed-text($x),
                  '#EXT-X-STREAM-INF:'
                )
              ) ! {
                'format':string(
                  extract(
                    .,
                    'BANDWIDTH=(\d+)',1
                  ) idiv 1000
                ),
                'url':concat(
                  resolve-uri('.',$x),
                  extract(
                    .,
                    '(.+m3u8)',1
                  )
                )
              }
            ],
            formats:=join($json()/format,', '),
            best:=$json()[last()]/format
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/65a431dc6c933e41934b389faddbd464211f40eb]
[https://github.com/Reino17/BatchGemist/commit/128a49f1c24796df01967f41981a883410b6ac59]
[https://github.com/Reino17/BatchGemist/commit/f581a9cd374d082585c7037e51b132aeb2a8cb21]
[https://github.com/Reino17/BatchGemist/commit/1d1490183c299f30f79d15633e8c8e3a4a239005]

https://www.npo.nl/nos-journaal/18-11-2017/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)"
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Adaptive",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/adaptive/97b27d0dff01c31a4956a9ce1e7749ba/5a11a295/POW_03375508/1?extension=m3u8&type=jsonp&callback=?",
        "format": "hls"
      },
      {
        "label": "Hoog",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_std/28d1a767bb878c5e676081e49c1e2b22/5a11a295/POW_03375508/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Normaal",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_bb/1a9cca1e3b5e6c8bd13a6b255af097d8/5a11a295/POW_03375508/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Laag",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_sb/a1daa8863b20f2c325a528f62e6809a1/5a11a295/POW_03375508/1?type=jsonp&callback=?",
        "format": "mp4"
      }
    ]
  ]
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a"
{
  "label": "Adaptive",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/adaptive/f8a59606b478ad17a570d16b63e69b68/5a11a2f4/POW_03375508/1?extension=m3u8&type=jsonp&callback=?",
  "format": "hls"
}
{
  "label": "Hoog",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_std/e97ff1ae0b6053ff2cdb2e20bcca4b2b/5a11a2f4/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}
{
  "label": "Normaal",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_bb/77b473cac24570279e4f61a1d00ad966/5a11a2f4/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}
{
  "label": "Laag",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_sb/edba1d8e969c9c61abddfec45b38b9cb/5a11a2f4/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Progressieve videostreams

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return reverse($a[contentType='odi'][format='mp4'])"
{
  "label": "Laag",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_sb/ba810f4c5ac466519cb41f0e212dd880/5a11aa19/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}
{
  "label": "Normaal",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_bb/c1b55e9b67214da67c929b7255055b96/5a11aa19/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}
{
  "label": "Hoog",
  "contentType": "odi",
  "url": "https://odis.omroep.nl/video/ida/h264_std/a2508a5a49bbbefd902ea61e720fb07f/5a11aa19/POW_03375508/1?type=jsonp&callback=?",
  "format": "mp4"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))"
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m5eda346d34bade49005a11a6d4000000.e9d42f1e29ea019c424825f4cfbc9f3b/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v",
  "protocol": "https",
  "server": "content10c3b.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_sb/a0f0e478f55a735e6ee053aaf0b1b970/5a11a6d3/POW_03375508/1?type=json&callback=?"
  },
  "url": "https://content10c3b.omroep.nl/urishieldv2/l27m5eda346d34bade49005a11a6d4000000.e9d42f1e29ea019c424825f4cfbc9f3b/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_sb%2Fa0f0e478f55a735e6ee053aaf0b1b970%2F5a11a6d3%2FPOW_03375508%2F1%3Ftype%3Djson%26callback%3D%3F"
}
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m1d4aec393d0246c0005a11a6d4000000.de10cc8db23466d09f244418e9e334cd/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v",
  "protocol": "https",
  "server": "content10c3c.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_bb/ae8b8c62445e7c1f9c3aa00efb2b0625/5a11a6d3/POW_03375508/1?type=json&callback=?"
  },
  "url": "https://content10c3c.omroep.nl/urishieldv2/l27m1d4aec393d0246c0005a11a6d4000000.de10cc8db23466d09f244418e9e334cd/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_bb%2Fae8b8c62445e7c1f9c3aa00efb2b0625%2F5a11a6d3%2FPOW_03375508%2F1%3Ftype%3Djson%26callback%3D%3F"
}
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m0f5cd4545b7165e3005a11a6d4000000.811ec309297eb3fbb226285374dba710/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v",
  "protocol": "https",
  "server": "content10c3a.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_std/74c0490dcb3fd33ec66daa6b65957079/5a11a6d3/POW_03375508/1?type=json&callback=?"
  },
  "url": "https://content10c3a.omroep.nl/urishieldv2/l27m0f5cd4545b7165e3005a11a6d4000000.811ec309297eb3fbb226285374dba710/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_std%2F74c0490dcb3fd33ec66daa6b65957079%2F5a11a6d3%2FPOW_03375508%2F1%3Ftype%3Djson%26callback%3D%3F"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return extract($x,'.+/([a-z]+)',1) ! (if (.='sb') then {'format':'pg-'||.,'extension':'m4v','resolution':'480x270','vbitrate':'v:200k','abitrate':'a:64k','url':$x} else if (.='bb') then {'format':'pg-'||.,'extension':'m4v','resolution':'640x360','vbitrate':'v:500k','abitrate':'a:128k','url':$x} else {'format':'pg-'||.,'extension':'m4v','resolution':'960x540','vbitrate':'v:1000k','abitrate':'a:128k','url':$x})]"
[
  {
    "format": "pg-sb",
    "extension": "m4v",
    "resolution": "480x270",
    "vbitrate": "v:200k",
    "abitrate": "a:64k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m10d44f956fe95e9d005a11a937000000.b8947aa634e301452fdbebd94ac4c133/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v"
  },
  {
    "format": "pg-bb",
    "extension": "m4v",
    "resolution": "640x360",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://content10c3d.omroep.nl/urishieldv2/l27m3e1deec4482e3f84005a11a937000000.1d8b2505e591d87ed1321db0c4163120/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v"
  },
  {
    "format": "pg-std",
    "extension": "m4v",
    "resolution": "960x540",
    "vbitrate": "v:1000k",
    "abitrate": "a:128k",
    "url": "https://content10c3a.omroep.nl/urishieldv2/l27m50060a470f31d465005a11a937000000.bfce79ec7a9c7ac6675dca2efd4178e3/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v"
  }
]

Alleen de nieuwste video's hebben bovenstaande specificaties, dus als we het van alle video's exact willen weten:

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1')"
ffmpeg version N-87867-g0655810-Reino Copyright (c) 2000-2017 the FFmpeg developers
[...]
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'https://content1a.omroep.nl/urishieldv2/l27m2b4dca9a4d2bb652005a15ffbd000000.edee54076d6b4c8b7a361f27735353d0/ceresodi/h264/1/avro/rest/2009/AVRO_1316544/sb.20090108.m4v':
  Metadata:
    major_brand     : M4V
    minor_version   : 1
    compatible_brands: M4V M4A mp42isom
    creation_time   : 2009-01-08T19:34:47.000000Z
  Duration: 00:50:00.19, start: 0.000000, bitrate: 238 kb/s
    Stream #0:0(eng): Video: h264 (Constrained Baseline) (avc1 / 0x31637661), yuv420p(tv, smpte170m/smpte170m/bt709), 160x90, 184 kb/s, 25 fps, 25 tbr, 2500 tbn, 5k tbc (default)
    Metadata:
      creation_time   : 2009-01-08T19:34:47.000000Z
      handler_name    : Apple Video Media Handler
    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 24000 Hz, mono, fltp, 19 kb/s (default)
    Metadata:
      creation_time   : 2009-01-08T19:34:47.000000Z
      handler_name    : Apple Sound Media Handler
    Stream #0:2(und): Data: none (rtp  / 0x20707472), 26 kb/s (default)
    Metadata:
      creation_time   : 2009-01-07T20:24:26.000000Z
      handler_name    : GPAC ISO Hint Handler
    Stream #0:3(und): Data: none (rtp  / 0x20707472), 4 kb/s (default)
    Metadata:
      creation_time   : 2009-01-07T20:25:03.000000Z
      handler_name    : GPAC ISO Hint Handler
At least one output file must be specified

ffmpeg version N-87867-g0655810-Reino Copyright (c) 2000-2017 the FFmpeg developers
[...]
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'https://content1b.omroep.nl/urishieldv2/l27m0da0bf7218326b12005a15ffbd000000.a1ad85c9bb4689ec0bec22606b7f3e8e/ceresodi/h264/1/avro/rest/2009/AVRO_1316544/bb.20090108.m4v':
  Metadata:
    major_brand     : M4V
    minor_version   : 1
    compatible_brands: M4V M4A mp42isom
    creation_time   : 2009-01-08T19:34:43.000000Z
  Duration: 00:50:00.16, start: 0.000000, bitrate: 544 kb/s
    Stream #0:0(eng): Video: h264 (Constrained Baseline) (avc1 / 0x31637661), yuv420p(tv, smpte170m/smpte170m/bt709), 320x180, 457 kb/s, 25 fps, 25 tbr, 2500 tbn, 5k tbc (default)
    Metadata:
      creation_time   : 2009-01-08T19:34:43.000000Z
      handler_name    : Apple Video Media Handler
    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 32000 Hz, stereo, fltp, 45 kb/s (default)
    Metadata:
      creation_time   : 2009-01-08T19:34:43.000000Z
      handler_name    : Apple Sound Media Handler
    Stream #0:2(und): Data: none (rtp  / 0x20707472), 31 kb/s (default)
    Metadata:
      creation_time   : 2009-01-07T20:24:28.000000Z
      handler_name    : GPAC ISO Hint Handler
    Stream #0:3(und): Data: none (rtp  / 0x20707472), 5 kb/s (default)
    Metadata:
      creation_time   : 2009-01-07T20:27:36.000000Z
      handler_name    : GPAC ISO Hint Handler
At least one output file must be specified

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':'pg-'||extract($x,'.+/([a-z]+)',1),'extension':'m4v','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}]"
[
  {
    "format": "pg-sb",
    "extension": "m4v",
    "resolution": "160x90",
    "vbitrate": "v:184k",
    "abitrate": "a:19k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m3db4104a7e0f0076005a15ff6b000000.6dd3ebf42959ddc67a376012cceea604/ceresodi/h264/1/avro/rest/2009/AVRO_1316544/sb.20090108.m4v"
  },
  {
    "format": "pg-bb",
    "extension": "m4v",
    "resolution": "320x180",
    "vbitrate": "v:457k",
    "abitrate": "a:45k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m1e9c1468040c08b9005a15ff6c000000.ae24273b9505a29df8ae7ded40512ac8/ceresodi/h264/1/avro/rest/2009/AVRO_1316544/bb.20090108.m4v"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':'pg-'||extract($x,'.+/([a-z]+)',1),'extension':'m4v','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}]"
[
  {
    "format": "pg-sb",
    "extension": "m4v",
    "resolution": "480x270",
    "vbitrate": "v:200k",
    "abitrate": "a:64k",
    "url": "https://content1b.omroep.nl/urishieldv2/l27m380de1a304c4aca6005a160dee000000.b97682d0ac1817a82fa66699455850f6/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v"
  },
  {
    "format": "pg-bb",
    "extension": "m4v",
    "resolution": "640x360",
    "vbitrate": "v:500k",
    "abitrate": "a:127k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m7bdd511c16dd7dfb005a160dee000000.3ae084b4bb2f5dda05030eb45284e2c0/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v"
  },
  {
    "format": "pg-std",
    "extension": "m4v",
    "resolution": "960x540",
    "vbitrate": "v:994k",
    "abitrate": "a:127k",
    "url": "https://content1b.omroep.nl/urishieldv2/l27m2f1f8c462aa498c9005a160dee000000.67bc84171c175b0fb1b199d2f1c620f1/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Dynamische videostreams

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a[format='hls']/json(replace(url,'jsonp','json'))"
{
  "errorcode": 0,
  "family": "adaptive",
  "path": "/urishieldv2/l27m00be98fc21ce6133005a11a399000000.5ded0ca56df6470c9b1e6dea69e24e63/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508.m3u8",
  "protocol": "https",
  "server": "adaptive-e50c1a.npostreaming.nl",
  "wait": 0,
  "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m00be98fc21ce6133005a11a399000000.5ded0ca56df6470c9b1e6dea69e24e63/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508.m3u8"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() let $b:=$a[format='hls']/json(replace(url,'jsonp','json'))/url return tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:'))"
PROGRAM-ID=1,BANDWIDTH=316000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=480x270,AUDIO="audio-96"
POW_03375508-audio=96000-video=202000.m3u8

PROGRAM-ID=1,BANDWIDTH=350000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=480x270,AUDIO="audio-128"
POW_03375508-audio=128000-video=202000.m3u8

PROGRAM-ID=1,BANDWIDTH=418000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=480x270,AUDIO="audio-192"
POW_03375508-audio=192000-video=202000.m3u8

PROGRAM-ID=1,BANDWIDTH=634000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=640x360,AUDIO="audio-96"
POW_03375508-audio=96000-video=502000.m3u8

PROGRAM-ID=1,BANDWIDTH=668000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=640x360,AUDIO="audio-128"
POW_03375508-audio=128000-video=502000.m3u8

PROGRAM-ID=1,BANDWIDTH=736000,CODECS="mp4a.40.2,avc1.42C01E",RESOLUTION=640x360,AUDIO="audio-192"
POW_03375508-audio=192000-video=502000.m3u8

PROGRAM-ID=1,BANDWIDTH=1269000,CODECS="mp4a.40.2,avc1.42C029",RESOLUTION=1024x576,AUDIO="audio-96"
POW_03375508-audio=96000-video=1101000.m3u8

PROGRAM-ID=1,BANDWIDTH=1303000,CODECS="mp4a.40.2,avc1.42C029",RESOLUTION=1024x576,AUDIO="audio-128"
POW_03375508-audio=128000-video=1101000.m3u8

PROGRAM-ID=1,BANDWIDTH=1371000,CODECS="mp4a.40.2,avc1.42C029",RESOLUTION=1024x576,AUDIO="audio-192"
POW_03375508-audio=192000-video=1101000.m3u8

PROGRAM-ID=1,BANDWIDTH=2008000,CODECS="mp4a.40.2,avc1.42C033",RESOLUTION=1024x576,AUDIO="audio-96"
POW_03375508-audio=96000-video=1798000.m3u8

PROGRAM-ID=1,BANDWIDTH=2042000,CODECS="mp4a.40.2,avc1.42C033",RESOLUTION=1024x576,AUDIO="audio-128"
POW_03375508-audio=128000-video=1798000.m3u8

PROGRAM-ID=1,BANDWIDTH=2110000,CODECS="mp4a.40.2,avc1.42C033",RESOLUTION=1024x576,AUDIO="audio-192"
POW_03375508-audio=192000-video=1798000.m3u8

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [let $b:=$a[format='hls']/json(replace(url,'jsonp','json'))/url return ({'format':'hls-master','extension':'m3u8','url':$b},tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':replace(.,'.+video=(\d+)\d{3}.+','v:$1k','s'),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$b)||extract(.,'(.+m3u8)',1)})]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508.m3u8"
  },
  {
    "format": "hls-316",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=202000.m3u8"
  },
  {
    "format": "hls-350",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=202000.m3u8"
  },
  {
    "format": "hls-418",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=202000.m3u8"
  },
  {
    "format": "hls-634",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=502000.m3u8"
  },
  {
    "format": "hls-668",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=502000.m3u8"
  },
  {
    "format": "hls-736",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=502000.m3u8"
  },
  {
    "format": "hls-1269",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1101000.m3u8"
  },
  {
    "format": "hls-1303",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1101000.m3u8"
  },
  {
    "format": "hls-1371",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1101000.m3u8"
  },
  {
    "format": "hls-2008",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1798000.m3u8"
  },
  {
    "format": "hls-2042",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1798000.m3u8"
  },
  {
    "format": "hls-2110",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m23c6cd2b2765099e005a11a55f000000.86e60e3b149a4103e03be5985c2b07ec/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1798000.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

https://www.npo.nl/live/npo-1

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "json('http://ida.omroep.nl/app.php/LI_NL1_4188102?token='||json('http://ida.omroep.nl/app.php/auth')/token)"
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Live",
        "contentType": "live",
        "url": "https://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=42615cc227b82ff2cdc961a4ef04cf2f&type=jsonp&protection=url",
        "format": "hls"
      }
    ]
  ]
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/LI_NL1_4188102?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a"
{
  "label": "Live",
  "contentType": "live",
  "url": "https://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=b1c4a83e93ac1ad5d4508a31d60a1b23&type=jsonp&protection=url",
  "format": "hls"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/LI_NL1_4188102?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return ($a[label='Adaptive']/json(replace(url,'jsonp','json'))/url,$a[label='Live']/json(replace(url,'jsonp','json')))"
https://pedgewarer23a.video.kpnstreaming.nl/session/e839e89a-cd49-11e7-a5ce-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=08ad3358703e6e5f71c51200614fb708_1511196696_1511196696

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/LI_NL1_4188102?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a[format='hls']/replace(url,'jsonp','json') ! (if (contains(.,'livestreams')) then json(.) else json(.)/url)"
https://pedgewarea23b.video.kpnstreaming.nl/session/6da8e188-cd4b-11e7-8a84-1458d041afa8/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=59e1d2e87ffa56cde5760e0de15d1f49_1511197350_1511197350

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/LI_NL1_4188102?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [let $b:=$a[format='hls']/replace(url,'jsonp','json') ! (if (contains(.,'livestreams')) then json(.) else json(.)/url) return ({'format':'hls-master','extension':'m3u8','url':$b},for $x in tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$b)||extract(.,'(.+m3u8)',1)} order by $x/format return $x)]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=2efd565caf5f37a7d0df86a7354db6ff_1511197923_1511197923"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000.m3u8"
  },
  {
    "format": "hls-348",
    "extension": "m3u8",
    "resolution": "384x216",
    "vbitrate": "v:200k",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=500000.m3u8"
  },
  {
    "format": "hls-878",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:700k",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=700000.m3u8"
  },
  {
    "format": "hls-1196",
    "extension": "m3u8",
    "resolution": "768x432",
    "vbitrate": "v:1000k",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"
  },
  {
    "format": "hls-2044",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1800k",
    "abitrate": "a:128k",
    "url": "https://pedgewarer23b.video.kpnstreaming.nl/session/c323ceec-cd4c-11e7-ae73-9cb65498b840/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1800000.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

Progressieve videofragmenten

https://www.npo.nl/li-jie-voor-het-eerst-winnares-top-16-na-opgave-solja/05-02-2017/WO_NOS_7303921

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a"
{
  "label": "",
  "contentType": "url",
  "url": "npo://internetvod.omroep.nl/WO_NOS_7303921",
  "format": "adaptive"
}
{
  "label": "",
  "contentType": "url",
  "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2017/02/05/284055.mp4",
  "format": "mp4"
}
{
  "label": "",
  "contentType": "url",
  "url": "http://download.omroep.nl/nos/content-ip/ipod/2017/02/05/284055.mp4",
  "format": "mp4"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return reverse($a[contentType='url'][format='mp4'])"
{
  "label": "",
  "contentType": "url",
  "url": "http://download.omroep.nl/nos/content-ip/ipod/2017/02/05/284055.mp4",
  "format": "mp4"
}
{
  "label": "",
  "contentType": "url",
  "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2017/02/05/284055.mp4",
  "format": "mp4"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [reverse($a[contentType='url'][format='mp4']) ! {'format':'mp4-'||position(),'url':url}]"
[
  {
    "format": "mp4-1",
    "url": "http://download.omroep.nl/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [reverse($a[contentType='url'][format='mp4']) ! {'format':'mp4-'||position(),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url)}]"
[
  {
    "format": "mp4-1",
    "url": "https://video.omroep.nl/secure/31f13ec2362aaa65edf1769220098241/5a19fcb9/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "url": "https://video.omroep.nl/secure/6e17db6bf8b8f3f91f1b11d0a8dd510f/5a19fcb9/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return {'format':'mp4-'||$i,'url':$x}]"
[
  {
    "format": "mp4-1",
    "url": "https://video.omroep.nl/secure/75080dd0bd54c97ff327c183f67d0162/5a1a0c74/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "url": "https://video.omroep.nl/secure/23977b59e3a8f847b0e9aff48f9c961a/5a1a0c74/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

https://www.npo.nl/nieuw-seizoen-hunted/13-07-2017/WO_AT_9826291

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_AT_9826291?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return [for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return {'format':replace($x,'.+\.(.+)','$1-')||$i,'url':$x}]"
[
  {
    "format": "m4v-1",
    "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_288x162_1499953546.m4v"
  },
  {
    "format": "m4v-2",
    "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_544x306_1499953546.m4v"
  },
  {
    "format": "m4v-3",
    "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_704x396_1499953546.m4v"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

http://www.npo.nl/promo-opgelicht-06-09-2016/05-09-2016/WO_AT_4993516

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json('http://ida.omroep.nl/app.php/WO_AT_4993516?token='||json('http://ida.omroep.nl/app.php/auth')/token)/(items)()() return $a"
Error:
err:FODC0002: Internet/HTTP Error: 403
when talking to: http://ida.omroep.nl/app.php/WO_AT_4993516?token=osbnuad2rubpqffiueir41v7u4

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "x:request({'data':'http://ida.omroep.nl/app.php/WO_AT_4993516?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})/json"
{
  "error": "De opgevraagde aflevering is niet gevonden"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "x:request({'data':'http://ida.omroep.nl/app.php/WO_AT_4993516?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]"

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/WO_AT_4993516?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then [for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return {'format':replace($x,'.+\.(.+)','$1-')||$i,'url':$x}] else ()"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then [for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':replace($x,'.+\.(.+)','$1-')||$i,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}] else ()"
[
  {
    "format": "mp4-1",
    "extension": "mp4",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:104k",
    "url": "https://video.omroep.nl/secure/fc0d60a42a718d7e8bc29017bb8cfcbe/5a1a0940/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "extension": "mp4",
    "resolution": "856x482",
    "vbitrate": "v:1504k",
    "abitrate": "a:129k",
    "url": "https://video.omroep.nl/secure/644b31fb4696bdedf43d1bfa8fec864f/5a1a0940/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

http://www.npo.nl/promo-victoria/06-01-2017/POMS_EO_6751605 

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/POMS_EO_6751605?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return [...]"
[
  {
    "format": "mp4-1",
    "extension": "mp4",
    "resolution": "288x162",
    "vbitrate": "v:198k",
    "abitrate": "a:53k",
    "url": "http://content.omroep.nl/eo/vod/mp4/PROMOVICTORIAmov_d0c0baec-264k.mp4"
  },
  {
    "format": "mp4-2",
    "extension": "mp4",
    "resolution": "416x234",
    "vbitrate": "v:493k",
    "abitrate": "a:80k",
    "url": "http://content.omroep.nl/eo/vod/mp4/PROMOVICTORIAmov_d0c0baec-628k.mp4"
  },
  {
    "format": "mp4-3",
    "extension": "mp4",
    "resolution": "544x306",
    "vbitrate": "v:694k",
    "abitrate": "a:80k",
    "url": "http://content.omroep.nl/eo/vod/mp4/PROMOVICTORIAmov_d0c0baec-828k.mp4"
  },
  {
    "format": "mp4-4",
    "extension": "mp4",
    "resolution": "608x342",
    "vbitrate": "v:972k",
    "abitrate": "a:80k",
    "url": "http://content.omroep.nl/eo/vod/mp4/PROMOVICTORIAmov_d0c0baec-1092k.mp4"
  }
]

https://www.npo.nl/seksshop-bestolen-van-14-bijna-echte-meisjes/06-09-2017/WO_POWN_10684109

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/WO_POWN_10684109?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then [for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':replace($x,'.+\.(.+)','$1-')||$i,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}] else ()"
[
  {
    "format": "mp4-1",
    "extension": "mp4",
    "resolution": "1920x1080",
    "vbitrate": "v:10004k",
    "abitrate": "a:317k",
    "url": "http://download.omroep.nl/powned/1353%20SEKSSHOP%20BESTOLEN.mp4"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

Progressieve- en dynamische videostreams en progressieve videofragmenten samen

https://www.npo.nl/nos-journaal/18-11-2017/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/POW_03375508?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then [for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':'pg-'||extract($x,'.+/([a-z]+)',1),'extension':'m4v','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x},let $b:=$a[format='hls']/replace(url,'jsonp','json') ! (if (contains(.,'livestreams')) then json(.) else json(.)/url) return ({'format':'hls-master','extension':'m3u8','url':$b},for $x in tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$b)||extract(.,'(.+m3u8)',1)} order by $x/format return $x),for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':replace($x,'.+\.(.+)','$1-')||$i,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}[url]] else ()"
[
  {
    "format": "pg-sb",
    "extension": "m4v",
    "resolution": "480x270",
    "vbitrate": "v:200k",
    "abitrate": "a:64k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m015e40b8507c938d005a1a94b8000000.cbbd552da8862589106e99343f2f267c/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v"
  },
  {
    "format": "pg-bb",
    "extension": "m4v",
    "resolution": "640x360",
    "vbitrate": "v:500k",
    "abitrate": "a:127k",
    "url": "https://content1b.omroep.nl/urishieldv2/l27m092be92516cfcbd2005a1a94b8000000.7381474792f0ba2b87c3c63b1bf89608/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v"
  },
  {
    "format": "pg-std",
    "extension": "m4v",
    "resolution": "960x540",
    "vbitrate": "v:994k",
    "abitrate": "a:127k",
    "url": "https://content1a.omroep.nl/urishieldv2/l27m07076fad050fcd80005a1a94b8000000.e772b426dfc96dd4515d969d61e866e1/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508.m3u8"
  },
  {
    "format": "hls-316",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=202000.m3u8"
  },
  {
    "format": "hls-350",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=202000.m3u8"
  },
  {
    "format": "hls-418",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:202k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=202000.m3u8"
  },
  {
    "format": "hls-634",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=502000.m3u8"
  },
  {
    "format": "hls-668",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=502000.m3u8"
  },
  {
    "format": "hls-736",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=502000.m3u8"
  },
  {
    "format": "hls-1269",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1101000.m3u8"
  },
  {
    "format": "hls-1303",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1101000.m3u8"
  },
  {
    "format": "hls-1371",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1101k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1101000.m3u8"
  },
  {
    "format": "hls-2008",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:96k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1798000.m3u8"
  },
  {
    "format": "hls-2042",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:128k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1798000.m3u8"
  },
  {
    "format": "hls-2110",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1798k",
    "abitrate": "a:192k",
    "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m58aa100e0d7ec778005a1a94bc000000.09270ed3bf4f5275d0d26db7f23e41d2/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1798000.m3u8"
  }
]

https://www.npo.nl/live/npo-1

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "[...]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=b11d3cd5cac9dc3812eba7413f99f883_1511777935_1511777935"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000.m3u8"
  },
  {
    "format": "hls-348",
    "extension": "m3u8",
    "resolution": "384x216",
    "vbitrate": "v:200k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=500000.m3u8"
  },
  {
    "format": "hls-878",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:700k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=700000.m3u8"
  },
  {
    "format": "hls-1196",
    "extension": "m3u8",
    "resolution": "768x432",
    "vbitrate": "v:1000k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"
  },
  {
    "format": "hls-2044",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1800k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/354ee790-d293-11e7-b04f-9cb65498e820/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1800000.m3u8"
  }
]

https://www.npo.nl/li-jie-voor-het-eerst-winnares-top-16-na-opgave-solja/05-02-2017/WO_NOS_7303921

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "[...]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": null
  },
  {
    "format": "mp4-1",
    "extension": "mp4",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:104k",
    "url": "https://video.omroep.nl/secure/d53dda9a8c5c3688918a7edc8f70f6dd/5a1a9533/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "extension": "mp4",
    "resolution": "856x482",
    "vbitrate": "v:1504k",
    "abitrate": "a:129k",
    "url": "https://video.omroep.nl/secure/501bba084e92d96ccd9822e4a7589a30/5a1a9533/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=x:request({'data':'http://ida.omroep.nl/app.php/WO_NOS_7303921?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then [for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':'pg-'||extract($x,'.+/([a-z]+)',1),'extension':'m4v','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x},let $b:=$a[format='hls']/replace(url,'jsonp','json') ! (if (contains(.,'livestreams')) then json(.) else json(.)/url) return ({'format':'hls-master','extension':'m3u8','url':$b}[url],for $x in tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$b)||extract(.,'(.+m3u8)',1)} order by $x/format return $x),for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x} 2>&amp;1') ! {'format':replace($x,'.+\.(.+)','$1-')||$i,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}] else ()"
[
  {
    "format": "mp4-1",
    "extension": "mp4",
    "resolution": "640x360",
    "vbitrate": "v:502k",
    "abitrate": "a:104k",
    "url": "https://video.omroep.nl/secure/d5145e606b2af5f549fbbdc104ff8731/5a1a95e2/nos/content-ip/ipod/2017/02/05/284055.mp4"
  },
  {
    "format": "mp4-2",
    "extension": "mp4",
    "resolution": "856x482",
    "vbitrate": "v:1504k",
    "abitrate": "a:129k",
    "url": "https://video.omroep.nl/secure/cea87e84a216f9e2e7cad53c3b6149fe/5a1a95e2/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

https://www.npo.nl/nos-journaal/18-11-2017/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "json(extract($raw,'\((.+)\)',1))[not(error)] ! (name:=if (medium='live') then concat(titel,replace('%date%','.+?(\d+)-(\d+)-(\d+)',' - Livestream ($1$2$3)')) else replace(concat(if (count(.//naam)=1) then .//naam else join(.//naam,' en '),' - ',if (ptype='episode') then (if (aflevering_titel) then (if (contains(titel,aflevering_titel)) then titel else (if (contains(aflevering_titel,titel)) then aflevering_titel else concat(titel,' - ',aflevering_titel))) else titel) else concat(.//serie_titel,' - ',titel),if (matches('%date%','^\d')) then ' (%date%)' else replace(x:request({'data':'http://www.npo.nl/%prid%','method':'HEAD'})/url,'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),'[&quot;&apos;]',''''''),if (tijdsduur) then (duration:=tijdsduur,t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),if (start) then (start:=start,(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (ss:=.,if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),eind:=eind,to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)) else (),if (publicatie_eind) then (let $a:=dateTime(publicatie_eind) - current-dateTime() return expire:=concat(replace(publicatie_eind,'(\d+)-(\d+)-(\d+)T(.+)\+.+','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ()) else (),if (tt888='ja') then s_url:='http://tt888.omroep.nl/tt888/%prid%' else ()),let $a:=x:request({'data':'http://ida.omroep.nl/app.php/%prid%?token='||json('http://ida.omroep.nl/app.php/auth')/token,'error-handling':'4xx=accept'})[contains(headers[1],'200')]/json/(items)()() return if ($a) then formats:=[for $x in reverse($a[contentType='odi'][format='mp4'])/json(replace(url,'jsonp','json'))/substring-before(url,'?') return system(x'cmd /c %ffmpeg% -i {$x} 2>&amp;1') ! {'format':'pg-'||extract($x,'.+/([a-z]+)',1),'extension':'m4v','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x},let $b:=$a[format='hls']/replace(url,'jsonp','json') ! (if (contains(.,'livestreams')) then json(.) else json(.)/url) return ({'format':'hls-master','extension':'m3u8','url':$b}[url],for $x in tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$b)||extract(.,'(.+m3u8)',1)} order by $x/format return $x),for $x at $i in reverse($a[contentType='url'][format='mp4']) ! x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (contains(url,'content-ip')) then x:request({'post':serialize-json([{'file':url}]),'url':'https://nos.nl/video/resolve/'})//file else url) return system(x'cmd /c %ffmpeg% -i {$x} 2>&amp;1') ! {'format':replace($x,'.+\.(.+)','$1-')||$i,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x}] else ()"
name := NOS - NOS Journaal (18112017)
duration := 00:20:22
t := 1222
expire := 18-11-2018 20:21:17 (nog 357 dagen en 7u4m32s)
s_url := http://tt888.omroep.nl/tt888/POW_03375508
formats := [{"format": "pg-sb", "extension": "m4v", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:64k", "url": "https://content1a.omroep.nl/urishieldv2/l27m7f355abb53ce4330005a1aa296000000.2e1fdf2ee82292207d7108f58d7ef710/ceresodi/h264/p/29/10/10/85/sb_POW_03375508.m4v"}, {"format": "pg-bb", "extension": "m4v", "resolution": "640x360", "vbitrate": "v:500k", "abitrate": "a:127k", "url": "https://content1b.omroep.nl/urishieldv2/l27m32e4e1f7542b3096005a1aa296000000.7a33ab8f10bfb71cfbe98dbbf4ca2325/ceresodi/h264/p/29/10/10/85/bb_POW_03375508.m4v"}, {"format": "pg-std", "extension": "m4v", "resolution": "960x540", "vbitrate": "v:994k", "abitrate": "a:127k", "url": "https://content1a.omroep.nl/urishieldv2/l27m604babe420f737de005a1aa296000000.9a71441eeacf3e7f91ecddc6ba5cf034/ceresodi/h264/p/29/10/10/85/std_POW_03375508.m4v"}, {"format": "hls-master", "extension": "m3u8", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508.m3u8"}, {"format": "hls-316", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:96k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=202000.m3u8"}, {"format": "hls-350", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:128k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=202000.m3u8"}, {"format": "hls-418", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:192k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=202000.m3u8"}, {"format": "hls-634", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:96k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=502000.m3u8"}, {"format": "hls-668", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:128k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=502000.m3u8"}, {"format": "hls-736", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:192k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=502000.m3u8"}, {"format": "hls-1269", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1101k", "abitrate": "a:96k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1101000.m3u8"}, {"format": "hls-1303", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1101k", "abitrate": "a:128k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1101000.m3u8"}, {"format": "hls-1371", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1101k", "abitrate": "a:192k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1101000.m3u8"}, {"format": "hls-2008", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1798k", "abitrate": "a:96k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=96000-video=1798000.m3u8"}, {"format": "hls-2042", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1798k", "abitrate": "a:128k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=128000-video=1798000.m3u8"}, {"format": "hls-2110", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1798k", "abitrate": "a:192k", "url": "https://adaptive-e50c1a.npostreaming.nl/urishieldv2/l27m010b11293f6c6cf8005a1aa299000000.2f5652af052f1103fdf942bd8f5e45fa/p/29/10/10/37/POW_03375508/POW_03375508.ism/POW_03375508-audio=192000-video=1798000.m3u8"}]

https://www.npo.nl/live/npo-1

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "[...]"
name := NPO 1 - Livestream (26112017)
formats := [{"format": "hls-master", "extension": "m3u8", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=579b2ad07b5468034d28dda5b724a36b_1511781574_1511781574"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000.m3u8"}, {"format": "hls-348", "extension": "m3u8", "resolution": "384x216", "vbitrate": "v:200k", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=500000.m3u8"}, {"format": "hls-878", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:700k", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=700000.m3u8"}, {"format": "hls-1196", "extension": "m3u8", "resolution": "768x432", "vbitrate": "v:1000k", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"}, {"format": "hls-2044", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1800k", "abitrate": "a:128k", "url": "https://pedgewarer27b.video.kpnstreaming.nl/session/ae4d249c-d29b-11e7-b7a0-9cb65498c8b0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1800000.m3u8"}]

https://www.npo.nl/nieuw-seizoen-hunted/13-07-2017/WO_AT_9826291
xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "[...]"
name := AVROTROS - Nieuw seizoen Hunted! (13072017)
formats := [{"format": "m4v-1", "extension": "mp4", "resolution": "288x162", "vbitrate": "v:197k", "abitrate": "a:127k", "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_288x162_1499953546.m4v"}, {"format": "m4v-2", "extension": "mp4", "resolution": "544x306", "vbitrate": "v:688k", "abitrate": "a:127k", "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_544x306_1499953546.m4v"}, {"format": "m4v-3", "extension": "mp4", "resolution": "846x476", "vbitrate": "v:1269k", "abitrate": "a:127k", "url": "http://content.omroep.nl/avrotros/transcoding/algemeen/975_1499953546/975_704x396_1499953546.m4v"}]

https://www.npo.nl/li-jie-voor-het-eerst-winnares-top-16-na-opgave-solja/05-02-2017/WO_NOS_7303921

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "[...]"
name := NOS - Li Jie voor het eerst winnares Top-16 na opgave Solja (05022017)
formats := [{"format": "mp4-1", "extension": "mp4", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:104k", "url": "https://video.omroep.nl/secure/dc1d4ec4ed12028685e23fed149c672e/5a1aa380/nos/content-ip/ipod/2017/02/05/284055.mp4"}, {"format": "mp4-2", "extension": "mp4", "resolution": "856x482", "vbitrate": "v:1504k", "abitrate": "a:129k", "url": "https://video.omroep.nl/secure/8accf5236fab284e636e459299b5418c/5a1aa380/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"}]

https://www.npo.nl/hunted/20-11-2017/AT_2084949/POMS_AT_11768999

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "[...]"
name := AVROTROS - Hunted - ''Staan blijven!'' (20112017)
duration := 00:01:59
t := 119
start := 00:02:01
ss := 121
ss1 := 120
ss2 := 1
end := 00:04:00
to := 240
expire := 20-11-2018 21:17:52 (nog 359 dagen en 7u31m55s)
s_url := http://tt888.omroep.nl/tt888/POMS_AT_11768999
formats := [{"format": "pg-sb", "extension": "m4v", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:64k", "url": "https://content10c2d.omroep.nl/urishieldv2/l27m14ef910730fa9e9a005a1aa96f000000.ed83cccd85d8b4e446151dd38ea71328/ceresodi/h264/p/29/10/10/86/sb_AT_2084949.m4v"}, {"format": "pg-bb", "extension": "m4v", "resolution": "640x360", "vbitrate": "v:500k", "abitrate": "a:127k", "url": "https://content10c2b.omroep.nl/urishieldv2/l27m6b81bdb77bff6229005a1aa96f000000.5378bd0ec75e6a2070ceed28d1d4d727/ceresodi/h264/p/29/10/10/86/bb_AT_2084949.m4v"}, {"format": "pg-std", "extension": "m4v", "resolution": "960x540", "vbitrate": "v:982k", "abitrate": "a:127k", "url": "https://content10c2c.omroep.nl/urishieldv2/l27m75548a64033fbc62005a1aa96f000000.3ea04a2bd1b98cfb43dc7895ed655c52/ceresodi/h264/p/29/10/10/86/std_AT_2084949.m4v"}, {"format": "hls-master", "extension": "m3u8", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949.m3u8"}, {"format": "hls-316", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:96k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=96000-video=202000.m3u8"}, {"format": "hls-350", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:128k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=128000-video=202000.m3u8"}, {"format": "hls-418", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:202k", "abitrate": "a:192k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=192000-video=202000.m3u8"}, {"format": "hls-634", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:96k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=96000-video=502000.m3u8"}, {"format": "hls-668", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:128k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=128000-video=502000.m3u8"}, {"format": "hls-736", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:502k", "abitrate": "a:192k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=192000-video=502000.m3u8"}, {"format": "hls-1272", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1104k", "abitrate": "a:96k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=96000-video=1104000.m3u8"}, {"format": "hls-1306", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1104k", "abitrate": "a:128k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=128000-video=1104000.m3u8"}, {"format": "hls-1374", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1104k", "abitrate": "a:192k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=192000-video=1104000.m3u8"}, {"format": "hls-2014", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1804k", "abitrate": "a:96k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=96000-video=1804000.m3u8"}, {"format": "hls-2048", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1804k", "abitrate": "a:128k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=128000-video=1804000.m3u8"}, {"format": "hls-2116", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1804k", "abitrate": "a:192k", "url": "https://adaptive-e10c3a.npostreaming.nl/urishieldv2/l27m38ff3902430b1d21005a1aa972000000.e932d954e39d5b1c1fa3d509f40f2c45/p/29/10/10/37/AT_2084949/AT_2084949.ism/AT_2084949-audio=192000-video=1804000.m3u8"}]

https://www.npo.nl/seksshop-bestolen-van-14-bijna-echte-meisjes/06-09-2017/WO_POWN_10684109

xidel-0.9.7.5706-openssl.exe -s --color=never "http://e.omroep.nl/metadata/%prid%" --xquery "[...]"
name := PowNed - Seksshop bestolen van 14 ''bijna echte'' meisjes (06092017)
duration := 00:01:45
t := 105
formats := [{"format": "mp4-1", "extension": "mp4", "resolution": "1920x1080", "vbitrate": "v:10004k", "abitrate": "a:317k", "url": "http://download.omroep.nl/powned/1353%20SEKSSHOP%20BESTOLEN.mp4"}]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "json(
            extract(
              $raw,
              '\((.+)\)',
              1
            )
          )[not(error)] ! (
            name:=if (medium='live') then
              concat(
                titel,
                replace(
                  '%date%',
                  '.+?(\d+)-(\d+)-(\d+)',
                  ' - Livestream ($1$2$3)'
                )
              )
            else
              replace(
                concat(
                  if (count(.//naam)=1) then
                    .//naam
                  else
                    join(
                      .//naam,
                      ' en '
                    ),
                  ' - ',
                  if (ptype='episode') then (
                    if (aflevering_titel) then (
                      if (contains(titel,aflevering_titel)) then
                        titel
                      else (
                        if (contains(aflevering_titel,titel)) then
                          aflevering_titel
                        else
                          concat(
                            titel,
                            ' - ',
                            aflevering_titel
                          )
                      )
                    ) else
                      titel
                  ) else
                    concat(
                      .//serie_titel,
                      ' - ',
                      titel
                    ),
                  if (matches('%date%','^\d')) then
                    ' (%date%)'
                  else
                    replace(
                      x:request(
                        {
                          'data':'http://www.npo.nl/%prid%',
                          'method':'HEAD'
                        }
                      )/url,
                      '.+?(\d+)-(\d+)-(\d+).+',
                      ' ($1$2$3)'
                    )
                ),
                '[&quot;&apos;]',
                ''''''
              ),
            if (tijdsduur) then (
              duration:=tijdsduur,
              t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),
              if (start) then (
                start:=start,
                (hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (
                  ss:=.,
                  if (. mod 30=0) then (
                    if (.=30) then
                      ()
                    else
                      ss1:=. - 30,
                    ss2:=30
                  ) else (
                    if (.<30) then
                      ()
                    else
                      ss1:=. - (. mod 30),
                    ss2:=. mod 30
                  )
                ),
                end:=eind,
                to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)
              ) else
                (),
              if (publicatie_eind) then (
                let $a:=dateTime(publicatie_eind) - current-dateTime() return
                expire:=concat(
                  replace(
                    publicatie_eind,
                    '(\d+)-(\d+)-(\d+)T(.+)\+.+',
                    '$3-$2-$1 $4'
                  ),
                  ' (nog ',
                  days-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else if (.=1) then
                      .||' dag en '
                    else
                      .||' dagen en '
                  ),
                  hours-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'u'
                  ),
                  minutes-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'m'
                  ),
                  floor(
                    seconds-from-duration($a)
                  ),
                  's)'
                )
              ) else
                ()
            ) else
              (),
            if (tt888='ja') then
              s_url:='http://tt888.omroep.nl/tt888/%prid%'
            else
              ()
          ),
          let $a:=x:request(
            {
              'data':'http://ida.omroep.nl/app.php/%prid%?token='||json(
                'http://ida.omroep.nl/app.php/auth'
              )/token,
              'error-handling':'4xx=accept'
            }
          )[contains(headers[1],'200')]/json/(items)()() return
          if ($a) then
            formats:=[
              for $x in reverse(
                $a[contentType='odi'][format='mp4']
              )/json(
                replace(
                  url,
                  'jsonp',
                  'json'
                )
              )/substring-before(
                url,
                '?'
              ) return
              system(
                x'cmd /c %ffmpeg% -i {$x} 2>&amp;1'
              ) ! {
                'format':'pg-'||extract(
                  $x,
                  '.+/([a-z]+)',
                  1
                ),
                'extension':'m4v',
                'resolution':extract(
                  .,
                  'Video:.+, (\d+x\d+)',
                  1
                ),
                'vbitrate':replace(
                  .,
                  '.+Video:.+?(\d+) kb.+',
                  'v:$1k',
                  's'
                ),
                'abitrate':replace(
                  .,
                  '.+Audio:.+?(\d+) kb.+',
                  'a:$1k',
                  's'
                ),
                'url':$x
              },
              let $b:=$a[format='hls']/replace(
                url,
                'jsonp',
                'json'
              ) ! (
                if (contains(.,'livestreams')) then
                  json(.)
                else
                  json(.)/url
              ) return (
                {
                  'format':'hls-master',
                  'extension':'m3u8',
                  'url':$b
                }[url],
                for $x in tail(
                  tokenize(
                    extract(
                      unparsed-text($b),
                      '(#EXT-X-STREAM-INF.+m3u8$)',
                      1,'ms'
                    ),
                    '#EXT-X-STREAM-INF:'
                  )
                ) ! {
                  'format':'hls-'||extract(
                    .,
                    'BANDWIDTH=(\d+)\d{3}',
                    1
                  ),
                  'extension':'m3u8',
                  'resolution':extract(
                    .,
                    'RESOLUTION=(.+),',
                    1
                  ),
                  'vbitrate':extract(
                    .,
                    'video=(\d+)\d{3}',
                    1
                  ) ! (
                    if (.) then
                      concat(
                        'v:',
                        .,
                        'k'
                      )
                    else
                      ''
                  ),
                  'abitrate':replace(
                    .,
                    '.+audio.+?(\d+)\d{3}.+',
                    'a:$1k',
                    's'
                  ),
                  'url':resolve-uri(
                    '.',
                    $b
                  )||extract(
                    .,
                    '(.+m3u8)',
                    1
                  )
                } order by $x/format return $x
              ),
              for $x at $i in reverse(
                $a[contentType='url'][format='mp4']
              ) ! x:request(
                {
                  'data':url,
                  'method':'HEAD',
                  'error-handling':'xxx=accept'
                }
              )[some $x in ('200','302') satisfies contains(headers[1],$x)]/(
                if (contains(url,'content-ip')) then
                  x:request(
                    {
                      'post':serialize-json(
                        [
                          {
                            'file':url
                          }
                        ]
                      ),
                      'url':'https://nos.nl/video/resolve/'
                    }
                  )//file
                else
                  url
              ) return
              system(
                x'cmd /c %ffmpeg% -i {$x} 2>&amp;1'
              ) ! {
                'format':replace(
                  $x,
                  '.+\.(.+)',
                  '$1-'
                )||$i,
                'extension':'mp4',
                'resolution':extract(
                  .,
                  'Video:.+, (\d+x\d+)',
                  1
                ),
                'vbitrate':replace(
                  .,
                  '.+Video:.+?(\d+) kb.+',
                  'v:$1k',
                  's'
                ),
                'abitrate':replace(
                  .,
                  '.+Audio:.+?(\d+) kb.+',
                  'a:$1k',
                  's'
                ),
                'url':$x
              }
            ]
          else
            ()"

--------------------------------------------------------------------------------------------------------------------------------

Nieuwe NPO api
(de enige reden waarom ik deze nog niet gebruik is omdat FFmpeg SAMPLE-AES nog niet ondersteunt)

https://www.npo.nl/nos-journaal/18-11-2017/POW_03375508

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://www.npo.nl/player/POW_03375508" -e "$json"
{
  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwiaGFzU3Vic2NyaXB0aW9uIjoiIiwiaGFzUHJlbWl1bVN1YnNjcmlwdGlvbiI6IiIsImVsZW1lbnRJZCI6InBsYXllci1QT1dfMDMzNzU1MDgiLCJtZWRpYUlkIjoiUE9XXzAzMzc1NTA4IiwiaWF0IjoxNTExNTM2Mzg0LCJuYmYiOjE1MTE1MzYzODQsImV4cCI6MTUxMTU2NTE4NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MH0.NrwdW7bv_iUQfck0lR0s2N9d-4i4GOQqQlBb9Vkzue8",
  "embedUrl": "https://start-player.npo.nl/embed/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwiaGFzU3Vic2NyaXB0aW9uIjoiIiwiaGFzUHJlbWl1bVN1YnNjcmlwdGlvbiI6IiIsImVsZW1lbnRJZCI6InBsYXllci1QT1dfMDMzNzU1MDgiLCJtZWRpYUlkIjoiUE9XXzAzMzc1NTA4IiwiaWF0IjoxNTExNTM2Mzg0LCJuYmYiOjE1MTE1MzYzODQsImV4cCI6MTUxMTU2NTE4NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MH0.NrwdW7bv_iUQfck0lR0s2N9d-4i4GOQqQlBb9Vkzue8",
  "embedCode": "<script>var urlForIframe = \"https://start-player.npo.nl/embed/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwiaGFzU3Vic2NyaXB0aW9uIjoiIiwiaGFzUHJlbWl1bVN1YnNjcmlwdGlvbiI6IiIsImVsZW1lbnRJZCI6InBsYXllci1QT1dfMDMzNzU1MDgiLCJtZWRpYUlkIjoiUE9XXzAzMzc1NTA4IiwiaWF0IjoxNTExNTM2Mzg0LCJuYmYiOjE1MTE1MzYzODQsImV4cCI6MTUxMTU2NTE4NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MH0.NrwdW7bv_iUQfck0lR0s2N9d-4i4GOQqQlBb9Vkzue8\"; var elementId = \"player-POW_03375508\"; var mediaId = \"POW_03375508\";</script><script src=\"https://start-player.npo.nl/js/embed.js\"></script>"
}

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://www.npo.nl/player/POW_03375508" -e "$json/doc(embedUrl)//script/extract(.,'var video =(.+);',1)[.] ! json(.)"
{
  "id": "POW_03375508",
  "type": "broadcast",
  "title": "NOS Journaal",
  "subtitles": [
    {
      "label": "nl",
      "default": false,
      "language": "nl",
      "src": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_03375508/nl_NL/CAPTION.vtt"
    }
  ],
  "episodeTitle": "NOS Journaal",
  "franchiseTitle": "NOS Journaal 20.00 uur",
  "description": "Met het laatste nieuws, gebeurtenissen van nationaal en internationaal belang en de weersverwachting voor de avond en komende dagen.",
  "duration": 1222,
  "age_rating": null,
  "still_image_url": "https://images.poms.omroep.nl/image/s1280/c1280x720/975831.jpg",
  "post_play_url": "https://images.poms.omroep.nl/image/s223/c223x125/975831.jpg",
  "share_text": "Bekijk NOS Journaal: NOS Journaal op https://www.npo.nl/POW_03375508",
  "share_url": "https://npo.nl/POW_03375508",
  "broadcasters": ["NOS"],
  "broadcastDate": "2017-11-18T19:00:00Z",
  "nextAsset": null,
  "qualityOptions": [					# Dit suggereert dat er 'ergens' HD videostreams beschikbaar moeten zijn, maar ik heb geen idee waar.
    {
      "bitrate": "0",
      "label": "Hoogste",
      "resolution": "1080p",
      "platform": "npo"
    },
    {
      "bitrate": "643000",
      "label": "Hoog",
      "resolution": "720p",
      "platform": "npo"
    },
    {
      "bitrate": "491000",
      "label": "Medium",
      "resolution": "576p",
      "platform": "npo"
    },
    {
      "bitrate": "248000",
      "label": "Laag",
      "resolution": "360p",
      "platform": "npo"
    }
  ],
  "visualRadio": null,
  "episodeNumber": 46,
  "seriesId": "NOSjnl2000",
  "net": null,
  "genres": "informatief,nieuws/actualiteiten",
  "sterTitle": "nosjournaal",
  "recommender": "ts-base",
  "startAt": null
}

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://www.npo.nl/player/POW_03375508" -f "concat('https://start-player.npo.nl/video/POW_03375508/streams?profile=hls&quality=npo&tokenId=',$json/token)" -e "$json"
{
  "stream": {
    "src": "https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/playlist.m3u8",
    "type": "application/vnd.apple.mpegurl",
    "protection": {
      "keySystem": "com.apple.fps.1_0",
      "certificateUrl": "https://s3-eu-west-1.amazonaws.com/24i-npo-stream/fairplay.cer",
      "licenseUrl": "https://npo-drm-gateway.samgcloud.nepworldwide.nl/authentication?custom_data=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJucG8iLCJpYXQiOjE1MTE1MzcxODYsImRybV90eXBlIjoiZmFpcnBsYXkiLCJsaWNlbnNlX3Byb2ZpbGUiOiJ3ZWIiLCJjbGllbnRfaXAiOiI4MC4xMDEuNDkuNSJ9.ChFjaE9VTHhpmFv4vo855fQVOGg0SeYWZKED2BzlGFM"
    }
  },
  "catchupAvailable": false
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
https://start-player.npo.nl/js/app.js:

var n = {
        "com.apple.fps.1_0": "hls",
        "com.widevine.alpha": "dash-widevine",
        "com.microsoft.playready": "dash-playready",
        silverlight: "smooth"
    },
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ffmpeg-N-87867-g0655810-win32-static_legacy.exe -hide_banner -i "https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/playlist.m3u8"
[hls,applehttp @ 04cade80] Opening 'https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/a1/a1.m3u8' for reading
[hls,applehttp @ 04cade80] Opening 'https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/v2/v2.m3u8' for reading
[hls,applehttp @ 04cade80] Opening 'https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/v3/v3.m3u8' for reading
[hls,applehttp @ 04cade80] Opening 'https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/v4/v4.m3u8' for reading
[hls,applehttp @ 04cade80] Opening 'https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/v5/v5.m3u8' for reading
[hls,applehttp @ 04cade80] SAMPLE-AES encryption is not supported yet			# Zo lang gebruik ik deze nieuwe api nog niet.
[hls,applehttp @ 04cade80] Failed to open segment of playlist 0
[...]
Format aac detected only with low score of 1, misdetection possible!
[hls,applehttp @ 04cade80] No longer receiving playlist 0
https://nl-ams-p6-am5.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTE1ODAzOTYsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvZnBzXC9URVNUXC9ucG9cL2hsc1wvUE9XXzAzMzc1NTA4In0.M8hK3u8N6UnS4BlLTOUC3Okrkr8OUv7mAZs_AKTtNGQ/vod/npo/fps/TEST/npo/hls/POW_03375508/playlist.m3u8: Invalid data found when processing input

https://www.npo.nl/li-jie-voor-het-eerst-winnares-top-16-na-opgave-solja/05-02-2017/WO_NOS_7303921

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://www.npo.nl/player/WO_NOS_7303921" -f "concat('https://start-player.npo.nl/video/WO_NOS_7303921/streams?profile=hls&amp;quality=npo&amp;tokenId=',$json/token)" --xquery "[{'format':'hls-master','extension':'m3u8','url':$json//src},for $x in tail(tokenize(extract(unparsed-text($json//src),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':concat(resolve-uri('.',$json//src),extract(.,'(.+m3u8)',1))} order by $x/format return $x]"

of

xidel-0.9.7.5706-openssl.exe -s --color=never --xquery "let $a:=json(concat('https://start-player.npo.nl/video/WO_NOS_7303921/streams?profile=hls&amp;quality=npo&amp;tokenId=',x:request({'data':'https://www.npo.nl/player/WO_NOS_7303921','method':'POST'})/json/token))//src return [{'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($b),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':concat(resolve-uri('.',$b),extract(.,'(.+m3u8)',1))} order by $x/format return $x]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://nl-ams-p13-am3.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTExNDQwMTUsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvdXNwXC9ucG9cL2hsc1wvV09fTk9TXzczMDM5MjFcL1dPX05PU183MzAzOTIxX3Y0LmlzbSJ9.-AivKmVS0xMnl7YyQrn8xsNdWKH2mndRoavTZopD98k/vod/npo/usp/npo/hls/WO_NOS_7303921/WO_NOS_7303921_v4.ism/playlist.m3u8"
  },
  {
    "format": "hls-139",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:130k",
    "url": "https://nl-ams-p13-am3.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTExNDQwMTUsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvdXNwXC9ucG9cL2hsc1wvV09fTk9TXzczMDM5MjFcL1dPX05PU183MzAzOTIxX3Y0LmlzbSJ9.-AivKmVS0xMnl7YyQrn8xsNdWKH2mndRoavTZopD98k/vod/npo/usp/npo/hls/WO_NOS_7303921/WO_NOS_7303921_v4.ism/WO_NOS_7303921_v4-audio_eng=130251.m3u8"
  },
  {
    "format": "hls-687",
    "extension": "m3u8",
    "resolution": "856x482",
    "vbitrate": "v:517k",
    "abitrate": "a:130k",
    "url": "https://nl-ams-p13-am3.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTExNDQwMTUsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvdXNwXC9ucG9cL2hsc1wvV09fTk9TXzczMDM5MjFcL1dPX05PU183MzAzOTIxX3Y0LmlzbSJ9.-AivKmVS0xMnl7YyQrn8xsNdWKH2mndRoavTZopD98k/vod/npo/usp/npo/hls/WO_NOS_7303921/WO_NOS_7303921_v4.ism/WO_NOS_7303921_v4-audio_eng=130251-video=517000.m3u8"
  },
  {
    "format": "hls-1223",
    "extension": "m3u8",
    "resolution": "856x482",
    "vbitrate": "v:1023k",			# En ik ga deze nieuwe api zeker niet gebruiken als ze het origineel (zie hier boven met bitrate 1504k) op deze manier hercoderen.
    "abitrate": "a:130k",
    "url": "https://nl-ams-p13-am3.cdn.streamgate.nl/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1MTExNDQwMTUsImNsaWVudF9pcCI6IjgwLjEwMS40OS41IiwidXJpIjoiXC92b2RcL25wb1wvdXNwXC9ucG9cL2hsc1wvV09fTk9TXzczMDM5MjFcL1dPX05PU183MzAzOTIxX3Y0LmlzbSJ9.-AivKmVS0xMnl7YyQrn8xsNdWKH2mndRoavTZopD98k/vod/npo/usp/npo/hls/WO_NOS_7303921/WO_NOS_7303921_v4.ism/WO_NOS_7303921_v4-audio_eng=130251-video=1023000.m3u8"
  }
]

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/e9d866ede38cc08037c5bd457aa0c1c40466e3cf]

'VPWON_1274590.json':

[{"format": "pg-sb", "extension": "m4v", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:64k", "url": "https://content1a.omroep.nl/urishieldv2/l27m0da85d420476543a005a0ec670000000.d42809f8ed643c559c7836d9aeafabfb/ceresodi/h264/p/1b/10/10/7c/sb_VPWON_1274590.m4v"}, {"format": "pg-bb", "extension": "m4v", "resolution": "640x360", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://content1a.omroep.nl/urishieldv2/l27m06dff7f63401caa6005a0ec670000000.e5f629ea173a5909457c4acac69d9c83/ceresodi/h264/p/1b/10/10/7c/bb_VPWON_1274590.m4v"}, {"format": "pg-std", "extension": "m4v", "resolution": "960x540", "vbitrate": "v:1000k", "abitrate": "a:128k", "url": "https://content1b.omroep.nl/urishieldv2/l27m6d6c3544288687e5005a0ec670000000.a2dced05aee1b84c0b035d659355e890/ceresodi/h264/p/1b/10/10/7c/std_VPWON_1274590.m4v"}, {"format": "hls-master", "extension": "m3u8", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590.m3u8"}, {"format": "hls-314", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:96k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=96000-video=200000.m3u8"}, {"format": "hls-348", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:128k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=128000-video=200000.m3u8"}, {"format": "hls-416", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:200k", "abitrate": "a:192k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=192000-video=200000.m3u8"}, {"format": "hls-631", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:499k", "abitrate": "a:96k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=96000-video=499000.m3u8"}, {"format": "hls-665", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:499k", "abitrate": "a:128k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=128000-video=499000.m3u8"}, {"format": "hls-733", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:499k", "abitrate": "a:192k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=192000-video=499000.m3u8"}, {"format": "hls-1265", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1097k", "abitrate": "a:96k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=96000-video=1097000.m3u8"}, {"format": "hls-1299", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1097k", "abitrate": "a:128k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=128000-video=1097000.m3u8"}, {"format": "hls-1367", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1097k", "abitrate": "a:192k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=192000-video=1097000.m3u8"}, {"format": "hls-2005", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1795k", "abitrate": "a:96k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=96000-video=1795000.m3u8"}, {"format": "hls-2039", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1795k", "abitrate": "a:128k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=128000-video=1795000.m3u8"}, {"format": "hls-2107", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1795k", "abitrate": "a:192k", "url": "https://adaptive-e50c2a.npostreaming.nl/urishieldv2/l27m3b9778ad1417ee23005a0ec670000000.82554cd211af309b7b82a6abf6ef501f/p/1b/10/10/34/VPWON_1274590/VPWON_1274590.ism/VPWON_1274590-audio=192000-video=1795000.m3u8"}]


Opsomming beschikbare formaten

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "let $a:=('format','extension','resolution','vbitrate','abitrate') for $x in $json() return join($a ! $x(.))"
pg-sb m4v 480x270 v:200k a:64k
pg-bb m4v 640x360 v:500k a:128k
pg-std m4v 960x540 v:1000k a:128k
hls-master m3u8
hls-314 m3u8 480x270 v:200k a:96k
hls-348 m3u8 480x270 v:200k a:128k
hls-416 m3u8 480x270 v:200k a:192k
hls-631 m3u8 640x360 v:499k a:96k
hls-665 m3u8 640x360 v:499k a:128k
hls-733 m3u8 640x360 v:499k a:192k
hls-1265 m3u8 1024x576 v:1097k a:96k
hls-1299 m3u8 1024x576 v:1097k a:128k
hls-1367 m3u8 1024x576 v:1097k a:192k
hls-2005 m3u8 1024x576 v:1795k a:96k
hls-2039 m3u8 1024x576 v:1795k a:128k
hls-2107 m3u8 1024x576 v:1795k a:192k

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Andersom, voor de gein

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "for $x in reverse($json()/format) let $a:=('format','extension','resolution','vbitrate','abitrate') for $y in $json()[format=$x] return join($a ! $y(.))"
hls-2107 m3u8 1024x576 v:1795k a:192k
hls-2039 m3u8 1024x576 v:1795k a:128k
hls-2005 m3u8 1024x576 v:1795k a:96k
hls-1367 m3u8 1024x576 v:1097k a:192k
hls-1299 m3u8 1024x576 v:1097k a:128k
hls-1265 m3u8 1024x576 v:1097k a:96k
hls-733 m3u8 640x360 v:499k a:192k
hls-665 m3u8 640x360 v:499k a:128k
hls-631 m3u8 640x360 v:499k a:96k
hls-416 m3u8 480x270 v:200k a:192k
hls-348 m3u8 480x270 v:200k a:128k
hls-314 m3u8 480x270 v:200k a:96k
hls-master m3u8
pg-std m4v 960x540 v:1000k a:128k
pg-bb m4v 640x360 v:500k a:128k
pg-sb m4v 480x270 v:200k a:64k

of

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "for $x in (for $x in $json()[matches(format,'hls-\d+')]/format order by $x descending return $x,$json()[format='hls-master']/format,for $x in $json()[starts-with(format,'pg')] order by $x/resolution descending return $x/format) let $a:=('format','extension','resolution','vbitrate','abitrate') for $y in $json()[format=$x] return join($a ! $y(.))"
hls-2107 m3u8 1024x576 v:1795k a:192k
hls-2039 m3u8 1024x576 v:1795k a:128k
hls-2005 m3u8 1024x576 v:1795k a:96k
hls-1367 m3u8 1024x576 v:1097k a:192k
hls-1299 m3u8 1024x576 v:1097k a:128k
hls-1265 m3u8 1024x576 v:1097k a:96k
hls-733 m3u8 640x360 v:499k a:192k
hls-665 m3u8 640x360 v:499k a:128k
hls-631 m3u8 640x360 v:499k a:96k
hls-416 m3u8 480x270 v:200k a:192k
hls-348 m3u8 480x270 v:200k a:128k
hls-314 m3u8 480x270 v:200k a:96k
hls-master m3u8
pg-std m4v 960x540 v:1000k a:128k
pg-bb m4v 640x360 v:500k a:128k
pg-sb m4v 480x270 v:200k a:64k

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Het gebruik van een TAB heeft niet het gewenste resultaat

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "let $a:=('format','extension','resolution','vbitrate','abitrate') for $x in $json() return join($a ! $x(.),'&#x9;')"
pg-sb   m4v     480x270 v:200k  a:64k
pg-bb   m4v     640x360 v:500k  a:128k
pg-std  m4v     960x540 v:1000k a:128k
hls-master      m3u8
hls-314 m3u8    480x270 v:200k  a:96k
hls-348 m3u8    480x270 v:200k  a:128k
hls-416 m3u8    480x270 v:200k  a:192k
hls-631 m3u8    640x360 v:499k  a:96k
hls-665 m3u8    640x360 v:499k  a:128k
hls-733 m3u8    640x360 v:499k  a:192k
hls-1265        m3u8    1024x576        v:1097k a:96k
hls-1299        m3u8    1024x576        v:1097k a:128k
hls-1367        m3u8    1024x576        v:1097k a:192k
hls-2005        m3u8    1024x576        v:1795k a:96k
hls-2039        m3u8    1024x576        v:1795k a:128k
hls-2107        m3u8    1024x576        v:1795k a:192k

De maximale kolombreedte voor elk van de eigenschappen

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "let $a:=('format','extension','resolution','vbitrate','abitrate') return $a ! max($json()(.) ! string-length(.))"
10
4
8
7
6

De maximale kolombreedte toegepast, plus 2 spaties tussenruimte

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "let $a:=('format','extension','resolution','vbitrate','abitrate') let $b:=$a ! max($json()(.) ! string-length(.)) for $x in $json() return string-join(for $y at $i in $a return substring(string-join(($x($y),for $x in 1 to $b[$i]+2 return ' ')),1,$b[$i]+2))"
pg-sb       m4v   480x270   v:200k   a:64k
pg-bb       m4v   640x360   v:500k   a:128k
pg-std      m4v   960x540   v:1000k  a:128k
hls-master  m3u8
hls-314     m3u8  480x270   v:200k   a:96k
hls-348     m3u8  480x270   v:200k   a:128k
hls-416     m3u8  480x270   v:200k   a:192k
hls-631     m3u8  640x360   v:499k   a:96k
hls-665     m3u8  640x360   v:499k   a:128k
hls-733     m3u8  640x360   v:499k   a:192k
hls-1265    m3u8  1024x576  v:1097k  a:96k
hls-1299    m3u8  1024x576  v:1097k  a:128k
hls-1367    m3u8  1024x576  v:1097k  a:192k
hls-2005    m3u8  1024x576  v:1795k  a:96k
hls-2039    m3u8  1024x576  v:1795k  a:128k
hls-2107    m3u8  1024x576  v:1795k  a:192k

Alternatief van Benito, plus 2 extra spaties aan het begin

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json --xquery "let $a:=('format','extension','resolution','vbitrate','abitrate') let $b:=$a ! max($json()(.) ! string-length(.)) let $c:=string-join((1 to sum($b)) ! ' ') for $x in $json() return '  '||string-join(for $y at $i in $a return substring($x($y)||$c,1,$b[$i]+2))"
  pg-sb       m4v   480x270   v:200k   a:64k
  pg-bb       m4v   640x360   v:500k   a:128k
  pg-std      m4v   960x540   v:1000k  a:128k
  hls-master  m3u8
  hls-314     m3u8  480x270   v:200k   a:96k
  hls-348     m3u8  480x270   v:200k   a:128k
  hls-416     m3u8  480x270   v:200k   a:192k
  hls-631     m3u8  640x360   v:499k   a:96k
  hls-665     m3u8  640x360   v:499k   a:128k
  hls-733     m3u8  640x360   v:499k   a:192k
  hls-1265    m3u8  1024x576  v:1097k  a:96k
  hls-1299    m3u8  1024x576  v:1097k  a:128k
  hls-1367    m3u8  1024x576  v:1097k  a:192k
  hls-2005    m3u8  1024x576  v:1795k  a:96k
  hls-2039    m3u8  1024x576  v:1795k  a:128k
  hls-2107    m3u8  1024x576  v:1795k  a:192k

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json -e "$json()[starts-with(format,'pg')][last()]/format"
pg-std

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json -e "max($json()[format!='hls-master'][starts-with(format,'hls')]/format)"
hls-2107

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json -e "max($json()[replace(format,'hls-','') castable as int]/format)"
hls-2107

xidel-0.9.7.5706-openssl.exe -s --color=never VPWON_1274590.json -e "max($json()[matches(format,'hls-\d+')]/format)"
hls-2107

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/128a49f1c24796df01967f41981a883410b6ac59]
[https://github.com/Reino17/BatchGemist/commit/e69868def8a5576e733289d4f84e494f9611da2f]

xidel-0.9.7.5706-openssl.exe -s --color=never -e "extract(system('cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i \"https://video.omroep.nl/secure/f8aaf3d0799bbb96fab52e7e3d934cef/5a2180b8/nos/content-ip/mp4/web03/2017/02/05/284055.mp4\" 2>&1'),'(Duration: .+?),',1)"
Duration: 00:04:53.99

xidel-0.9.7.5706-openssl.exe -s --color=never -e "extract(system('cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i \"https://pedgewarer23b.video.kpnstreaming.nl/session/dc48616a-d6b3-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1800000.m3u8\" 2>&1'),'(Duration: .+?),',1)"
Duration: N/A

xidel-0.9.7.5706-openssl.exe -s --color=never -e "let $a:=extract(system('cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i \"https://video.omroep.nl/secure/f8aaf3d0799bbb96fab52e7e3d934cef/5a2180b8/nos/content-ip/mp4/web03/2017/02/05/284055.mp4\" 2>&1'),'Duration: (.+?),',1) return if ($a castable as time) then concat(extract($a,'(.+:)',1),round(seconds-from-time($a))) else ()"
00:04:54

xidel-0.9.7.5706-openssl.exe -s --color=never -e "let $a:=extract(system('cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i \"https://video.omroep.nl/secure/f8aaf3d0799bbb96fab52e7e3d934cef/5a2180b8/nos/content-ip/mp4/web03/2017/02/05/284055.mp4\" 2>&1'),'Duration: (.+?),',1) return if ($a castable as time) then round(seconds-from-time($a)) ! (duration:=concat(extract($a,'(.+:)',1),.),t:=hours-from-time($a)*3600+minutes-from-time($a)*60+.) else ()"
duration := 00:04:54
t := 294

-e "let $a:=extract(
      system(
        'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i \"https://video.omroep.nl/secure/f8aaf3d0799bbb96fab52e7e3d934cef/5a2180b8/nos/content-ip/mp4/web03/2017/02/05/284055.mp4\" 2>&1'
      ),
      'Duration: (.+?),',
      1
    ) return
    if ($a castable as time) then
      round(
        seconds-from-time($a)
      ) ! (
        duration:=concat(
          extract(
            $a,
            '(.+:)',
            1
          ),
          .
        ),
        t:=hours-from-time($a)*3600+minutes-from-time($a)*60+.
      )
    else
      ()"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/5a6d0bf7b023ad1a7263c3a4fe846f800bedd6e8]
[https://github.com/Reino17/BatchGemist/commit/bfac669aff1b9e0a30a904e9e88021c702b0c6c2]

https://www.rtl.nl/video/d4e31e66-e403-33d5-8f44-a3886e42be51/

xidel-0.9.7.5706-openssl.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=d4e31e66-e403-33d5-8f44-a3886e42be51/fmt=adaptive/" -e "q:=$json//quality" -f "$json/(if (meta/nr_of_videos_total=0) then () else concat(meta/videohost,material/videopath))" --xquery "[(if ($q='HD') then ('a2t','a3t','nettv') else ('a2t','a3t')) ! {'format':'pg-'||.,'extension':'mp4','resolution':if (.='a2t') then '512x288' else if (.='a3t') then '704x400' else '1280x720','url':replace($url,'.+(/comp.+)m3u8',concat('http://pg.us.rtl.nl/rtlxl/network/',.,'/progressive$1mp4')),'teapot':true},{'format':'hls-master','extension':'m3u8','url':$url},for $x in tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':extract(.,'(.+m3u8)',1)} order by $x/format return $x]"
q := HD
[
  {
    "format": "pg-a2t",
    "extension": "mp4",
    "resolution": "512x288",
    "url": "http://pg.us.rtl.nl/rtlxl/network/a2t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "pg-a3t",
    "extension": "mp4",
    "resolution": "704x400",
    "url": "http://pg.us.rtl.nl/rtlxl/network/a3t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "pg-nettv",
    "extension": "mp4",
    "resolution": "1280x720",
    "url": "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.m3u8"
  },
  {
    "format": "hls-132",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437.m3u8"
  },
  {
    "format": "hls-1256",
    "extension": "m3u8",
    "resolution": "711x400",
    "vbitrate": "v:1060k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=1060000.m3u8"
  },
  {
    "format": "hls-2487",
    "extension": "m3u8",
    "resolution": "912x512",
    "vbitrate": "v:2221k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=2221000.m3u8"
  },
  {
    "format": "hls-4381",
    "extension": "m3u8",
    "resolution": "1280x720",
    "vbitrate": "v:4008k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=4008000.m3u8"
  }
]

De pg-a2t videostream heeft lang niet altijd een resolutie van 512x288. Om dat zeker te weten en om de bitrates te achterhalen:

ffmpeg-N-87867-g0655810-win32-static_legacy.exe -hide_banner -i "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4"
[http @ 04cae680] HTTP error 418 I'm a teapot
http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4: Server returned 4XX Client Error, but not one of 40{0,1,3,4}

ffmpeg-N-87867-g0655810-win32-static_legacy.exe -hide_banner -user_agent "BatchGemist 1.6-git" -i "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4"
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from 'http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4':
  Metadata:
    major_brand     : isom
    minor_version   : 1
    compatible_brands: isomiso2avc1
  Duration: 00:20:14.20, start: 0.000000, bitrate: 4136 kb/s
    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 1280x720 [SAR 1:1 DAR 16:9], 4007 kb/s, 25 fps, 25 tbr, 12800 tbn, 50 tbc (default)
    Metadata:
      handler_name    : USP Video Handler
      encoder         : AVC Coding
    Stream #0:1(und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 125 kb/s (default)
    Metadata:
      handler_name    : USP Sound Handler
At least one output file must be specified

xidel-0.9.7.5706-openssl.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=d4e31e66-e403-33d5-8f44-a3886e42be51/fmt=adaptive/" -e "q:=$json//quality" -f "$json/(if (meta/nr_of_videos_total=0) then () else concat(meta/videohost,material/videopath))" --xquery "let $a:=if ($q='HD') then ('a2t','a3t','nettv') else ('a2t','a3t') return [for $x at $i in ($a ! replace($url,'.+(/comp.+)m3u8',concat('http://pg.us.rtl.nl/rtlxl/network/',.,'/progressive$1mp4'))) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -user_agent \"BatchGemist 1.6-git\" -i {$x} 2>&amp;1') ! {'format':'pg-'||$a[$i],'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x,'teapot':true},{'format':'hls-master','extension':'m3u8','url':$url},for $x in tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':extract(.,'(.+m3u8)',1)} order by $x/format return $x]"
q := HD
[
  {
    "format": "pg-a2t",
    "extension": "mp4",
    "resolution": "704x400",
    "vbitrate": "v:1059k",
    "abitrate": "a:125k",
    "url": "http://pg.us.rtl.nl/rtlxl/network/a2t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "pg-a3t",
    "extension": "mp4",
    "resolution": "704x400",
    "vbitrate": "v:1059k",
    "abitrate": "a:125k",
    "url": "http://pg.us.rtl.nl/rtlxl/network/a3t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "pg-nettv",
    "extension": "mp4",
    "resolution": "1280x720",
    "vbitrate": "v:4007k",
    "abitrate": "a:125k",
    "url": "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4",
    "teapot": true
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.m3u8"
  },
  {
    "format": "hls-132",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437.m3u8"
  },
  {
    "format": "hls-1256",
    "extension": "m3u8",
    "resolution": "711x400",
    "vbitrate": "v:1060k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=1060000.m3u8"
  },
  {
    "format": "hls-2487",
    "extension": "m3u8",
    "resolution": "912x512",
    "vbitrate": "v:2221k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=2221000.m3u8"
  },
  {
    "format": "hls-4381",
    "extension": "m3u8",
    "resolution": "1280x720",
    "vbitrate": "v:4008k",
    "abitrate": "a:125k",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=4008000.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

https://www.rtl.nl/video/d4e31e66-e403-33d5-8f44-a3886e42be51/

xidel-0.9.7.5706-openssl.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=d4e31e66-e403-33d5-8f44-a3886e42be51/fmt=adaptive/" --xquery "$json/(name:=replace(concat(.//station,' - ',abstracts/name,' - ',if (.//classname='uitzending') then episodes/name else .//title,replace(.//original_date * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),'[&quot;&apos;]',''''''),q:=.//quality,(material)()/(duration:=substring-before(duration,'.'),t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),if ((.//ddr_timeframes)()[model='AVOD']/stop) then let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00') let $b:=$a - current-dateTime() return expire:=concat(replace($a,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($b) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($b) ! (if (.=0) then () else .||'u'),minutes-from-duration($b) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($b)),'s)') else ()))" -f "$json/(if (meta/nr_of_videos_total=0) then () else concat(meta/videohost,material/videopath))" --xquery "let $a:=if ($q='HD') then ('a2t','a3t','nettv') else ('a2t','a3t') return formats:=[for $x at $i in ($a ! replace($url,'.+(/comp.+)m3u8',concat('http://pg.us.rtl.nl/rtlxl/network/',.,'/progressive$1mp4'))) return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -user_agent \"BatchGemist 1.6-git\" -i {$x} 2>&amp;1') ! {'format':'pg-'||$a[$i],'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x,'teapot':true},{'format':'hls-master','extension':'m3u8','url':$url},for $x in tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':extract(.,'(.+m3u8)',1)} order by $x/format return $x]"
name := RTL4 - RTL Nieuws - 19:30 uur (18112017)
q := HD
duration := 00:20:14
t := 1214
expire := 19-11-2018 05:48:44 (nog 359 dagen en 17u51m39s)
formats := [{"format": "pg-a2t", "extension": "mp4", "resolution": "704x400", "vbitrate": "v:1059k", "abitrate": "a:125k", "url": "http://pg.us.rtl.nl/rtlxl/network/a2t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4", "teapot": true}, {"format": "pg-a3t", "extension": "mp4", "resolution": "704x400", "vbitrate": "v:1059k", "abitrate": "a:125k", "url": "http://pg.us.rtl.nl/rtlxl/network/a3t/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4", "teapot": true}, {"format": "pg-nettv", "extension": "mp4", "resolution": "1280x720", "vbitrate": "v:4007k", "abitrate": "a:125k", "url": "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.mp4", "teapot": true}, {"format": "hls-master", "extension": "m3u8", "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.m3u8"}, {"format": "hls-132", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:125k", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437.m3u8"}, {"format": "hls-1256", "extension": "m3u8", "resolution": "711x400", "vbitrate": "v:1060k", "abitrate": "a:125k", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=1060000.m3u8"}, {"format": "hls-2487", "extension": "m3u8", "resolution": "912x512", "vbitrate": "v:2221k", "abitrate": "a:125k", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=2221000.m3u8"}, {"format": "hls-4381", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:4008k", "abitrate": "a:125k", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w46/d4e31e66-e403-33d5-8f44-a3886e42be51.ssm/d4e31e66-e403-33d5-8f44-a3886e42be51.ism/d4e31e66-e403-33d5-8f44-a3886e42be51-audio=125437-video=4008000.m3u8"}]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "$json/(
            name:=replace(
              concat(
                .//station,
                ' - ',
                abstracts/name,
                ' - ',
                if (.//classname='uitzending') then
                  episodes/name
                else
                  .//title,
                replace(
                  .//original_date * dayTimeDuration('PT1S') + date('1970-01-01'),
                  '(\d+)-(\d+)-(\d+)',
                  ' ($3$2$1)'
                )
              ),
              '[&quot;&apos;]',
              ''''''
            ),
            q:=.//quality,
            (material)()/(
              duration:=substring-before(
                duration,
                '.'
              ),
              t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),
              if ((.//ddr_timeframes)()[model='AVOD']/stop) then
                let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00')
                let $b:=$a - current-dateTime() return
                expire:=concat(
                  replace(
                    $a,
                    '(\d+)-(\d+)-(\d+)T(.+)',
                    '$3-$2-$1 $4'
                  ),
                  ' (nog ',
                  days-from-duration($b) ! (
                    if (.=0) then
                      ()
                    else if (.=1) then
                      .||' dag en '
                    else
                      .||' dagen en '
                  ),
                  hours-from-duration($b) ! (
                    if (.=0) then
                      ()
                    else
                      .||'u'
                  ),
                  minutes-from-duration($b) ! (
                    if (.=0) then
                      ()
                    else
                      .||'m'
                  ),
                  floor(
                    seconds-from-duration($b)
                  ),
                  's)'
                )
              else
                ()
            )
          )"
-f "$json/(
      if (meta/nr_of_videos_total=0) then
        ()
      else
        concat(
          meta/videohost,
          material/videopath
        )
    )"
--xquery "let $a:=if ($q='HD') then
            ('a2t','a3t','nettv')
          else
            ('a2t','a3t') return
          formats:=[
            for $x at $i in (
              $a ! replace(
                $url,
                '.+(/comp.+)m3u8',
                concat(
                  'http://pg.us.rtl.nl/rtlxl/network/',
                  .,
                  '/progressive$1mp4'
                )
              )
            ) return
            system(
              x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -user_agent \"BatchGemist 1.6-git\" -i {$x} 2>&amp;1'
            ) ! {
              'format':'pg-'||$a[$i],
              'extension':'mp4',
              'resolution':extract(
                .,
                'Video:.+, (\d+x\d+)',
                1
              ),
              'vbitrate':replace(
                .,
                '.+Video:.+?(\d+) kb.+',
                'v:$1k',
                's'
              ),
              'abitrate':replace(
                .,
                '.+Audio:.+?(\d+) kb.+',
                'a:$1k',
                's'
              ),
              'url':$x,
              'teapot':true
            },
            {
              'format':'hls-master',
              'extension':'m3u8',
              'url':$url
            },
            for $x in tail(
              tokenize(
                $raw,
                '#EXT-X-STREAM-INF:'
              )
            ) ! {
              'format':'hls-'||extract(
                .,
                'BANDWIDTH=(\d+)\d{3}',
                1
              ),
              'extension':'m3u8',
              'resolution':extract(
                .,
                'RESOLUTION=(.+)',
                1
              ),
              'vbitrate':extract(
                .,
                'video=(\d+)\d{3}',
                1
              ) ! (
                if (.) then
                  concat(
                    'v:',
                    .,
                    'k'
                  )
                else
                  ''
              ),
              'abitrate':replace(
                .,
                '.+audio.+?(\d+)\d{3}.+',
                'a:$1k',
                's'
              ),
              'url':extract(
                .,
                '(.+m3u8)',
                1
              )
            } order by $x/format return $x
          ]"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/feb2b1964a18164fb9ccd38f2ac78ac322670f58]
[https://github.com/Reino17/BatchGemist/commit/62eecea09f25c725b644969d250f931debd985f4]
[https://github.com/Reino17/BatchGemist/commit/60b11d43e9be9fa49289914d3e8458cf53456b01]
[https://github.com/Reino17/BatchGemist/commit/ae8be184a02c3ef1f7ca2b13acd4f23bc313efbb]
[https://github.com/Reino17/BatchGemist/commit/0cdfeede4b7cf2505a88847c2d128d5c3667b59f]

xidel-0.9.7.5706-openssl.exe -s --color=never -e "prid:=extract('http://www.kijk.nl/net5/pekingexpress/videos/w7ZW52xLgL5/aflevering-1/','(?:video|videos)/(\w+)',1)"
prid := w7ZW52xLgL5

xidel-0.9.7.5706-openssl.exe -s --color=never -e "prid:=extract('http://www.kijk.nl/video/w7ZW52xLgL5','(?:video|videos)/(\w+)',1)"
prid := w7ZW52xLgL5

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/net5/pekingexpress/videos/w7ZW52xLgL5/aflevering-1

--> http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo"
{
  "sbsvpakey": "w7ZW52xLgL5",
  "hostingkey": "w7ZW52xLgL5_dbzyr6",
  "license": {
    "licenseId": "ZXJpY3Nzb24uLnNkLnc3Wlc1MnhMZ0w1X2RienlyNg==",
    "licensetype": "FVOD",
    "pricecode": "SanomaFREE",
    "promotions": [],
    "ishd": false,
    "startdate": {
      "date": "2017-04-03 21:53:44.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "enddate": {
      "date": "2020-03-31 05:55:00.000000",			# Hier halen we de "Gratis tot"-datum uit. Het object "enddate" is niet altijd gegeven.
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "price": 0,
    "hascontent": true,
    "preroll": true,
    "hostingkey": "w7ZW52xLgL5_dbzyr6",
    "hostingservice": "ericsson",					# In dit geval zijn uiteindelijk óók de "brightcove" video's beschikbaar. Bij andere programma-urls weer niet. We kunnen dus niet van dit attribuut op aan en zullen zelf op onderzoek uit moeten.
    "AvailableOutletDevices": [
      {
        "Outlet": "WEB",
        "Device": "PC"
      },
      [...]
    ]
  },
  "embed_video_url": "//embed.kijk.nl/?video=w7ZW52xLgL5",
  "embed_api_url": "http://embed.kijk.nl/api/video/w7ZW52xLgL5?id=kijkapp",
  "hasDRM": false									# Als dit 'true' is, dan kijken we niet eens verder, omdat de uiteindelijke video's niet zijn af te spelen.
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo[not(hasDRM)]/(if (.//enddate) then dateTime(replace(.//enddate/date,' ','T')) ! (let $a:=. - current-dateTime() return concat(replace(.,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ())"
31-03-2020 05:55:00 (nog 960 dagen en 16u4m27s)

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_video_url": "//embed.kijk.nl/?video=w7ZW52xLgL5"} (brightcove)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo[not(hasDRM)]/unparsed-text('http:'||embed_video_url) ! (extract(.,'(<video.+</video>)',1,'s'),extract(.,'(<script src.+</script>)',1,'*'))"
<video data-video-id="5382234415001"			# Als 'data-video-id', etc. aanwezig zijn, dan zijn de "brightcove" video's beschikbaar.
           data-account="585049245001"
           data-player="SJNgxjS9e"
           data-embed="default"
           data-application-id
           class="video-js"
           controls
           width="100%"
           height="100%"
            id = "player"
            preload="none"></video>
<script src="/js/d7d1f55-aba4d64.js"></script>
<script src="//players.brightcove.net/585049245001/SJNgxjS9e_default/index.min.js?t=60s"></script>
<script src="//players.brightcove.net/videojs-freewheel/1/videojs-freewheel.min.js?t=60s"></script>

--> https://edge.api.brightcove.com/playback/v1/accounts/585049245001/videos/5382234415001 (met vereiste policykey in header)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo[not(hasDRM)]/doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id)})/json"
{
  "description": "Peking Express",
  "poster_sources": [
    {
      "src": "https://l3c.cdn.sbsnet.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/stills/net5_pekingexpress_S01E01_170402110915719592-still.jpg"
    }
  ],
  "tags": ["net5", "vod"],
  "cue_points": [
    {
      "id": "5379980577001",
      "name": "vpspot",
      "type": "AD",
      "time": 2270.84,
      "metadata": null,
      "force_stop": false
    }
  ],
  "custom_fields": {
    "sbs_videotype": "vod",
    "sbs_adpolicy": "long",
    "sbs_episode": "S01E01",
    "sbs_program": "pekingexpress",
    "nlz_cst_id": "w7ZW52xLgL5",
    "sko_t": "2127",
    "sko_stid": "293",
    "sko_prid": "464001595",
    "sko_pr": "peking_express",
    "sko_ty": "tv.ep",
    "sko_dt": "20170403",
    "sbs_station": "net5"
  },
  "account_id": "585049245001",
  "sources": [
    {
      "avg_bitrate": 450000,
      "width": 320,
      "duration": 3840200,
      "size": 214173728,
      "stream_name": "mp4:ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111255719592-bg-350.mp4",
      "codec": "H264",
      "asset_id": "5382234549001",
      "container": "MP4",
      "height": 180,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 2085000,
      "width": 868,
      "duration": 3840200,
      "size": 951369902,
      "stream_name": "mp4:ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111523719592-bg-1885.mp4",
      "codec": "H264",
      "asset_id": "5382234550001",
      "container": "MP4",
      "height": 488,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 866000,
      "width": 512,
      "duration": 3840200,
      "size": 358334566,
      "stream_name": "mp4:ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111441719592-bg-650.mp4",
      "codec": "H264",
      "asset_id": "5382276971001",
      "container": "MP4",
      "height": 288,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 1116000,
      "width": 640,
      "duration": 3840200,
      "size": 477997556,
      "stream_name": "mp4:ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111843719592-bg-900.mp4",
      "codec": "H264",
      "asset_id": "5382276972001",
      "container": "MP4",
      "height": 360,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 1465000,
      "width": 768,
      "duration": 3840200,
      "size": 622625792,
      "stream_name": "mp4:ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402112340719592-bg-1200.mp4",
      "codec": "H264",
      "asset_id": "5382276973001",
      "container": "MP4",
      "height": 432,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": null,
      "width": null,
      "src": "https://l3c.cdn.sbsnet.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/net5_pekingexpress_S01E01_170402112846719592-hls-main.m3u8",
      "size": 0,
      "height": null,
      "duration": -1,
      "container": "M2TS",
      "codec": "H264",
      "asset_id": "5382276974001"
    }
  ],
  "name": "Peking Express",
  "reference_id": "net5_S01E01_170402112848",
  "long_description": "In dit avontuurlijke realityprogramma strijden duoGÇÖs tegen elkaar tijdens een uitdagende reis. Met extreem weinig budget liften ze door verschillende verre landen en culturen naar een bestemming die elke dag anders is. Dit gaat in hoog tempo want wie als laatste het doel bereikt, wordt ge+½limineerd. Waar de duoGÇÖs in het dagelijks leven elkaar volledig vertrouwen, vergen de stress, de enorme beproeving en de ongewone situatie het uiterste van hun relatie. Alleen het sterkste en slimste duo maakt kans als eerste te finishen en de grote winnaar van Peking Express 2017 te worden.",
  "duration": 3840200,
  "economics": "AD_SUPPORTED",
  "published_at": "2017-04-02T09:32:54.912Z",
  "text_tracks": [],
  "updated_at": "2017-04-02T09:32:55.193Z",
  "thumbnail": "https://l3c.cdn.sbsnet.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/stills/net5_pekingexpress_S01E01_170402112214719592-thumb.jpg",
  "poster": "https://l3c.cdn.sbsnet.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/stills/net5_pekingexpress_S01E01_170402110915719592-still.jpg",
  "offline_enabled": false,
  "link": null,
  "id": "5382234415001",
  "ad_keys": null,
  "thumbnail_sources": [
    {
      "src": "https://l3c.cdn.sbsnet.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/stills/net5_pekingexpress_S01E01_170402112214719592-thumb.jpg"
    }
  ],
  "created_at": "2017-04-02T09:32:54.912Z"
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/kdxdhBykVTt" --xquery "$json/playerInfo[not(hasDRM)]/(let $a:=doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id)})/json return [for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':replace(stream_name,'mp4:',extract($a/(sources)()/src,'(.+nl/)',1))},{'format':'hls-master','extension':'m3u8','url':$a/(sources)()/src},tail(tokenize(unparsed-text($a/(sources)()/src),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'url':resolve-uri('.',$a/(sources)()/src)||extract(.,'(.+m3u8)',1)}])"
[
  {
    "format": "pg-450",
    "extension": "mp4",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111255719592-bg-350.mp4"
  },
  {
    "format": "pg-866",
    "extension": "mp4",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111441719592-bg-650.mp4"
  },
  {
    "format": "pg-1116",
    "extension": "mp4",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111843719592-bg-900.mp4"
  },
  {
    "format": "pg-1465",
    "extension": "mp4",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402112340719592-bg-1200.mp4"
  },
  {
    "format": "pg-2085",
    "extension": "mp4",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111523719592-bg-1885.mp4"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/net5_pekingexpress_S01E01_170402112846719592-hls-main.m3u8"
  },
  {
    "format": "hls-610",
    "extension": "m3u8",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r1/net5_pekingexpress_S01E01_170402111916719592-hls-350.m3u8"
  },
  {
    "format": "hls-928",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r2/net5_pekingexpress_S01E01_170402111034719592-hls-650.m3u8"
  },
  {
    "format": "hls-1288",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r3/net5_pekingexpress_S01E01_170402112139719592-hls-900.m3u8"
  },
  {
    "format": "hls-1643",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r4/net5_pekingexpress_S01E01_170402112538719592-hls-1200.m3u8"
  },
  {
    "format": "hls-2179",
    "extension": "m3u8",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r8/net5_pekingexpress_S01E01_170402112437719592-hls-1885.m3u8"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_api_url": "http://embed.kijk.nl/api/video/w7ZW52xLgL5?id=kijkapp"} (ericsson)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo[not(hasDRM)]/json(embed_api_url)"
{
  "vpakey": "w7ZW52xLgL5",
  "videoId": "w7ZW52xLgL5_dbzyr6",			# Als 'videoId' een waarde heeft, dan zijn de "ericsson" video's beschikbaar.
  "mediaId": "w7ZW52xLgL5_dbzyr6",
  "assetId": "w7ZW52xLgL5_dbzyr6",
  "appleTvMediaId": "w7ZW52xLgL5_dbzyr6",
  "roll": "https://embed.kijk.nl/api/roll/w7ZW52xLgL5_dbzyr6?user_token=SS08HCE6gJVpAAIsLmSSZXE9m&app_token=CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGVNTMDhIQ0U2Z0pWcEFBSXNMbVNTWlhFOW0om4uX290rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY%3D%7CE6R3C/KtyCgRCFItOp6iJXHcx9Y03WxML7lC/oyymHc%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup",
  "unroll": "https://embed.kijk.nl/api/unroll/w7ZW52xLgL5_dbzyr6?user_token=SS08HCE6gJVpAAIsLmSSZXE9m&app_token=CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGVNTMDhIQ0U2Z0pWcEFBSXNMbVNTWlhFOW0om4uX290rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY%3D%7CE6R3C/KtyCgRCFItOp6iJXHcx9Y03WxML7lC/oyymHc%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup",
  "playlist": "https://embed.kijk.nl/api/playlist/w7ZW52xLgL5_dbzyr6.m3u8?user_token=SS08HCE6gJVpAAIsLmSSZXE9m&app_token=CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGVNTMDhIQ0U2Z0pWcEFBSXNMbVNTWlhFOW0om4uX290rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY%3D%7CE6R3C/KtyCgRCFItOp6iJXHcx9Y03WxML7lC/oyymHc%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup",
  "metadata": {
    "poster": "https://img.kijk.nl/media/cache/computer_nonretina_series_image/imgsrc06/images/auto/1047424-LS---20170401224429--ac0a28f5195984f62bc5bb111e05a7ee.jpg",
    "thumb": "https://img.kijk.nl/media/cache/computer_nonretina_series_image/imgsrc01/data/image/51/sbs_media_image/2017.02/2216990549---20170218235228--35f78f3ed9a813b595baa126eedd1b95.jpg",
    "title": "Peking Express",
    "duration": "3839",
    "url": "http://www.kijk.nl/video/w7ZW52xLgL5",
    "embedURL": "https://embed.kijk.nl/video/w7ZW52xLgL5",
    "embedCode": "<iframe width=\"500\" height=\"283\" src=\"https://embed.kijk.nl/video/w7ZW52xLgL5\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" class=\"sbsEmbed\"></iframe>",
    "linkURL": "http://www.kijk.nl/video/w7ZW52xLgL5",
    "primaryLogo": {
      "imageActive": "https://embed.kijk.nl",
      "imageInactive": "https://embed.kijk.nl",
      "url": "",
      "target": "_blank",
      "image": ""
    },
    "related": [],
    "comscore": {
      "pixelURL": "http://nl.sitestat.com/sbs/kijk/s",
      "sitename": "kijk-player",
      "publisherSecret": "a79e3b85486aba69169c5fe8d744af97",
      "customFields": {
        "sbs_partner": "kijk",
        "sko_dt": "20170403",
        "sko_pr": "peking_express",
        "sko_prid": "457112289",
        "sko_stid": 293,
        "sko_t": "2040",
        "sko_ty": "tv.ep",
        "sko_gen": 31000,
        "sbs_vpakey": "w7ZW52xLgL5",
        "sbs_station": "net5",
        "sbs_program": "Peking Express",
        "sbs_season": "1",
        "sbs_episode": "1",
        "sbs_videotype": "vod",
        "sbs_outlet": "kijkapp",
        "ns_st_pr": "Peking Express",
        "ns_st_ci": "Peking Express",
        "ns_st_cl": 3839000,
        "ns_st_el": 3839000
      },
      "name": "videos.pekingexpress.w7ZW52xLgL5.peking-express",
      "show": "Peking Express"
    },
    "googleIMA": {
      "id": "player",
      "contentFormat": "long_form",
      "persistentId": "",
      "tags": "",
      "categoryContentPartner": "net5/pekingexpress,partner/kijk",
      "flags": ""
    },
    "freewheel": null,
    "nicam": ["0", "t"],
    "rating": 4.5,
    "isLive": false,
    "disableAds": false,
    "appToken": "CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGVZIQ0RkUTVYaUlXbTZIM09mOHRwbHpiVmootv/Uiv0rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY=|qDIbzizcY4qq0ZRYTV9b6VZATcMSdxLzNvhqWRtuf9c=",
    "flashRequired": false,
    "clientOptions": {
      "appToken": "CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGVZIQ0RkUTVYaUlXbTZIM09mOHRwbHpiVmootv/Uiv0rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY=|qDIbzizcY4qq0ZRYTV9b6VZATcMSdxLzNvhqWRtuf9c=",
      "baseURL": "https://emp-prod-acc-we.ebsd.ericsson.net/sbsgroup",
      "owner_uid": "sanoma",
      "user_token": "VHCDdQ5XiIWm6H3Of8tplzbVj",
      "devices": []
    },
    "contentFormat": "long_form",
    "addThis": [
      {
        "icon": "https://embed.kijk.nl/v2/images/facebook.png",
        "url": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=facebook&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2Fw7ZW52xLgL5&title=Peking Express&ct=0&tt=0"
      },
      {
        "icon": "https://embed.kijk.nl/v2/images/twitter.png",
        "url": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=twitter&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2Fw7ZW52xLgL5&title=Peking Express&ct=0&tt=0"
      }
    ],
    "isEntitled": true,
    "sneakPeek": null
  }
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e "$json/playerInfo[not(hasDRM)]/(let $b:=json(embed_api_url)[videoId]/playlist return [{'format':'hls-master_hd','extension':'m3u8','url':$b},tail(tokenize(unparsed-text($b),'#EXT-X-STREAM-INF:')) ! {'format':replace(.,'.+BANDWIDTH=(\d+)\d{3}.+','hls-$1_hd','s'),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'url':extract(.,'(.+m3u8)',1)}])"
[
  {
    "format": "hls-master_hd",
    "extension": "m3u8",
    "url": "https://embed.kijk.nl/api/playlist/w7ZW52xLgL5_dbzyr6.m3u8?user_token=b9cF07UrLBWswzXek4xHzVlWx&app_token=CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGWI5Y0YwN1VyTEJXc3d6WGVrNHhIelZsV3gonOyii/0rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY%3D%7CBABKsQghw0sVrPTOuu0XK2mAuvsSrWNgHYs4Nui1to4%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"
  },
  {
    "format": "hls-316_hd",
    "extension": "m3u8",
    "resolution": "384x216",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_2/index.m3u8"
  },
  {
    "format": "hls-500_hd",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_3/index.m3u8"
  },
  {
    "format": "hls-900_hd",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_4/index.m3u8"
  },
  {
    "format": "hls-1500_hd",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_5/index.m3u8"
  },
  {
    "format": "hls-2468_hd",
    "extension": "m3u8",
    "resolution": "1024x576",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_6/index.m3u8"
  },
  {
    "format": "hls-4500_hd",
    "extension": "m3u8",
    "resolution": "1280x720",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_7/index.m3u8"
  },
  {
    "format": "hls-5750_hd",
    "extension": "m3u8",
    "resolution": "1600x900",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_8/index.m3u8"
  },
  {
    "format": "hls-7000_hd",
    "extension": "m3u8",
    "resolution": "1920x1080",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_9/index.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/sbs6/mensenkennis/videos/9Zb61du3kCD/aflevering-6 (brightcove, die toch niet beschikbaar blijkt te zijn)

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/9Zb61du3kCD" -e "$json/playerInfo[not(hasDRM)]/doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id)})/json"
Error:
Internet/HTTP Error: 403
when talking to: https://edge.api.brightcove.com/playback/v1/accounts/585049245001/videos/5595305209001

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/9Zb61du3kCD" -e "$json/playerInfo[not(hasDRM)]/doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json"
[
  {
    "error_code": "VIDEO_NOT_PLAYABLE"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/sbs6/hartvannederland/videos/gcuLMlCxPtL/hart-van-nederland-laat-12-augustus-2017

--> http://api.kijk.nl/v1/default/entitlement/gcuLMlCxPtL
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/gcuLMlCxPtL" -e "$json/playerInfo"
{
  "sbsvpakey": "gcuLMlCxPtL",
  "hostingkey": "5539600686001",
  "license": {
    "licenseId": "YnJpZ2h0Y292ZS5GVk9ELjAuNTUzOTYwMDY4NjAwMQ==",
    "licensetype": "FVOD",
    "promotions": [],
    "ishd": false,
    "startdate": {
      "date": "2017-08-12 22:30:02.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "enddate": {
      "date": "2017-12-31 05:55:00.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "price": 0,
    "hascontent": true,
    "preroll": true,
    "hostingkey": "5539600686001",
    "hostingservice": "brightcove",					# Als er "brightcove" staat, dan zijn volgens mij de "ericsson" video's nooit beschikbaar.
    "AvailableOutletDevices": [
      {
        "Outlet": "WEB",
        "Device": "PC"
      },
      [...]
    ]
  },
  "embed_video_url": "//embed.kijk.nl/?video=gcuLMlCxPtL",
  "embed_api_url": "http://embed.kijk.nl/api/video/gcuLMlCxPtL?id=kijkapp",
  "hasDRM": false
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_video_url": "//embed.kijk.nl/?video=gcuLMlCxPtL"} (brightcove)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/gcuLMlCxPtL" --xquery "$json/playerInfo[not(hasDRM)]/(let $a:=doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json[not(.//error_code)] return [for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':replace(stream_name,'mp4:',extract($a/(sources)()/src,'(.+nl/)',1))},{'format':'hls-master','extension':'m3u8','url':$a/(sources)()/src},tail(tokenize(unparsed-text($a/(sources)()/src),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'url':resolve-uri('.',$a/(sources)()/src)||extract(.,'(.+m3u8)',1)}])"
[
  {
    "format": "pg-450",
    "extension": "mp4",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231618767844-bg-350.mp4"
  },
  {
    "format": "pg-866",
    "extension": "mp4",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232038767844-bg-650.mp4"
  },
  {
    "format": "pg-1116",
    "extension": "mp4",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231808767844-bg-900.mp4"
  },
  {
    "format": "pg-1465",
    "extension": "mp4",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231900767844-bg-1200.mp4"
  },
  {
    "format": "pg-2085",
    "extension": "mp4",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232401767844-bg-1885.mp4"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232836767844-hls-main.m3u8"
  },
  {
    "format": "hls-610",
    "extension": "m3u8",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r1/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232455767844-hls-350.m3u8"
  },
  {
    "format": "hls-928",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r2/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231245767844-hls-650.m3u8"
  },
  {
    "format": "hls-1288",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r3/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232718767844-hls-900.m3u8"
  },
  {
    "format": "hls-1643",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232544767844-hls-1200.m3u8"
  },
  {
    "format": "hls-2179",
    "extension": "m3u8",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r8/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232640767844-hls-1885.m3u8"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_api_url": "http://embed.kijk.nl/api/video/gcuLMlCxPtL?id=kijkapp"} (ericsson)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/gcuLMlCxPtL" -e "$json/playerInfo[not(hasDRM)]/json(embed_api_url)"
{
  "vpakey": "gcuLMlCxPtL",
  "videoId": null,			# 'videoId' heeft geen waarde, dus de "ericsson" video's zijn niet beschikbaar.
  "mediaId": null,
  "assetId": null,
  "appleTvMediaId": null,
  "roll": "https://embed.kijk.nl/api/roll/",
  "unroll": "https://embed.kijk.nl/api/unroll/",
  "playlist": "https://embed.kijk.nl/api/playlist/.m3u8",
  [...]
}

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/autoweek/autoweekspecials/videos/Zrlt5xCjHqHp/de-7-beste-driftautos (ericsson dynamisch videofragment)

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/Zrlt5xCjHqHp" -e "$json/playerInfo"
{
  "sbsvpakey": "Zrlt5xCjHqHp",
  "hostingkey": "Zrlt5xCjHqHp_dbzyr6",
  "license": {
    "licenseId": "ZXJpY3Nzb24uLnNkLlpybHQ1eENqSHFIcF9kYnp5cjY=",
    "licensetype": "FVOD",
    "pricecode": "SanomaFREE",
    "promotions": [],
    "ishd": false,
    "startdate": {
      "date": "2017-08-12 06:00:00.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "enddate": {
      "date": "2037-12-31 00:00:00.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "price": 0,
    "hascontent": true,
    "preroll": true,
    "hostingkey": "Zrlt5xCjHqHp_dbzyr6",
    "hostingservice": "ericsson",					# In dit geval zijn uiteindelijk alleen de "ericsson" video's beschikbaar. We kunnen dus niet van dit attribuut op aan en zullen zelf op onderzoek uit moeten.
    "AvailableOutletDevices": [
      {
        "Outlet": "WEB",
        "Device": "PC"
      },
      [...]
    ]
  },
  "embed_video_url": "//embed.kijk.nl/?video=Zrlt5xCjHqHp",
  "embed_api_url": "http://embed.kijk.nl/api/video/Zrlt5xCjHqHp?id=kijkapp",
  "hasDRM": false
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_video_url": "//embed.kijk.nl/?video=Zrlt5xCjHqHp"} (brightcove)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/Zrlt5xCjHqHp" -e "$json/playerInfo[not(hasDRM)]/unparsed-text('http:'||embed_video_url)[//@data-video-id] ! (extract(.,'(<video.+</video>)',1,'s'),extract(.,'(<script src.+</script>)',1,'*'))"
<video class="video-js sspf-light-skin" id="player" height="100%" width="100%" controls="true"></video>
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>			# Er is geen 'data-video-id', dus de "brightcove" video's zijn niet beschikbaar.
<script src="/js/f572e98.js"></script>
<script src="/js/82fdbb3.js"></script>
<script src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js" type="text/javascript"></script>
<script src="//imasdk.googleapis.com/js/sdkloader/ima3.js"></script>

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_api_url": "http://embed.kijk.nl/api/video/Zrlt5xCjHqHp?id=kijkapp"} (ericsson)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/Zrlt5xCjHqHp" -e "$json/playerInfo[not(hasDRM)]/(let $b:=json(embed_api_url)[videoId]/playlist return [{'format':'hls-master_hd','extension':'m3u8','url':$b},tail(tokenize(unparsed-text($b),'#EXT-X-STREAM-INF:')) ! {'format':replace(.,'.+BANDWIDTH=(\d+)\d{3}.+','hls-$1_hd','s'),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'url':extract(.,'(.+m3u8)',1)}])"				# Zelfde procedure als bij een volledige aflevering.
[
  {
    "format": "hls-master_hd",
    "extension": "m3u8",
    "url": "https://embed.kijk.nl/api/playlist/Zrlt5xCjHqHp-2_dbzyr6.m3u8?user_token=CCV66yEVtcYHQFd4LQHCvPotB&app_token=CgZzYW5vbWESFVpybHQ1eENqSHFIcC0yX2RienlyNhoLODAuMTAxLjQ5LjUiGUNDVjY2eUVWdGNZSFFGZDRMUUhDdlBvdEIo0am8zP4rMgcIAGgAoAEBOgRGVk9EQgNTQlNKFVpybHQ1eENqSHFIcC0yX2RienlyNg%3D%3D%7CvCaNvjFlv1q%2BpEYFj4cw/TsoKEUzMmdwa2LD98HdNX8%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"
  },
  {
    "format": "hls-316_hd",
    "extension": "m3u8",
    "resolution": "384x216",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_2/index.m3u8"
  },
  {
    "format": "hls-500_hd",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_3/index.m3u8"
  },
  {
    "format": "hls-900_hd",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_4/index.m3u8"
  },
  {
    "format": "hls-1500_hd",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_5/index.m3u8"
  },
  {
    "format": "hls-2468_hd",
    "extension": "m3u8",
    "resolution": "1024x576",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_6/index.m3u8"
  },
  {
    "format": "hls-4500_hd",
    "extension": "m3u8",
    "resolution": "1280x720",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_7/index.m3u8"
  },
  {
    "format": "hls-5750_hd",
    "extension": "m3u8",
    "resolution": "1600x900",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_8/index.m3u8"
  },
  {
    "format": "hls-7000_hd",
    "extension": "m3u8",
    "resolution": "1920x1080",
    "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_9/index.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/sbs6/desmaakpolitie/videos/KxsFnNTV9Njv/het-is-weer-smerig-vies (brightcove progressief videofragment)

--> https://edge.api.brightcove.com/playback/v1/accounts/585049245001/videos/2048895064001 (met vereiste policykey in header)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/KxsFnNTV9Njv" -e "$json/playerInfo[not(hasDRM)]/doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json[not(.//error_code)]"
{
  "description": "Het is weer smerig vies",
  "poster_sources": [
    {
      "src": "http://l3c.cdn.sbsnet.nl/bc/images/585049245001/585049245001_2048964413001_vs-50d45256e4b07689f2b2a1cc-806787308001.jpg?pubId=585049245001"
    }
  ],
  "tags": ["clip", "desmaakpolitie", "e117", "s00", "sbs6"],
  "cue_points": [],
  "custom_fields": {
    "sbs_episode": "S00E117",
    "sbs_program": "De Smaakpolitie",
    "sbs_videotype": "clip",
    "sbs_station": "sbs6"
  },
  "account_id": "585049245001",
  "sources": [
    {
      "avg_bitrate": 975954,
      "width": 480,
      "duration": 97083,
      "size": 11946679,
      "stream_name": "mp4:bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4",
      "codec": "H264",
      "asset_id": "2048962019001",
      "container": "MP4",
      "height": 264,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 975954,
      "width": 480,
      "src": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4",
      "size": 11946679,
      "height": 264,
      "duration": 97083,
      "container": "MP4",
      "codec": "H264",
      "asset_id": "2048962019001"
    },
    {
      "avg_bitrate": 287977,
      "width": 480,
      "duration": 97083,
      "size": 3558738,
      "stream_name": "mp4:bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4",
      "codec": "H264",
      "asset_id": "2048964412001",
      "container": "MP4",
      "height": 264,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 287977,
      "width": 480,
      "src": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4",
      "size": 3558738,
      "height": 264,
      "duration": 97083,
      "container": "MP4",
      "codec": "H264",
      "asset_id": "2048964412001"
    },
    {
      "avg_bitrate": 1611954,
      "width": 720,
      "duration": 97083,
      "size": 19679633,
      "stream_name": "mp4:bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4",
      "codec": "H264",
      "asset_id": "2048964429001",
      "container": "MP4",
      "height": 400,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 1611954,
      "width": 720,
      "src": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4",
      "size": 19679633,
      "height": 400,
      "duration": 97083,
      "container": "MP4",
      "codec": "H264",
      "asset_id": "2048964429001"
    },
    {
      "avg_bitrate": 608000,
      "width": 480,
      "duration": 97083,
      "size": 7458198,
      "stream_name": "mp4:bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4",
      "codec": "H264",
      "asset_id": "2048964957001",
      "container": "MP4",
      "height": 264,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 608000,
      "width": 480,
      "src": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4",
      "size": 7458198,
      "height": 264,
      "duration": 97083,
      "container": "MP4",
      "codec": "H264",
      "asset_id": "2048964957001"
    }
  ],
  "name": "Het is weer smerig vies",
  "reference_id": null,
  "long_description": null,
  "duration": 97083,
  "economics": "AD_SUPPORTED",
  "published_at": "2012-12-21T12:13:10.691Z",
  "text_tracks": [],
  "updated_at": "2016-07-18T12:20:08.965Z",
  "thumbnail": "http://l3c.cdn.sbsnet.nl/bc/images/585049245001/585049245001_2048964414001_th-50d45256e4b07689f2b2a1cc-806787308001.jpg?pubId=585049245001",
  "poster": "http://l3c.cdn.sbsnet.nl/bc/images/585049245001/585049245001_2048964413001_vs-50d45256e4b07689f2b2a1cc-806787308001.jpg?pubId=585049245001",
  "offline_enabled": false,
  "link": null,
  "id": "2048895064001",
  "ad_keys": null,
  "thumbnail_sources": [
    {
      "src": "http://l3c.cdn.sbsnet.nl/bc/images/585049245001/585049245001_2048964414001_th-50d45256e4b07689f2b2a1cc-806787308001.jpg?pubId=585049245001"
    }
  ],
  "created_at": "2012-12-21T12:13:10.691Z"
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/KxsFnNTV9Njv" --xquery "$json/playerInfo[not(hasDRM)]/(let $a:=doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json[not(.//error_code)] return [if ($a//sbs_videotype='vod') then (for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':replace(stream_name,'mp4:',extract($a/(sources)()/src,'(.+nl/)',1))},{'format':'hls-master','extension':'m3u8','url':$a/(sources)()/src},tail(tokenize(unparsed-text($a/(sources)()/src),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'url':resolve-uri('.',$a/(sources)()/src)||extract(.,'(.+m3u8)',1)}) else for $x in $a/(sources)()[src] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':src}])"
[
  {
    "format": "pg-287",
    "extension": "mp4",
    "resolution": "480x264",
    "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4"
  },
  {
    "format": "pg-608",
    "extension": "mp4",
    "resolution": "480x264",
    "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4"
  },
  {
    "format": "pg-975",
    "extension": "mp4",
    "resolution": "480x264",
    "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4"
  },
  {
    "format": "pg-1611",
    "extension": "mp4",
    "resolution": "720x400",
    "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/sbs9/topgear/videos/9dltVx6aK3kn/aflevering-1

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/9dltVx6aK3kn" -e "$json/playerInfo"
{
  "sbsvpakey": "9dltVx6aK3kn",
  "hostingkey": "9dltVx6aK3kn_dbzyr6",
  "license": {
    "licenseId": "ZXJpY3Nzb24uLnNkLjlkbHRWeDZhSzNrbl9kYnp5cjY=",
    "licensetype": "FVOD",
    "pricecode": "SanomaFREE",
    "promotions": [],
    "ishd": false,
    "startdate": {
      "date": "2017-08-05 01:35:45.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "enddate": {
      "date": "2017-08-19 01:35:45.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "price": 0,
    "hascontent": true,
    "preroll": true,
    "hostingkey": "9dltVx6aK3kn_dbzyr6",
    "hostingservice": "ericsson",
    "AvailableOutletDevices": [
      {
        "Outlet": "WEB",
        "Device": "PC"
      },
      [...]
    ]
  },
  "embed_video_url": "//embed.kijk.nl/?video=9dltVx6aK3kn",
  "embed_api_url": "http://embed.kijk.nl/api/video/9dltVx6aK3kn?id=kijkapp",
  "hasDRM": true									# Video met DRM en is dus niet af te spelen.
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--> {"embed_api_url": "http://embed.kijk.nl/api/video/9dltVx6aK3kn?id=kijkapp"} (ericsson)
xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/9dltVx6aK3kn" -e "$json/playerInfo/json(embed_api_url)/unparsed-text(playlist)"
#EXTM3U
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=316000,RESOLUTION=384x216
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_2/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=500000,RESOLUTION=512x288
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_3/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=900000,RESOLUTION=640x360
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_4/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1500000,RESOLUTION=768x432
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_5/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=2468000,RESOLUTION=1024x576
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_6/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=4500000,RESOLUTION=1280x720
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_7/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=5750000,RESOLUTION=1600x900
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_8/index.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=7000000,RESOLUTION=1920x1080
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/index.m3u8

xidel-0.9.7.5706-openssl.exe -s --color=never "https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/index.m3u8" -e "$raw"
#EXTM3U
#EXT-X-TARGETDURATION:10
#EXT-X-MEDIA-SEQUENCE:1
#EXT-X-KEY:METHOD=AES-128,URI="http://127.0.0.1:8080/key"			# Blijkbaar is er een lokale sleutel nodig.
#EXTINF:10,
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/0/seg-00001.ts			# 'enc' i.p.v. 'unenc' in de bestandsnaam is ook een hint dat het hier om DRM gaat.
#EXTINF:10,
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/0/seg-00002.ts
#EXTINF:10,
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/0/seg-00003.ts
[...]
#EXT-X-ENDLIST
##EXT-AZK-SIGNATURE:65d33b95eaab6cb8fe12416ac136cf46f97a3dda8d8ba44cb829120f8f096a6c

ffmpeg-N-86763-g341f012-win32-static_legacy.exe -hide_banner -i "https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/index.m3u8"
[hls,applehttp @ 04b1fee0] Opening 'http://127.0.0.1:8080/key' for reading
Unable to open key file http://127.0.0.1:8080/key
[hls,applehttp @ 04b1fee0] Opening 'crypto+https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/0/seg-00001.ts' for reading
[hls,applehttp @ 04b1fee0] Error when loading first segment 'https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/0/seg-00001.ts'
https://vod-es-gf-prod-2.sbscdn.nl/prod/6/627234/vod_sbs_hd_mux_enc_2_4_9/index.m3u8: Invalid data found when processing input

--------------------------------------------------------------------------------------------------------------------------------

https://www.kijk.nl/net5/masterchefaustralie/videos/kdxdhBykVTt/masterchef-australi (ericsson, met soft-subs)

xidel-0.9.7.5706-openssl.exe -s --color=never -e "'https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/kdxdhBykVTt_dbzyr6/vtt/nl.vtt' ! unparsed-text-available(.)"
true

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Brightcove- en Ericsson videostreams samen (incl. ondertiteling)

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/kdxdhBykVTt" --xquery "$json/playerInfo[not(hasDRM)]/(let $a:=doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json[not(.//error_code)] let $b:=json(embed_api_url)[videoId] return ('https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/kdxdhBykVTt_dbzyr6/vtt/nl.vtt' ! (if (unparsed-text-available(.)) then . else ()),[if ($a//sbs_videotype='vod') then (for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':replace(stream_name,'mp4:',extract($a/(sources)()/src,'(.+nl/)',1))},{'format':'hls-master','extension':'m3u8','url':$a/(sources)()/src},tail(tokenize(unparsed-text($a/(sources)()/src),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'url':resolve-uri('.',$a/(sources)()/src)||extract(.,'(.+m3u8)',1)}) else for $x in $a/(sources)()[src] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':src},$b/({'format':'hls-master_hd','extension':'m3u8','url':playlist},tail(tokenize(unparsed-text(playlist),'#EXT-X-STREAM-INF:')) ! {'format':replace(.,'.+BANDWIDTH=(\d+)\d{3}.+','hls-$1_hd','s'),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'url':extract(.,'(.+m3u8)',1)})]))"
https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/kdxdhBykVTt_dbzyr6/vtt/nl.vtt
[
  {
    "format": "pg-450",
    "extension": "mp4",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210950815366-bg-350.mp4"
  },
  {
    "format": "pg-866",
    "extension": "mp4",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210955815366-bg-650.mp4"
  },
  {
    "format": "pg-1116",
    "extension": "mp4",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210955815366-bg-900.mp4"
  },
  {
    "format": "pg-1465",
    "extension": "mp4",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122211005815366-bg-1200.mp4"
  },
  {
    "format": "pg-2085",
    "extension": "mp4",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210954815366-bg-1885.mp4"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/net5_masterchefaustrali_S09E51_171122214050815366-hls-main.m3u8"
  },
  {
    "format": "hls-610",
    "extension": "m3u8",
    "resolution": "320x180",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r1/net5_masterchefaustrali_S09E51_171122211326815366-hls-350.m3u8"
  },
  {
    "format": "hls-928",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r2/net5_masterchefaustrali_S09E51_171122211353815366-hls-650.m3u8"
  },
  {
    "format": "hls-1288",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r3/net5_masterchefaustrali_S09E51_171122211220815366-hls-900.m3u8"
  },
  {
    "format": "hls-1643",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r4/net5_masterchefaustrali_S09E51_171122211251815366-hls-1200.m3u8"
  },
  {
    "format": "hls-2179",
    "extension": "m3u8",
    "resolution": "868x488",
    "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r8/net5_masterchefaustrali_S09E51_171122211325815366-hls-1885.m3u8"
  },
  {
    "format": "hls-master_hd",
    "extension": "m3u8",
    "url": "https://embed.kijk.nl/api/playlist/kdxdhBykVTt_dbzyr6.m3u8?user_token=CAyPZOqhw5VJTdKYAFSBFPML7&app_token=CgZzYW5vbWESEmtkeGRoQnlrVlR0X2RienlyNhoLODAuMTAxLjQ5LjUiGUNBeVBaT3FodzVWSlRkS1lBRlNCRlBNTDcoxPaNyf4rMgJoADoERlZPREIDU0JTShJrZHhkaEJ5a1ZUdF9kYnp5cjY%3D%7CP51DlQr09bXqPmso5D7eYlxBvu7Ka3kjfPE8G/e9hjg%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"
  },
  {
    "format": "hls-316_hd",
    "extension": "m3u8",
    "resolution": "384x216",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_2/index.m3u8"
  },
  {
    "format": "hls-500_hd",
    "extension": "m3u8",
    "resolution": "512x288",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_3/index.m3u8"
  },
  {
    "format": "hls-900_hd",
    "extension": "m3u8",
    "resolution": "640x360",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_4/index.m3u8"
  },
  {
    "format": "hls-1500_hd",
    "extension": "m3u8",
    "resolution": "768x432",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_5/index.m3u8"
  },
  {
    "format": "hls-2468_hd",
    "extension": "m3u8",
    "resolution": "1024x576",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_6/index.m3u8"
  },
  {
    "format": "hls-4500_hd",
    "extension": "m3u8",
    "resolution": "1280x720",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_7/index.m3u8"
  },
  {
    "format": "hls-5750_hd",
    "extension": "m3u8",
    "resolution": "1600x900",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_8/index.m3u8"
  },
  {
    "format": "hls-7000_hd",
    "extension": "m3u8",
    "resolution": "1920x1080",
    "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_9/index.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

http://www.kijk.nl/net5/pekingexpress/videos/w7ZW52xLgL5/aflevering-1

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "$json/playerInfo[not(hasDRM)]/(if (.//enddate) then dateTime(replace(.//enddate/date,' ','T')) ! (let $a:=. - current-dateTime() return expire:=concat(replace(.,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else (),let $a:=doc('http:'||embed_video_url)[//@data-video-id]/x:request({'headers':'Accept: application/json;pk='||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),'policyKey:\"(.+?)\"',1),'url':concat('https://edge.api.brightcove.com/playback/v1/accounts/',//@data-account,'/videos/',//@data-video-id),'error-handling':'xxx=accept'})/json[not(.//error_code)] let $b:=json(embed_api_url)[videoId] return (if ($a) then $a/(name:=if (.//sbs_videotype='vod') then concat(if (.//sbs_station='veronicatv') then 'Veronica' else upper-case(.//sbs_station),' - ',name,if (string-length(.//sbs_episode)<=7) then ' '||.//sbs_episode else (),replace(.//sko_dt,'(\d{4})(\d{2})(\d{2})',' ($3$2$1)')) else concat(.//sbs_program,' - ',name,replace(published_at,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),t:=round(duration div 1000)) else $b/(name:=concat(if (.//sbs_videotype='vod') then if (.//sbs_station='veronicatv') then 'Veronica' else upper-case(.//sbs_station) else .//sbs_program,' - ',.//title,replace(.//sko_dt,'(\d{4})(\d{2})(\d{2})',' ($3$2$1)')),t:=.//duration),duration:=$t * dayTimeDuration('PT1S') + time('00:00:00'),'https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/%prid%_dbzyr6/vtt/nl.vtt' ! (if (unparsed-text-available(.)) then s_url:=. else ()),formats:=[if ($a//sbs_videotype='vod') then (for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':replace(stream_name,'mp4:',extract($a/(sources)()/src,'(.+nl/)',1))},{'format':'hls-master','extension':'m3u8','url':$a/(sources)()/src},tail(tokenize(unparsed-text($a/(sources)()/src),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'url':resolve-uri('.',$a/(sources)()/src)||extract(.,'(.+m3u8)',1)}) else for $x in $a/(sources)()[src] order by $x/size return $x/{'format':'pg-'||avg_bitrate idiv 1000,'extension':'mp4','resolution':concat(width,'x',height),'url':src},$b/({'format':'hls-master_hd','extension':'m3u8','url':playlist},tail(tokenize(unparsed-text(playlist),'#EXT-X-STREAM-INF:')) ! {'format':replace(.,'.+BANDWIDTH=(\d+)\d{3}.+','hls-$1_hd','s'),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+)',1),'url':extract(.,'(.+m3u8)',1)})]))"
expire := 31-03-2020 05:55:00 (nog 858 dagen en 6u14m17s)
name := NET5 - Peking Express S01E01 (03042017)
t := 3840
duration := 01:04:00
s_url := https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/w7ZW52xLgL5_dbzyr6/vtt/nl.vtt
formats := [{"format": "pg-450", "extension": "mp4", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111255719592-bg-350.mp4"}, {"format": "pg-866", "extension": "mp4", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111441719592-bg-650.mp4"}, {"format": "pg-1116", "extension": "mp4", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111843719592-bg-900.mp4"}, {"format": "pg-1465", "extension": "mp4", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402112340719592-bg-1200.mp4"}, {"format": "pg-2085", "extension": "mp4", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/mp4/net5_pekingexpress_S01E01_170402111523719592-bg-1885.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/net5_pekingexpress_S01E01_170402112846719592-hls-main.m3u8"}, {"format": "hls-610", "extension": "m3u8", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r1/net5_pekingexpress_S01E01_170402111916719592-hls-350.m3u8"}, {"format": "hls-928", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r2/net5_pekingexpress_S01E01_170402111034719592-hls-650.m3u8"}, {"format": "hls-1288", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r3/net5_pekingexpress_S01E01_170402112139719592-hls-900.m3u8"}, {"format": "hls-1643", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r4/net5_pekingexpress_S01E01_170402112538719592-hls-1200.m3u8"}, {"format": "hls-2179", "extension": "m3u8", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/719592a2beb2a38c46677634a928ae91896da7/hls/r8/net5_pekingexpress_S01E01_170402112437719592-hls-1885.m3u8"}, {"format": "hls-master_hd", "extension": "m3u8", "url": "https://embed.kijk.nl/api/playlist/w7ZW52xLgL5_dbzyr6.m3u8?user_token=3GyQ0ulHpUxQspcOXtX77Q0Ba&app_token=CgZzYW5vbWESEnc3Wlc1MnhMZ0w1X2RienlyNhoLODAuMTAxLjQ5LjUiGTNHeVEwdWxIcFV4UXNwY09YdFg3N1EwQmEo2L672P4rMgJoADoERlZPREIDU0JTShJ3N1pXNTJ4TGdMNV9kYnp5cjY%3D%7CnPAx0vX9XcP%2B%2Buntp%2B6YQnYHzxpOeg6/rBOEy2Sl1sM%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"}, {"format": "hls-316_hd", "extension": "m3u8", "resolution": "384x216", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_2/index.m3u8"}, {"format": "hls-500_hd", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_3/index.m3u8"}, {"format": "hls-900_hd", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_4/index.m3u8"}, {"format": "hls-1500_hd", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_5/index.m3u8"}, {"format": "hls-2468_hd", "extension": "m3u8", "resolution": "1024x576", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_6/index.m3u8"}, {"format": "hls-4500_hd", "extension": "m3u8", "resolution": "1280x720", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_7/index.m3u8"}, {"format": "hls-5750_hd", "extension": "m3u8", "resolution": "1600x900", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_8/index.m3u8"}, {"format": "hls-7000_hd", "extension": "m3u8", "resolution": "1920x1080", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_9/index.m3u8"}]

http://www.kijk.nl/sbs6/hartvannederland/videos/gcuLMlCxPtL/hart-van-nederland-laat-12-augustus-2017

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"
expire := 31-12-2017 05:55:00 (nog 37 dagen en 6u9m39s)
name := SBS6 - Hart van Nederland - Laat (12082017)
t := 1240
duration := 00:20:40
formats := [{"format": "pg-450", "extension": "mp4", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231618767844-bg-350.mp4"}, {"format": "pg-866", "extension": "mp4", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232038767844-bg-650.mp4"}, {"format": "pg-1116", "extension": "mp4", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231808767844-bg-900.mp4"}, {"format": "pg-1465", "extension": "mp4", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231900767844-bg-1200.mp4"}, {"format": "pg-2085", "extension": "mp4", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/mp4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232401767844-bg-1885.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232836767844-hls-main.m3u8"}, {"format": "hls-610", "extension": "m3u8", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r1/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232455767844-hls-350.m3u8"}, {"format": "hls-928", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r2/sbs6_hartvannederlandlaat_S00E2017081201025653_170812231245767844-hls-650.m3u8"}, {"format": "hls-1288", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r3/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232718767844-hls-900.m3u8"}, {"format": "hls-1643", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r4/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232544767844-hls-1200.m3u8"}, {"format": "hls-2179", "extension": "m3u8", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/767844504c5bc971207dc82c8082ffdf922666/hls/r8/sbs6_hartvannederlandlaat_S00E2017081201025653_170812232640767844-hls-1885.m3u8"}]

http://www.kijk.nl/autoweek/autoweekspecials/videos/Zrlt5xCjHqHp/de-7-beste-driftautos

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"
expire := 31-12-2037 00:00:00 (nog 7342 dagen en 6m19s)
name := AutoWeek Specials - De 7 beste driftauto's (12082017)
t := 289
duration := 00:04:49
formats := [{"format": "hls-master_hd", "extension": "m3u8", "url": "https://embed.kijk.nl/api/playlist/Zrlt5xCjHqHp-2_dbzyr6.m3u8?user_token=oCs31fskgP62onBluGJwFdmR5&app_token=CgZzYW5vbWESFVpybHQ1eENqSHFIcC0yX2RienlyNhoLODAuMTAxLjQ5LjUiGW9DczMxZnNrZ1A2Mm9uQmx1R0p3RmRtUjUo%2Bfnq2P4rMgcIAGgAoAEBOgRGVk9EQgNTQlNKFVpybHQ1eENqSHFIcC0yX2RienlyNg%3D%3D%7CcpPGT899t5loMRUK%2BuXmRtNcIq%2BDaAkAO%2B79cSGg9/0%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"}, {"format": "hls-316_hd", "extension": "m3u8", "resolution": "384x216", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_2/index.m3u8"}, {"format": "hls-500_hd", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_3/index.m3u8"}, {"format": "hls-900_hd", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_4/index.m3u8"}, {"format": "hls-1500_hd", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_5/index.m3u8"}, {"format": "hls-2468_hd", "extension": "m3u8", "resolution": "1024x576", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_6/index.m3u8"}, {"format": "hls-4500_hd", "extension": "m3u8", "resolution": "1280x720", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_7/index.m3u8"}, {"format": "hls-5750_hd", "extension": "m3u8", "resolution": "1600x900", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_8/index.m3u8"}, {"format": "hls-7000_hd", "extension": "m3u8", "resolution": "1920x1080", "url": "https://vod-es-gf-prod-1.sbscdn.nl/prod/6/641850/vod_sbs_hd_mux_unenc_2_5_9/index.m3u8"}]

http://www.kijk.nl/veronicatv/autoweektv/videos/FNAh4KO8hCL/autoweek-tv

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"				# Video zonder "Gratis tot"-datum.
name := Veronica - AutoWeek TV S00E83 (23062017)
t := 434
duration := 00:07:14
formats := [{"format": "pg-450", "extension": "mp4", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/mp4/veronica_autoweektv_S00E83_170622093806753207-bg-350.mp4"}, {"format": "pg-866", "extension": "mp4", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/mp4/veronica_autoweektv_S00E83_170622094301753207-bg-650.mp4"}, {"format": "pg-1116", "extension": "mp4", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/mp4/veronica_autoweektv_S00E83_170622094821753207-bg-900.mp4"}, {"format": "pg-1465", "extension": "mp4", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/mp4/veronica_autoweektv_S00E83_170622094106753207-bg-1200.mp4"}, {"format": "pg-2085", "extension": "mp4", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/mp4/veronica_autoweektv_S00E83_170622094903753207-bg-1885.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/veronica_autoweektv_S00E83_170622095231753207-hls-main.m3u8"}, {"format": "hls-610", "extension": "m3u8", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/r1/veronica_autoweektv_S00E83_170622094537753207-hls-350.m3u8"}, {"format": "hls-928", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/r2/veronica_autoweektv_S00E83_170622093528753207-hls-650.m3u8"}, {"format": "hls-1288", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/r3/veronica_autoweektv_S00E83_170622095159753207-hls-900.m3u8"}, {"format": "hls-1643", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/r4/veronica_autoweektv_S00E83_170622094347753207-hls-1200.m3u8"}, {"format": "hls-2179", "extension": "m3u8", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/753207945fc4e8e33888e1f3466ef62210ed02/hls/r8/veronica_autoweektv_S00E83_170622093942753207-hls-1885.m3u8"}, {"format": "hls-master_hd", "extension": "m3u8", "url": "https://embed.kijk.nl/api/playlist/FNAh4KO8hCL_dbzyr6.m3u8?user_token=QJ3E6jlNcrT5yrmROF5VYPSQF&app_token=CgZzYW5vbWESEkZOQWg0S084aENMX2RienlyNhoLODAuMTAxLjQ5LjUiGVFKM0U2amxOY3JUNXlybVJPRjVWWVBTUUYojYvx2P4rMgJoADoERlZPREIDU0JTShJGTkFoNEtPOGhDTF9kYnp5cjY%3D%7CkFDLcuqzmoG0FHD5k5ie8ebOTKAr%2BtcVIaDcAJEZcZw%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"}, {"format": "hls-316_hd", "extension": "m3u8", "resolution": "384x216", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_2/index.m3u8"}, {"format": "hls-500_hd", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_3/index.m3u8"}, {"format": "hls-900_hd", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_4/index.m3u8"}, {"format": "hls-1500_hd", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_5/index.m3u8"}, {"format": "hls-2468_hd", "extension": "m3u8", "resolution": "1024x576", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_6/index.m3u8"}, {"format": "hls-4500_hd", "extension": "m3u8", "resolution": "1280x720", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_7/index.m3u8"}, {"format": "hls-5750_hd", "extension": "m3u8", "resolution": "1600x900", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_8/index.m3u8"}, {"format": "hls-7000_hd", "extension": "m3u8", "resolution": "1920x1080", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/625952/vod_sbs_hd_mux_unenc_2_4_9/index.m3u8"}]

http://www.kijk.nl/sbs6/desmaakpolitie/videos/KxsFnNTV9Njv/het-is-weer-smerig-vies

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"
expire := 31-12-2099 00:00:00 (nog 29987 dagen en 2m57s)
name := De Smaakpolitie - Het is weer smerig vies (21122012)
t := 97
duration := 00:01:37
formats := [{"format": "pg-287", "extension": "mp4", "resolution": "480x264", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4"}, {"format": "pg-608", "extension": "mp4", "resolution": "480x264", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4"}, {"format": "pg-975", "extension": "mp4", "resolution": "480x264", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4"}, {"format": "pg-1611", "extension": "mp4", "resolution": "720x400", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4"}]

http://www.kijk.nl/sbs6/mensenkennis/videos/9Zb61du3kCD/aflevering-6

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"
expire := 03-10-2020 21:29:11 (nog 1044 dagen en 21u24m31s)
name := SBS6 - Mensenkennis (03102017)
t := 2511
duration := 00:41:51
formats := [{"format": "hls-master_hd", "extension": "m3u8", "url": "https://embed.kijk.nl/api/playlist/9Zb61du3kCD_dbzyr6.m3u8?user_token=KLyCkLYdoFKFmrSjorlgAmJh5&app_token=CgZzYW5vbWESEjlaYjYxZHUza0NEX2RienlyNhoLODAuMTAxLjQ5LjUiGUtMeUNrTFlkb0ZLRm1yU2pvcmxnQW1KaDUo2pmT2f4rMgJoADoERlZPREIDU0JTShI5WmI2MWR1M2tDRF9kYnp5cjY%3D%7CW4vKFuZfy11rUOFzIFKOL2IigU9SIA9DscdDNxBFHis%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"}, {"format": "hls-316_hd", "extension": "m3u8", "resolution": "384x216", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_2/index.m3u8"}, {"format": "hls-500_hd", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_3/index.m3u8"}, {"format": "hls-900_hd", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_4/index.m3u8"}, {"format": "hls-1500_hd", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_5/index.m3u8"}, {"format": "hls-2468_hd", "extension": "m3u8", "resolution": "1024x576", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_6/index.m3u8"}, {"format": "hls-4500_hd", "extension": "m3u8", "resolution": "1280x720", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_7/index.m3u8"}, {"format": "hls-5750_hd", "extension": "m3u8", "resolution": "1600x900", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_8/index.m3u8"}, {"format": "hls-7000_hd", "extension": "m3u8", "resolution": "1920x1080", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/5/657732/vod_sbs_hd_mux_unenc_2_5_9/index.m3u8"}]

https://www.kijk.nl/net5/masterchefaustralie/videos/kdxdhBykVTt/masterchef-australi

xidel-0.9.7.5706-openssl.exe -s --color=never "http://api.kijk.nl/v1/default/entitlement/%prid%" --xquery "[...]"
expire := 31-07-2020 23:59:59 (nog 980 dagen en 22u54m10s)
name := NET5 - MasterChef Australië S09E51 (22112017)
t := 2696
duration := 00:44:56
s_url := https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/kdxdhBykVTt_dbzyr6/vtt/nl.vtt
formats := [{"format": "pg-450", "extension": "mp4", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210950815366-bg-350.mp4"}, {"format": "pg-866", "extension": "mp4", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210955815366-bg-650.mp4"}, {"format": "pg-1116", "extension": "mp4", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210955815366-bg-900.mp4"}, {"format": "pg-1465", "extension": "mp4", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122211005815366-bg-1200.mp4"}, {"format": "pg-2085", "extension": "mp4", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/mp4/net5_masterchefaustrali_S09E51_171122210954815366-bg-1885.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/net5_masterchefaustrali_S09E51_171122214050815366-hls-main.m3u8"}, {"format": "hls-610", "extension": "m3u8", "resolution": "320x180", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r1/net5_masterchefaustrali_S09E51_171122211326815366-hls-350.m3u8"}, {"format": "hls-928", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r2/net5_masterchefaustrali_S09E51_171122211353815366-hls-650.m3u8"}, {"format": "hls-1288", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r3/net5_masterchefaustrali_S09E51_171122211220815366-hls-900.m3u8"}, {"format": "hls-1643", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r4/net5_masterchefaustrali_S09E51_171122211251815366-hls-1200.m3u8"}, {"format": "hls-2179", "extension": "m3u8", "resolution": "868x488", "url": "https://vod-bc-prod-1.sbscdn.nl/ra/01/8153667a46bcc77a1b2f74a9c7c388c8544acc/hls/r8/net5_masterchefaustrali_S09E51_171122211325815366-hls-1885.m3u8"}, {"format": "hls-master_hd", "extension": "m3u8", "url": "https://embed.kijk.nl/api/playlist/kdxdhBykVTt_dbzyr6.m3u8?user_token=gHiLcZlpMaEXOSzCC4fnA9GIu&app_token=CgZzYW5vbWESEmtkeGRoQnlrVlR0X2RienlyNhoLODAuMTAxLjQ5LjUiGWdIaUxjWmxwTWFFWE9TekNDNGZuQTlHSXUo0Zfz2v4rMgJoADoERlZPREIDU0JTShJrZHhkaEJ5a1ZUdF9kYnp5cjY%3D%7CFc1LVh0YofjDDTlBwWSBZSLTa997EkQ5r%2BLWqBFxw0g%3D&base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup"}, {"format": "hls-316_hd", "extension": "m3u8", "resolution": "384x216", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_2/index.m3u8"}, {"format": "hls-500_hd", "extension": "m3u8", "resolution": "512x288", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_3/index.m3u8"}, {"format": "hls-900_hd", "extension": "m3u8", "resolution": "640x360", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_4/index.m3u8"}, {"format": "hls-1500_hd", "extension": "m3u8", "resolution": "768x432", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_5/index.m3u8"}, {"format": "hls-2468_hd", "extension": "m3u8", "resolution": "1024x576", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_6/index.m3u8"}, {"format": "hls-4500_hd", "extension": "m3u8", "resolution": "1280x720", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_7/index.m3u8"}, {"format": "hls-5750_hd", "extension": "m3u8", "resolution": "1600x900", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_8/index.m3u8"}, {"format": "hls-7000_hd", "extension": "m3u8", "resolution": "1920x1080", "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/1/675613/vod_sbs_hd_mux_unenc_2_5_9/index.m3u8"}]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "$json/playerInfo[not(hasDRM)]/(
            if (.//enddate) then
              dateTime(
                replace(
                  .//enddate/date,
                  ' ',
                  'T'
                )
              ) ! (
                let $a:=. - current-dateTime() return
                expire:=concat(
                  replace(
                    .,
                    '(\d+)-(\d+)-(\d+)T(.+)',
                    '$3-$2-$1 $4'
                  ),
                  ' (nog ',
                  days-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else if (.=1) then
                      .||' dag en '
                    else
                      .||' dagen en '
                  ),
                  hours-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'u'
                  ),
                  minutes-from-duration($a) ! (
                    if (.=0) then
                      ()
                    else
                      .||'m'
                  ),
                  floor(
                    seconds-from-duration($a)
                  ),
                  's)'
                )
              )
            else
              (),
            let $a:=doc(
              'http:'||embed_video_url
            )[//@data-video-id]/x:request(
              {
                'headers':
                  'Accept: application/json;pk='||
                  extract(
                    unparsed-text(
                      //script[
                        contains(
                          @src,
                          //@data-account
                        )
                      ]/@src
                    ),
                    'policyKey:\"(.+?)\"',
                    1
                  ),
                'url':concat(
                  'https://edge.api.brightcove.com/playback/v1/accounts/',
                  //@data-account,
                  '/videos/',
                  //@data-video-id
                ),
                'error-handling':'xxx=accept'
              }
            )/json[not(.//error_code)]
            let $b:=json(embed_api_url)[videoId] return (
              if ($a) then
                $a/(
                  name:=if (.//sbs_videotype='vod') then
                    concat(
                      if (.//sbs_station='veronicatv') then
                        'Veronica'
                      else
                        upper-case(.//sbs_station),
                      ' - ',
                      name,
                      if (string-length(.//sbs_episode)<=7) then
                        ' '||.//sbs_episode
                      else
                        (),
                      replace(
                        .//sko_dt,
                        '(\d{4})(\d{2})(\d{2})',
                        ' ($3$2$1)'
                      )
                    )
                  else
                    concat(
                      .//sbs_program,
                      ' - ',
                      name,
                      replace(
                        published_at,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                  t:=round(duration div 1000)
                )
              else
                $b/(
                  name:=concat(
                    if (.//sbs_videotype='vod') then
                      if (.//sbs_station='veronicatv') then
                        'Veronica'
                      else
                        upper-case(.//sbs_station)
                    else
                      .//sbs_program,
                    ' - ',
                    .//title,
                    replace(
                      .//sko_dt,
                      '(\d{4})(\d{2})(\d{2})',
                      ' ($3$2$1)'
                    )
                  ),
                  t:=.//duration
                ),
              duration:=$t * dayTimeDuration('PT1S') + time('00:00:00'),
              'https://empprdsubtitles.blob.core.windows.net/vtt/Sanoma/SBS/%prid%_dbzyr6/vtt/nl.vtt' ! (
                if (unparsed-text-available(.)) then
                  s_url:=.
                else
                  ()
              ),
              formats:=[
                if ($a//sbs_videotype='vod') then (
                  for $x in $a/(sources)()[container='MP4'] order by $x/size return $x/{
                    'format':'pg-'||avg_bitrate idiv 1000,
                    'extension':'mp4',
                    'resolution':concat(
                      width,
                      'x',
                      height
                    ),
                    'url':replace(
                      stream_name,
                      'mp4:',
                      extract(
                        $a/(sources)()/src,
                        '(.+nl/)',
                        1
                      )
                    )
                  },
                  {
                    'format':'hls-master',
                    'extension':'m3u8',
                    'url':$a/(sources)()/src
                  },
                  tail(
                    tokenize(
                      unparsed-text(
                        $a/(sources)()/src
                      ),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':'hls-'||extract(
                      .,
                      'BANDWIDTH=(\d+)\d{3}',
                      1
                    ),
                    'extension':'m3u8',
                    'resolution':extract(
                      .,
                      'RESOLUTION=(.+?),',
                      1
                    ),
                    'url':resolve-uri(
                      '.',
                      $a/(sources)()/src
                    )||extract(
                      .,
                      '(.+m3u8)',
                      1
                    )
                  }
                ) else
                  for $x in $a/(sources)()[src] order by $x/size return $x/{
                    'format':'pg-'||avg_bitrate idiv 1000,
                    'extension':'mp4',
                    'resolution':concat(
                      width,
                      'x',
                      height
                    ),
                    'url':src
                  },
                $b/(
                  {
                    'format':'hls-master_hd',
                    'extension':'m3u8',
                    'url':playlist
                  },
                  tail(
                    tokenize(
                      unparsed-text(playlist),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':replace(
                      .,
                      '.+BANDWIDTH=(\d+)\d{3}.+',
                      'hls-$1_hd',
                      's'
                    ),
                    'extension':'m3u8',
                    'resolution':extract(
                      .,
                      'RESOLUTION=(.+)',
                      1
                    ),
                    'url':extract(
                      .,
                      '(.+m3u8)',
                      1
                    )
                  }
                )
              ]
            )
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/e9b1a15d92b26b518770012bde1815f9f86697d8]
[https://github.com/Reino17/BatchGemist/commit/9b61484ba4c82af8ed77f79b65dafb8c0644b6e2]

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "for $x in json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'] order by $x/id return concat('  ',$x/id,'. ',$x/name)"
  1. NPO Radio 1
  2. NPO Radio 2
  3. NPO 3FM
  4. NPO Radio 4
  5. NPO Radio 5
  6. NPO Radio 2 Soul & Jazz
  7. NPO FunX
  11. NPO 3FM KX Radio
  14. NPO 3FM Alternative
  16. NPO Radio 4 Concerten
  37. NPO SterrenNL
  40. NPO FunX Amsterdam Arab
  41. NPO FunX Dance
  44. NPO FunX Utrecht Latin
  45. NPO FunX Rotterdam Reggae
  46. NPO FunX Slow Jamz
  62. NPO FunX Amsterdam
  63. NPO FunX Rotterdam
  64. NPO FunX Den Haag
  65. NPO FunX Utrecht
  66. NPO FunX Den Haag Hip Hop

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]"
{
  "id": 1,
  "name": "NPO Radio 1",
  "sitestat": "radio1",
  "comscore_name": "nporadio1",
  "type": "main",
  "parent_id": null,
  "url": "http://nporadio1.nl/popup-live",
  "audiostreams": [
    {
      "id": 258,
      "name": "icecast-mp3-high",
      "url": "http://icecast.omroep.nl/radio1-bb-mp3",
      "audiocodec": "mp3",
      "bitrate": 192,
      "protocol": "http",
      "audiosamplerate": 48000
    },
    {
      "id": 270,
      "name": "icecast-aac-high",
      "url": "http://icecast.omroep.nl/radio1-bb-aac",
      "audiocodec": "aac",
      "bitrate": 64,
      "protocol": "http",
      "audiosamplerate": 48000
    },
    {
      "id": 318,
      "name": "icecast-mp3-low",
      "url": "http://icecast.omroep.nl/radio1-sb-mp3",
      "audiocodec": "mp3",
      "bitrate": 96,
      "protocol": "http",
      "audiosamplerate": 4800
    },
    {
      "id": 463,
      "name": "NPO Player",
      "url": "LI_RA1_837059",
      "audiocodec": "npoplayer",
      "bitrate": 192,
      "protocol": "prid",
      "audiosamplerate": null
    }
  ],
  "videostreams": [
    {
      "id": 47,
      "name": "smoothstream",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8",
      "audiocodec": "aac",
      "videocodec": "H.264",
      "container": "mp4",
      "minbitrate": 0,
      "maxbitrate": 0,
      "protocol": "http"
    },
    {
      "id": 52,
      "name": "hasp-hls",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "m3u8",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 57,
      "name": "hasp-sms",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/Manifest",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "mp4",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 58,
      "name": "hasp-hds",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.f4m",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "f4m",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 74,
      "name": "NPO Player",
      "url": "LI_RADIO1_300877",
      "audiocodec": "",
      "videocodec": "",
      "container": "",
      "minbitrate": 0,
      "maxbitrate": 0,
      "protocol": "prid"
    }
  ],
  "comscore_configuration": {
    "id": 1
  },
  "npw": {
    "url": "http://radioplayer.npo.nl/radio1",
    "name": "radio1",
    "base_color": "white",
    "background": "http://radio-app.omroep.nl/player/css/images/bg/radio1.jpg",
    "config": "http://radio-app.omroep.nl/player/config/radio1.js",
    "favicon": "http://radio-app.omroep.nl/player/css/images/favicon/radio1.ico"
  }
}

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/(audiostreams)()[protocol='http']"
{
  "id": 258,
  "name": "icecast-mp3-high",
  "url": "http://icecast.omroep.nl/radio1-bb-mp3",
  "audiocodec": "mp3",
  "bitrate": 192,
  "protocol": "http",
  "audiosamplerate": 48000
}
{
  "id": 270,
  "name": "icecast-aac-high",
  "url": "http://icecast.omroep.nl/radio1-bb-aac",
  "audiocodec": "aac",
  "bitrate": 64,
  "protocol": "http",
  "audiosamplerate": 48000
}
{
  "id": 318,
  "name": "icecast-mp3-low",
  "url": "http://icecast.omroep.nl/radio1-sb-mp3",
  "audiocodec": "mp3",
  "bitrate": 96,
  "protocol": "http",
  "audiosamplerate": 4800
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/[for $x in (audiostreams)()[protocol='http'] order by $x/bitrate return $x/{'format':concat(audiocodec,'-',bitrate),'abitrate':concat('a:',bitrate,'k'),'url':url}]"
[
  {
    "format": "aac-64",
    "abitrate": "a:64k",
    "url": "http://icecast.omroep.nl/radio1-bb-aac"
  },
  {
    "format": "mp3-96",
    "abitrate": "a:96k",
    "url": "http://icecast.omroep.nl/radio1-sb-mp3"
  },
  {
    "format": "mp3-192",
    "abitrate": "a:192k",
    "url": "http://icecast.omroep.nl/radio1-bb-mp3"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/(videostreams)()[protocol='prid']"
{
  "id": 74,
  "name": "NPO Player",
  "url": "LI_RADIO1_300877",
  "audiocodec": "",
  "videocodec": "",
  "container": "",
  "minbitrate": 0,
  "maxbitrate": 0,
  "protocol": "prid"
}

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/json(concat('http://ida.omroep.nl/app.php/',(videostreams)()[protocol='prid']/url,'?token=',json('http://ida.omroep.nl/app.php/auth')/token))/json(replace(.//url,'jsonp','json'))"
https://pedgewarer22b.video.kpnstreaming.nl/session/ebdc9834-dad8-11e7-afa2-9cb65498e820/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8?token=dfdf145eee15173e0f089737285f7fc7_1512687486_1512687486

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/[let $a:=json(concat('http://ida.omroep.nl/app.php/',(videostreams)()[protocol='prid']/url,'?token=',json('http://ida.omroep.nl/app.php/auth')/token))/json(replace(.//url,'jsonp','json')) return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x)]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8?token=f0a7910f402ae6affba0e65274d62e10_1512687740_1512687740"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000.m3u8"
  },
  {
    "format": "hls-348",
    "extension": "m3u8",
    "resolution": "384x216",
    "vbitrate": "v:200k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=200000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=500000.m3u8"
  },
  {
    "format": "hls-878",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:700k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=700000.m3u8"
  },
  {
    "format": "hls-1196",
    "extension": "m3u8",
    "resolution": "768x432",
    "vbitrate": "v:1000k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1000000.m3u8"
  },
  {
    "format": "hls-1620",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1400k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea25b.video.kpnstreaming.nl/session/838a07ac-dad9-11e7-bb55-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1400000.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/[for $x in (audiostreams)()[protocol='http'] order by $x/bitrate return $x/{'format':concat(audiocodec,'-',bitrate),'abitrate':concat('a:',bitrate,'k'),'url':url},(videostreams)()[protocol='prid']/(let $a:=json(concat('http://ida.omroep.nl/app.php/',url,'?token=',json('http://ida.omroep.nl/app.php/auth')/token))/json(replace(.//url,'jsonp','json')) return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x))]"
[
  {
    "format": "aac-64",
    "abitrate": "a:64k",
    "url": "http://icecast.omroep.nl/radio1-bb-aac"
  },
  {
    "format": "mp3-96",
    "abitrate": "a:96k",
    "url": "http://icecast.omroep.nl/radio1-sb-mp3"
  },
  {
    "format": "mp3-192",
    "abitrate": "a:192k",
    "url": "http://icecast.omroep.nl/radio1-bb-mp3"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8?token=e606680ec1309b8ba3f7ec61b0e1eb12_1512687957_1512687957"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000.m3u8"
  },
  {
    "format": "hls-348",
    "extension": "m3u8",
    "resolution": "384x216",
    "vbitrate": "v:200k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=200000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=500000.m3u8"
  },
  {
    "format": "hls-878",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:700k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=700000.m3u8"
  },
  {
    "format": "hls-1196",
    "extension": "m3u8",
    "resolution": "768x432",
    "vbitrate": "v:1000k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1000000.m3u8"
  },
  {
    "format": "hls-1620",
    "extension": "m3u8",
    "resolution": "1024x576",
    "vbitrate": "v:1400k",
    "abitrate": "a:128k",
    "url": "https://pedgewarea26b.video.kpnstreaming.nl/session/04c048e0-dada-11e7-9af0-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1400000.m3u8"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=5]/[...]"
[
  {
    "format": "aac-64",
    "abitrate": "a:64k",
    "url": "http://icecast.omroep.nl/radio5-bb-aac"
  },
  {
    "format": "mp3-96",
    "abitrate": "a:96k",
    "url": "http://icecast.omroep.nl/radio5-sb-mp3"
  },
  {
    "format": "mp3-192",
    "abitrate": "a:192k",
    "url": "http://icecast.omroep.nl/radio5-bb-mp3"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=1]/(name:=name||replace('%date%','.+?(\d+)-(\d+)-(\d+)',' - Livestream ($1$2$3)'),formats:=[for $x in (audiostreams)()[protocol='http'] order by $x/bitrate return $x/{'format':concat(audiocodec,'-',bitrate),'abitrate':concat('a:',bitrate,'k'),'url':url},(videostreams)()[protocol='prid']/(let $a:=json(concat('http://ida.omroep.nl/app.php/',url,'?token=',json('http://ida.omroep.nl/app.php/auth')/token))/json(replace(.//url,'jsonp','json')) return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x))])"
name := NPO Radio 1 - Livestream (24112017)
formats := [{"format": "aac-64", "abitrate": "a:64k", "url": "http://icecast.omroep.nl/radio1-bb-aac"}, {"format": "mp3-96", "abitrate": "a:96k", "url": "http://icecast.omroep.nl/radio1-sb-mp3"}, {"format": "mp3-192", "abitrate": "a:192k", "url": "http://icecast.omroep.nl/radio1-bb-mp3"}, {"format": "hls-master", "extension": "m3u8", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8?token=994452b59231e8ae702e380f233e0299_1512688321_1512688321"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000.m3u8"}, {"format": "hls-348", "extension": "m3u8", "resolution": "384x216", "vbitrate": "v:200k", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=200000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=500000.m3u8"}, {"format": "hls-878", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:700k", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=700000.m3u8"}, {"format": "hls-1196", "extension": "m3u8", "resolution": "768x432", "vbitrate": "v:1000k", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1000000.m3u8"}, {"format": "hls-1620", "extension": "m3u8", "resolution": "1024x576", "vbitrate": "v:1400k", "abitrate": "a:128k", "url": "https://pedgewarer21b.video.kpnstreaming.nl/session/dda31106-dada-11e7-a428-1458d0426038/fqimjj/b2b/live/npo/live/npo/visualradio/radio1/radio1.isml/radio1-audio_nld=128000-video=1400000.m3u8"}]

xidel-0.9.7.5706-openssl.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo'][id=5]/[...]"
name := NPO Radio 5 - Livestream (24112017)
formats := [{"format": "aac-64", "abitrate": "a:64k", "url": "http://icecast.omroep.nl/radio5-bb-aac"}, {"format": "mp3-96", "abitrate": "a:96k", "url": "http://icecast.omroep.nl/radio5-sb-mp3"}, {"format": "mp3-192", "abitrate": "a:192k", "url": "http://icecast.omroep.nl/radio5-bb-mp3"}]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "json(
            extract(
              $raw,
              'NPW.config.channels=(.+),NPW.config.comscore_configurations',
              1
            )
          )()[name!='demo'][id=1]/(
            name:=name||replace(
              '%date%',
              '.+?(\d+)-(\d+)-(\d+)',
              ' - Livestream ($1$2$3)'
            ),
            formats:=[
              for $x in (audiostreams)()[protocol='http'] order by $x/bitrate return
              $x/{
                'format':concat(
                  audiocodec,
                  '-',
                  bitrate
                ),
                'abitrate':concat(
                  'a:',
                  bitrate,
                  'k'
                ),
                'url':url
              },
              (videostreams)()[protocol='prid']/(
                let $a:=json(
                  concat(
                    'http://ida.omroep.nl/app.php/',
                    url,
                    '?token=',
                    json(
                      'http://ida.omroep.nl/app.php/auth'
                    )/token
                  )
                )/json(
                  replace(
                    .//url,
                    'jsonp',
                    'json'
                  )
                ) return (
                  {
                    'format':'hls-master',
                    'extension':'m3u8',
                    'url':$a
                  },
                  for $x in tail(
                    tokenize(
                      extract(
                        unparsed-text($a),
                        '(#EXT-X-STREAM-INF.+m3u8$)',
                        1,'ms'
                      ),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':'hls-'||extract(
                      .,
                      'BANDWIDTH=(\d+)\d{3}',
                      1
                    ),
                    'extension':'m3u8',
                    'resolution':extract(
                      .,
                      'RESOLUTION=(.+),',
                      1
                    ),
                    'vbitrate':extract(
                      .,
                      'video=(\d+)\d{3}',
                      1
                    ) ! (
                      if (.) then
                        concat(
                          'v:',
                          .,
                          'k'
                        )
                      else
                        ''
                    ),
                    'abitrate':replace(
                      .,
                      '.+audio.+?(\d+)\d{3}.+',
                      'a:$1k',
                      's'
                    ),
                    'url':resolve-uri(
                      '.',
                      $a
                    )||extract(
                      .,
                      '(.+m3u8)',
                      1
                    )
                  } order by $x/format return $x
                )
              )
            ]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/9097a36305ace5a11cf248c857ef032021bcc530]
[https://github.com/Reino17/BatchGemist/commit/0a65e575647605c500a26c8739174f288d0718bf]

http://www.uitzendinggemist.net/aflevering/402151/Nos_Journaal_2000.html
http://www.uitzendinggemist.net/aflevering/402175/Rtl_Nieuws_1930_Uur.html
http://www.uitzendinggemist.net/aflevering/402189/Hart_Van_Nederland.html

xidel-0.9.7.5447-openssl.exe -s --color=never "http://www.uitzendinggemist.net/aflevering/402151/Nos_Journaal_2000.html" -e "extract(//@onclick,'(http.+?)''',1)"
http://www.npo.nl/aa-aa/01-01-2015/POW_03375494

xidel-0.9.7.5447-openssl.exe -s --color=never "http://www.uitzendinggemist.net/aflevering/402175/Rtl_Nieuws_1930_Uur.html" -e "extract(//@onclick,'(http.+?)''',1)"
http://www.rtlxl.nl/#!/zzzz/408f1683-6aec-3cf0-bf39-cabf9dbeb4f2

xidel-0.9.7.5447-openssl.exe -s --color=never "http://www.uitzendinggemist.net/aflevering/402189/Hart_Van_Nederland.html" -e "//iframe[@class]/@src"
http://embed.kijk.nl/?width=720&height=410&video=gcuLMlCxPtL

xidel-0.9.7.5447-openssl.exe -s --color=never "[de 3 urls]" -e "let $a:=(//iframe[@class]/@src,extract(//@onclick,'(http.+?)''',1)) return replace($a,'.+(?:/|=)(.+)',if (contains($a,'npo')) then 'http://www.npo.nl/$1' else if (contains($a,'rtl')) then 'http://www.rtl.nl/video/$1' else 'http://www.kijk.nl/video/$1')"
http://www.npo.nl/POW_03375494
http://www.rtl.nl/video/408f1683-6aec-3cf0-bf39-cabf9dbeb4f2
http://www.kijk.nl/video/gcuLMlCxPtL

xidel-0.9.7.5447-openssl.exe -s --color=never "[de 3 urls]" -e "url:=x:request({'data':let $a:=(//iframe[@class]/@src,extract(//@onclick,'(http.+?)''',1)) return replace($a,'.+(?:/|=)(.+)',if (contains($a,'npo')) then 'http://www.npo.nl/$1' else if (contains($a,'rtl')) then 'http://www.rtl.nl/video/$1' else 'http://www.kijk.nl/video/$1'),'user-agent':'BatchGemist 1.6-git','method':'HEAD'})/url"
https://www.npo.nl/nos-journaal/12-08-2017/POW_03375494
https://www.rtl.nl/video/408f1683-6aec-3cf0-bf39-cabf9dbeb4f2
http://www.kijk.nl/sbs6/hartvannederland/videos/gcuLMlCxPtL/hart-van-nederland-laat

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-e "url:=x:request(
      {
        'data':let $a:=(
          //iframe[@class]/@src,
          extract(
            //@onclick,
            '(http.+?)''',
            1
          )
        ) return
        replace(
          $a,
          '.+(?:/|=)(.+)',
          if (contains($a,'npo')) then
            'http://www.npo.nl/$1'
          else if (contains($a,'rtl')) then
            'http://www.rtl.nl/video/$1'
          else
            'http://www.kijk.nl/video/$1'
        ),
        'user-agent':'BatchGemist 1.6-git',
        'method':'HEAD'
      }
    )/url"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/d40a3b85a7cfdc06263ad21e165f48e23ce47ed7]

https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30 (losse video)

xidel-0.9.7.5706-openssl.exe -s --color=never "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" -e "json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()"
{
  "id": "5wVDEI7aZxcE",
  "title": "De rol van het verzet tegen de nazi's in Wolfenstein II: The New Colossus",
  "description": "Om duidelijk te maken dat&nbsp;Wolfenstein II: The New Colossus op 27 oktober op de markt verschijnt, heeft uitgever Bethesda de 'release trailer' van de game vrijgegeven. Daarom komt vooral de rol van het verzet tegen de nazi's naar voren, waar B.J.",
  "poster": "https://ic.tweakimg.net/img/account=s7JeEm/item=5wVDEI7aZxcE/size=980x551/image.jpg",
  "duration": 91,
  "locations": {
    "adaptive": [
      {
        "type": "application/dash+xml",
        "src": "https://cdn.tweakers.tv/dash/account=s7JeEm/item=5wVDEI7aZxcE/5wVDEI7aZxcE.mpd"
      },
      {
        "type": "application/x-mpegURL",
        "src": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/5wVDEI7aZxcE.m3u8"
      }
    ],
    "progressive": [
      {
        "label": "1080p60",
        "height": 1080,
        "width": 1920,
        "sources": [
          {
            "type": "video/mp4",
            "src": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dpcDEsdYKkcg/5wVDEI7aZxcE.mp4"
          }
        ]
      },
      {
        "label": "720p60",
        "height": 720,
        "width": 1280,
        "sources": [
          {
            "type": "video/mp4",
            "src": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dKFKMs_KKl8A/5wVDEI7aZxcE.mp4"
          }
        ]
      },
      {
        "label": "360p",
        "height": 360,
        "width": 640,
        "sources": [
          {
            "type": "video/mp4",
            "src": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=ZrELEqtIa54A/5wVDEI7aZxcE.mp4"
          }
        ]
      },
      {
        "label": "270p",
        "height": 270,
        "width": 480,
        "sources": [
          {
            "type": "video/mp4",
            "src": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=9qVLMq5IKpUA/5wVDEI7aZxcE.mp4"
          }
        ]
      }
    ]
  },
  "audioonly": false,
  "live": false,
  "account": "s7JeEm",
  "shareurl": "https://tweakers.net/video/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html",
  "adtag": "https://pubads.g.doubleclick.net/gampad/ads?env=vp&gdfp_req=1&impl=s&output=vast&iu=%2F7455%2Ftweakers%2Ftweakers.video%2Fgames&sz=620x100&unviewed_position_start=1&url=https%3A%2F%2Ftweakers.net%2Fvideo%2F15869%2Fde-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html&correlator=1512593236"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Dynamische videostreams

xidel-0.9.7.5706-openssl.exe -s --color=never "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" --xquery "json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()/locations/[let $a:=(adaptive)()[ends-with(src,'m3u8')]/src return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x)]"
[
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/5wVDEI7aZxcE.m3u8"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=500000.m3u8"
  },
  {
    "format": "hls-950",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:768k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=768000.m3u8"
  },
  {
    "format": "hls-5436",
    "extension": "m3u8",
    "resolution": "1280x720",
    "vbitrate": "v:5000k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=5000000.m3u8"
  },
  {
    "format": "hls-8616",
    "extension": "m3u8",
    "resolution": "1920x1080",
    "vbitrate": "v:8000k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=8000000.m3u8"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Progressieve videostreams

xidel-0.9.7.5706-openssl.exe -s --color=never "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" --xquery "json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()/locations/[for $x in (progressive)() order by $x/height return $x/{'format':'pg-'||height,'extension':'mp4','resolution':concat(width,'x',height),'url':.//src}]"
[
  {
    "format": "pg-270",
    "extension": "mp4",
    "resolution": "480x270",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=9qVLMq5IKpUA/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-360",
    "extension": "mp4",
    "resolution": "640x360",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=ZrELEqtIa54A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-720",
    "extension": "mp4",
    "resolution": "1280x720",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dKFKMs_KKl8A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-1080",
    "extension": "mp4",
    "resolution": "1920x1080",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dpcDEsdYKkcg/5wVDEI7aZxcE.mp4"
  }
]

xidel-0.9.7.5706-openssl.exe -s --color=never "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" --xquery "json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()/locations/[for $x in (progressive)() order by $x/height return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x//src} 2>&amp;1') ! {'format':'pg-'||$x/height,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x//src}]"
[
  {
    "format": "pg-270",
    "extension": "mp4",
    "resolution": "480x270",
    "vbitrate": "v:466k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=9qVLMq5IKpUA/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-360",
    "extension": "mp4",
    "resolution": "640x360",
    "vbitrate": "v:719k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=ZrELEqtIa54A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-720",
    "extension": "mp4",
    "resolution": "1280x720",
    "vbitrate": "v:4828k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dKFKMs_KKl8A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-1080",
    "extension": "mp4",
    "resolution": "1920x1080",
    "vbitrate": "v:7820k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dpcDEsdYKkcg/5wVDEI7aZxcE.mp4"
  }
]


--------------------------------------------------------------------------------------------------------------------------------

Progressieve- en dynamische videostreams samen

xidel-0.9.7.5706-openssl.exe -s --color=never "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" --xquery "json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()/locations/[for $x in (progressive)() order by $x/height return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x//src} 2>&amp;1') ! {'format':'pg-'||$x/height,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x//src},let $a:=(adaptive)()[ends-with(src,'m3u8')]/src return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x)]"
[
  {
    "format": "pg-270",
    "extension": "mp4",
    "resolution": "480x270",
    "vbitrate": "v:466k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=9qVLMq5IKpUA/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-360",
    "extension": "mp4",
    "resolution": "640x360",
    "vbitrate": "v:719k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=ZrELEqtIa54A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-720",
    "extension": "mp4",
    "resolution": "1280x720",
    "vbitrate": "v:4828k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dKFKMs_KKl8A/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "pg-1080",
    "extension": "mp4",
    "resolution": "1920x1080",
    "vbitrate": "v:7820k",
    "abitrate": "a:128k",
    "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dpcDEsdYKkcg/5wVDEI7aZxcE.mp4"
  },
  {
    "format": "hls-master",
    "extension": "m3u8",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/5wVDEI7aZxcE.m3u8"
  },
  {
    "format": "hls-136",
    "extension": "m3u8",
    "resolution": "",
    "vbitrate": "",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000.m3u8"
  },
  {
    "format": "hls-666",
    "extension": "m3u8",
    "resolution": "480x270",
    "vbitrate": "v:500k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=500000.m3u8"
  },
  {
    "format": "hls-950",
    "extension": "m3u8",
    "resolution": "640x360",
    "vbitrate": "v:768k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=768000.m3u8"
  },
  {
    "format": "hls-5436",
    "extension": "m3u8",
    "resolution": "1280x720",
    "vbitrate": "v:5000k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=5000000.m3u8"
  },
  {
    "format": "hls-8616",
    "extension": "m3u8",
    "resolution": "1920x1080",
    "vbitrate": "v:8000k",
    "abitrate": "a:128k",
    "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=8000000.m3u8"
  }
]

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://tweakers.net/video/player/15869/de-rol-van-het-verzet-tegen-de-nazis-in-wolfenstein-ii-the-new-colossus.html?width=980&height=551&zone=30" --xquery "declare function local:extract($json){$json/[for $x in (progressive)() order by $x/height return system(x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x//src} 2>&amp;1') ! {'format':'pg-'||$x/height,'extension':'mp4','resolution':extract(.,'Video:.+, (\d+x\d+)',1),'vbitrate':replace(.,'.+Video:.+?(\d+) kb.+','v:$1k','s'),'abitrate':replace(.,'.+Audio:.+?(\d+) kb.+','a:$1k','s'),'url':$x//src},let $a:=(adaptive)()[ends-with(src,'m3u8')]/src return ({'format':'hls-master','extension':'m3u8','url':$a},for $x in tail(tokenize(extract(unparsed-text($a),'(#EXT-X-STREAM-INF.+m3u8$)',1,'ms'),'#EXT-X-STREAM-INF:')) ! {'format':'hls-'||extract(.,'BANDWIDTH=(\d+)\d{3}',1),'extension':'m3u8','resolution':extract(.,'RESOLUTION=(.+?),',1),'vbitrate':extract(.,'video=(\d+)\d{3}',1) ! (if (.) then concat('v:',.,'k') else ''),'abitrate':replace(.,'.+audio.+?(\d+)\d{3}.+','a:$1k','s'),'url':resolve-uri('.',$a)||extract(.,'(.+m3u8)',1)} order by $x/format return $x)]}; if (count(//iframe)>1) then videos:=[//iframe/doc(@src)/{position():json(//script/extract(.,'''video'',(.+)\);',1)[.])/(.//items)()/{'name':'Tweakers- '||replace(title,'[&quot;&apos;]',''''''),'t':duration,'duration':duration * dayTimeDuration('PT1S') + time('00:00:00'),'formats':local:extract(locations)}}] else (json((if (//iframe) then doc(//iframe/@src)//script else //script)/extract(.,'''video'',(.+)\);',1)[.])//items)()/(name:='Tweakers- '||replace(title,'[&quot;&apos;]',''''''),t:=duration,duration:=$t * dayTimeDuration('PT1S') + time('00:00:00'),formats:=local:extract(locations))"
name := Tweakers- De rol van het verzet tegen de nazi''s in Wolfenstein II: The New Colossus
t := 91
duration := 00:01:31
formats := [{"format": "pg-270", "extension": "mp4", "resolution": "480x270", "vbitrate": "v:466k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=9qVLMq5IKpUA/5wVDEI7aZxcE.mp4"}, {"format": "pg-360", "extension": "mp4", "resolution": "640x360", "vbitrate": "v:719k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=ZrELEqtIa54A/5wVDEI7aZxcE.mp4"}, {"format": "pg-720", "extension": "mp4", "resolution": "1280x720", "vbitrate": "v:4828k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dKFKMs_KKl8A/5wVDEI7aZxcE.mp4"}, {"format": "pg-1080", "extension": "mp4", "resolution": "1920x1080", "vbitrate": "v:7820k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=5wVDEI7aZxcE/file=dpcDEsdYKkcg/5wVDEI7aZxcE.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/5wVDEI7aZxcE.m3u8"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=500000.m3u8"}, {"format": "hls-950", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:768k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=768000.m3u8"}, {"format": "hls-5436", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:5000k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=5000000.m3u8"}, {"format": "hls-8616", "extension": "m3u8", "resolution": "1920x1080", "vbitrate": "v:8000k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=5wVDEI7aZxcE/9RUCNKvaJhUg-ZRVCEIvKZl0A-ZZUDEIrILxUA-ZxdKNK9IJ1Qk-hls-nodrm-audio=128000-video=8000000.m3u8"}]

https://tweakers.net/reviews/5325/samsung-galaxy-s8-en-s8+-sexy-smartphone-blijkt-behoorlijk-trouw.html (artikel met één video)

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://tweakers.net/reviews/5325/samsung-galaxy-s8-en-s8+-sexy-smartphone-blijkt-behoorlijk-trouw.html" --xquery "[...]"
name := Tweakers- Samsung Galaxy S8 en S8+ Review - Sexy smartphone blijkt behoorlijk trouw
t := 413
duration := 00:06:53
formats := [{"format": "pg-270", "extension": "mp4", "resolution": "480x270", "vbitrate": "v:464k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=yyILUqNZqhwQ/file=WIYCUMLJ40UU/yyILUqNZqhwQ.mp4"}, {"format": "pg-360", "extension": "mp4", "resolution": "640x360", "vbitrate": "v:714k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=yyILUqNZqhwQ/file=WLJLdIZJq00U/yyILUqNZqhwQ.mp4"}, {"format": "pg-720", "extension": "mp4", "resolution": "1280x720", "vbitrate": "v:4602k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=yyILUqNZqhwQ/file=W6BLdOPLokYw/yyILUqNZqhwQ.mp4"}, {"format": "pg-1080", "extension": "mp4", "resolution": "1920x1080", "vbitrate": "v:7376k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=yyILUqNZqhwQ/file=25ZKcKpb40cw/yyILUqNZqhwQ.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/yyILUqNZqhwQ.m3u8"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/SRQCVovb6kQ0-SZJCcqrbqw0Q-SxBDUq_bqk4U-y5ADdovJ6gwU-hls-nodrm-audio=128000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/SRQCVovb6kQ0-SZJCcqrbqw0Q-SxBDUq_bqk4U-y5ADdovJ6gwU-hls-nodrm-audio=128000-video=500000.m3u8"}, {"format": "hls-950", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:768k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/SRQCVovb6kQ0-SZJCcqrbqw0Q-SxBDUq_bqk4U-y5ADdovJ6gwU-hls-nodrm-audio=128000-video=768000.m3u8"}, {"format": "hls-5436", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:5000k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/SRQCVovb6kQ0-SZJCcqrbqw0Q-SxBDUq_bqk4U-y5ADdovJ6gwU-hls-nodrm-audio=128000-video=5000000.m3u8"}, {"format": "hls-8616", "extension": "m3u8", "resolution": "1920x1080", "vbitrate": "v:8000k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=yyILUqNZqhwQ/SRQCVovb6kQ0-SZJCcqrbqw0Q-SxBDUq_bqk4U-y5ADdovJ6gwU-hls-nodrm-audio=128000-video=8000000.m3u8"}]

https://tweakers.net/reviews/4619/overwatch-meesterlijke-multiplayer.html (artikel met twee video's)

xidel-0.9.7.5706-openssl.exe -s --color=never --method=POST "https://tweakers.net/reviews/4619/overwatch-meesterlijke-multiplayer.html" --xquery "[...]"
videos := [{"1": {"name": "Tweakers- Gameplay Overwatch", "t": 755, "duration": "00:12:35", "formats": [{"format": "pg-270", "extension": "mp4", "resolution": "480x270", "vbitrate": "v:496k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=Po9v4qRJMNOw/file=rrln5cXZcJCw/Po9v4qRJMNOw.mp4"}, {"format": "pg-360", "extension": "mp4", "resolution": "640x360", "vbitrate": "v:760k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=Po9v4qRJMNOw/file=vasvw8DbMBKw/Po9v4qRJMNOw.mp4"}, {"format": "pg-720", "extension": "mp4", "resolution": "1280x720", "vbitrate": "v:6452k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=Po9v4qRJMNOw/file=Nq8uwejbPYqU/Po9v4qRJMNOw.mp4"}, {"format": "pg-1080", "extension": "mp4", "resolution": "1920x1080", "vbitrate": "v:11928k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=Po9v4qRJMNOw/file=NL9n46xZeQuQ/Po9v4qRJMNOw.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/Po9v4qRJMNOw.m3u8"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/PBknx4FJcJKQ-Phlv46DZcJOQ-Pj0u4-3ZcEuU-rBtmx4XLedGU-hls-nodrm-audio=128000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/PBknx4FJcJKQ-Phlv46DZcJOQ-Pj0u4-3ZcEuU-rBtmx4XLedGU-hls-nodrm-audio=128000-video=500000.m3u8"}, {"format": "hls-950", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:768k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/PBknx4FJcJKQ-Phlv46DZcJOQ-Pj0u4-3ZcEuU-rBtmx4XLedGU-hls-nodrm-audio=128000-video=768000.m3u8"}, {"format": "hls-7026", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:6500k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/PBknx4FJcJKQ-Phlv46DZcJOQ-Pj0u4-3ZcEuU-rBtmx4XLedGU-hls-nodrm-audio=128000-video=6500000.m3u8"}, {"format": "hls-12856", "extension": "m3u8", "resolution": "1920x1080", "vbitrate": "v:12000k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=Po9v4qRJMNOw/PBknx4FJcJKQ-Phlv46DZcJOQ-Pj0u4-3ZcEuU-rBtmx4XLedGU-hls-nodrm-audio=128000-video=12000000.m3u8"}]}}, {"2": {"name": "Tweakers- Blizzard toont gameplay Overwatch", "t": 345, "duration": "00:05:45", "formats": [{"format": "pg-270", "extension": "mp4", "resolution": "480x270", "vbitrate": "v:497k", "abitrate": "a:127k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=nPe8ZZfcCH/file=OkeW4t86Uo/nPe8ZZfcCH.mp4"}, {"format": "pg-360", "extension": "mp4", "resolution": "640x360", "vbitrate": "v:764k", "abitrate": "a:127k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=nPe8ZZfcCH/file=duHdtz865n/nPe8ZZfcCH.mp4"}, {"format": "pg-720", "extension": "mp4", "resolution": "1280x720", "vbitrate": "v:6231k", "abitrate": "a:128k", "url": "https://media.tweakers.tv/progressive/account=s7JeEm/item=nPe8ZZfcCH/file=vw4OpuhCKJIW/nPe8ZZfcCH.mp4"}, {"format": "hls-master", "extension": "m3u8", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/nPe8ZZfcCH.m3u8"}, {"format": "hls-136", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=128000.m3u8"}, {"format": "hls-204", "extension": "m3u8", "resolution": "", "vbitrate": "", "abitrate": "a:192k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=192000.m3u8"}, {"format": "hls-666", "extension": "m3u8", "resolution": "480x270", "vbitrate": "v:500k", "abitrate": "a:128k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=128000-video=500000.m3u8"}, {"format": "hls-1018", "extension": "m3u8", "resolution": "640x360", "vbitrate": "v:768k", "abitrate": "a:192k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=192000-video=768000.m3u8"}, {"format": "hls-5456", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:4954k", "abitrate": "a:192k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=192000-video=4954553.m3u8"}, {"format": "hls-7094", "extension": "m3u8", "resolution": "1280x720", "vbitrate": "v:6500k", "abitrate": "a:192k", "url": "https://cdn.tweakers.tv/hls/account=s7JeEm/item=nPe8ZZfcCH/OkeW4t86Uo-duHdtz865n-fUOhDjV8Yf-yD4Gu-jAn0Mk-hls-nodrm-audio=192000-video=6500000.m3u8"}]}}]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

--xquery "declare function local:extract($json){
            $json/[
              for $x in (progressive)() order by $x/height return
              system(
                x'cmd /c "FFMpeg\ffmpeg-N-87867-g0655810-win32-static_legacy.exe" -i {$x//src} 2>&amp;1'
              ) ! {
                'format':'pg-'||$x/height,
                'extension':'mp4',
                'resolution':extract(
                  .,
                  'Video:.+, (\d+x\d+)',
                  1
                ),
                'vbitrate':replace(
                  .,
                  '.+Video:.+?(\d+) kb.+',
                  'v:$1k',
                  's'
                ),
                'abitrate':replace(
                  .,
                  '.+Audio:.+?(\d+) kb.+',
                  'a:$1k',
                  's'
                ),
                'url':$x//src
              },
              let $a:=(adaptive)()[ends-with(src,'m3u8')]/src return (
                {
                  'format':'hls-master',
                  'extension':'m3u8',
                  'url':$a
                },
                for $x in tail(
                  tokenize(
                    extract(
                      unparsed-text($a),
                      '(#EXT-X-STREAM-INF.+m3u8$)',
                      1,'ms'
                    ),
                    '#EXT-X-STREAM-INF:'
                  )
                ) ! {
                  'format':'hls-'||extract(
                    .,
                    'BANDWIDTH=(\d+)\d{3}',
                    1
                  ),
                  'extension':'m3u8',
                  'resolution':extract(
                    .,
                    'RESOLUTION=(.+?),',
                    1
                  ),
                  'vbitrate':extract(
                    .,
                    'video=(\d+)\d{3}',
                    1
                  ) ! (
                    if (.) then
                      concat(
                        'v:',
                        .,
                        'k'
                      )
                    else
                      ''
                  ),
                  'abitrate':replace(
                    .,
                    '.+audio.+?(\d+)\d{3}.+',
                    'a:$1k',
                    's'
                  ),
                  'url':resolve-uri(
                    '.',
                    $a
                  )||extract(
                    .,
                    '(.+m3u8)',
                    1
                  )
                } order by $x/format return $x
              )
            ]
          };
          if (count(//iframe)>1) then
            videos:=[
              //iframe/doc(@src)/{
                position():json(
                  //script/extract(
                    .,
                    '''video'',(.+)\);',
                    1
                  )[.]
                )/(.//items)()/{
                  'name':'Tweakers- '||replace(title,'[&quot;&apos;]',''''''),
                  't':duration,
                  'duration':duration * dayTimeDuration('PT1S') + time('00:00:00'),
                  'formats':local:extract(locations)
                }
              }
            ]
          else
            json(
              (
                if (//iframe) then
                  doc(//iframe/@src)//script
                else
                  //script
              )/extract(
                .,
                '''video'',(.+)\);',
                1
              )[.]
            )/(.//items)()/(
              name:='Tweakers- '||replace(title,'[&quot;&apos;]',''''''),
              t:=duration,
              duration:=$t * dayTimeDuration('PT1S') + time('00:00:00'),
              formats:=local:extract(locations)
            )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/]

https://anderetijden.nl/programma/1/Andere-Tijden/aflevering/721/100-jaar-Russische-Revolutie

xidel-0.9.7.5706-openssl.exe -s --color=never "https://anderetijden.nl/programma/1/Andere-Tijden/aflevering/721/100-jaar-Russische-Revolutie" -e "[//figure[@data-mid]/{position():{'name':.//h2,'prid':@data-mid,'goto':'NPO'}}]"
[
  {
    "1": {
      "name": "100 jaar Russische Revolutie",
      "prid": "VPWON_1274590",
      "goto": "NPO"
    }
  },
  {
    "2": {
      "name": "Romanovs hopen terug te keren, NOS",
      "prid": "WO_NTR_11228148",
      "goto": "NPO"
    }
  },
  {
    "3": {
      "name": "Definitief bewijs in NOS Journaal",
      "prid": "WO_NTR_11228145",
      "goto": "NPO"
    }
  },
  {
    "4": {
      "name": "Begrafenis in Sint-Petersburg, RTR",
      "prid": "WO_NTR_11228146",
      "goto": "NPO"
    }
  },
  {
    "5": {
      "name": "Heiligverklaring Romanovs, NOS",
      "prid": "WO_NTR_11228147",
      "goto": "NPO"
    }
  },
  {
    "6": {
      "name": "Gregorich over zijn vondst",
      "prid": "WO_NTR_11228144",
      "goto": "NPO"
    }
  }
]

-e "[
      //figure[@data-mid]/{
        position():{
          'name':.//h2,
          'prid':@data-mid,
          'goto':':NPO'
        }
      }
    ]"

xidel-0.9.7.5706-openssl.exe -s --color=never "https://anderetijden.nl/artikel/6779/De-Onbegrepen-Dammer" -e "if (count(//figure[@data-mid])=1) then prid:=//figure[@data-mid]/@data-mid else videos:=[//figure[@data-mid]/{position():{'name':.//h2,'prid':@data-mid,'goto':'NPO'}}]"
prid := VPWON_1264902

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

-e "if (count(//figure[@data-mid])=1) then
      prid:=//figure[@data-mid]/@data-mid
    else
      videos:=[
        //figure[@data-mid]/{
          position():{
            'name':.//h2,
            'prid':@data-mid,
            'goto':'NPO'
          }
        }
      ]"
