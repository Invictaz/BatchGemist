[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]
[https://github.com/Reino17/BatchGemist/commit/c3ebc47b93bf8f4694a690188ed4d04dc02f8069]
[https://github.com/Reino17/BatchGemist/commit/b0d5b4722930cef75568492b4848f72bb8cd3bd0]

http://www.npo.nl/china-blaast-nieuw-leven-in-zijderoutes/20-08-2016/WO_NOS_4863988
videofragment in meerdere formaten:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"}]

http://www.npo.nl/volleybalsters-grijpen-naast-bronzen-medaille/20-08-2016/WO_NOS_4863992
beveiligd videofragment in meerdere formaten:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4"}]

http://www.npo.nl/promo-opgelicht-06-09-2016/05-09-2016/WO_AT_4993516
videofragment in meerdere formaten, met voor het formaat met de hoogste resolutie het attribuut "type" i.p.v. "formaat" en "kwaliteit":
[{"formaat": "h264", "kwaliteit": 2, "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v"}, {"formaat": "h264", "kwaliteit": 1, "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v"}, {"type": "h264", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v"}]

http://www.npo.nl/slimmer-in-een-minuut-sociale-robots/20-10-2016/WO_NPO_5486659
videofragment in één formaat met 'uri-decoded' videolink, die dus zonder '%20' niet werkt:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4"}]

http://www.npo.nl/escaperoom-8-jill/21-10-2016/WO_KN_5639189
videofragment in meerdere formaten, maar welke onbeschikbaar is ('HTTP/1.1 404 Not Found'):
[{"formaat": "h264", "kwaliteit": 3, "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4"}]

http://www.npo.nl/reacties-binnenhof/10-11-2016/WO_NOS_5947382
videofragment in één formaat met een in eerste instantie al herleide url, die dus niet werkt:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4"}]
de NPO heeft het in de tussentijd gecorrigeerd, want deze werkt wel:
[{"formaat": "h264", "kwaliteit": 3, "url": "http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4"}]

http://www.npo.nl/willem-wever/14-01-2006/NCRV_1210567
'Windows Media' videostream in meerdere formaten:
[{"formaat": "wmv", "kwaliteit": 2, "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf"}, {"formaat": "wmv", "kwaliteit": 1, "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf"}, {"formaat": "h264", "kwaliteit": 2, "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]

http://www.npo.nl/zigeunermuziek-doet-pijn/21-07-2010/WO_VPRO_043833
'Windows Media' videostream in één formaat (zeldzaam):
[{"formaat": "wmv", "kwaliteit": 2, "url": "http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf"}]

-------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4",
  "type": "text/plain;charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 missing credentials",
    "Date: Fri, 23 Dec 2016 22:12:17 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://s.nos.nl/img/video/geen-toegang.png",
    "Content-Length: 20",
    "Cache-Control: no-cache",
    "X-WorkerInstancename: dlr2c",
    "Content-Type: text/plain;charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2cfp; path=/;",
    "Connection: close",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'post':'[{\"file\":\"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4\"}]','url':'http://nos.nl/video/resolve/'})"
{
  "url": "http://nos.nl/video/resolve/",
  "type": "application/json",
  "headers": [
    "HTTP/1.1 200 OK",
    "Server: nginx/1.11.4",
    "Content-Type: application/json",
    "Transfer-Encoding: chunked",
    "Connection: keep-alive",
    "Vary: Accept-Encoding",
    "X-Powered-By: PHP/5.6.26",
    "Cache-Control: no-cache",
    "Date: Fri, 23 Dec 2016 22:14:47 GMT",
    "X-Instance-Name: nos1lwb.omroep.nl",
    "",
    "\u0000\u0000"
  ],
  "raw": "[{\"file\":\"https:\\/\\/video.omroep.nl\\/secure\\/ccfc7a0123a798997df810a274a3e239\\/585da1d7\\/nos\\/content-ip\\/mp4\\/web03\\/2016\\/08\\/20\\/274109.mp4\"}]",
  "json": [
    {
      "file": "https://video.omroep.nl/secure/ccfc7a0123a798997df810a274a3e239/585da1d7/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"
    }
  ]
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",		// Xidel 'uri-encode' urls automatisch als dat nodig is.
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 Found",
    "Date: Fri, 23 Dec 2016 22:19:30 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://content1d.omroep.nl/urishieldv2/l27m0990c6a41ede5b6800585da2f2000000.0cfe89d69980b45324a48f9323803f69/portal/NPO/NPO3/Vanessa%201%20minuut.mp4",
    "Cache-Control: \"max-age=60\"",
    "Expires: Fri, 23 Dec 2016 22:20:30 GMT",
    "X-WorkerInstancename: dlr2a",
    "Content-Type: text/html; charset=UTF-8",
    "X-ProxyInstancename: dlr1b",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2afp; path=/;",
    "Connection: close",
    "",
    "\u0000n"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 404 Not Found",
    "Date: Fri, 23 Dec 2016 22:21:11 GMT",
    "Server: Apache/2.4.23 (Unix) OpenSSL/1.0.2j",
    "Last-Modified: Wed, 09 Apr 2014 12:15:10 GMT",
    "ETag: \"758-4f69b0d478f80\"",
    "Accept-Ranges: bytes",
    "Content-Length: 1880",
    "X-ProxyInstancename: dlr1b",
    "Connection: close",
    "Content-Type: text/html",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
  "type": "text/html",
  "headers": [
    "HTTP/1.1 403 Forbidden",
    "Server: nginx/1.11.4",
    "Date: Fri, 23 Dec 2016 22:23:39 GMT",
    "Content-Type: text/html",
    "Content-Length: 169",
    "Connection: keep-alive",
    "X-EdgeError: lmhash mismatch [cb4aa61336292e4528b6440a973fdecc]",
    "X-Instance-Name: dl1afp.omroep.nl",
    "",
    "\u0000?"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://video.omroep.nl/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 302 Found",
    "Date: Fri, 30 Dec 2016 12:58:03 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Location: http://content1c.omroep.nl/urishieldv2/l27m0657993561fb87e800586659db000000.1949881edf7c6f09e653ad311ab7b58e/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4",
    "Cache-Control: \"max-age=60\"",
    "Expires: Fri, 30 Dec 2016 12:59:03 GMT",
    "X-WorkerInstancename: dlr2a",
    "Content-Type: text/html; charset=UTF-8",
    "X-ProxyInstancename: dlr1a",
    "Set-Cookie: balancer://dlr2cluster=balancer.dlr2afp; path=/;",
    "Connection: close",
    "",
    "\u0000m"
  ],
  "raw": "",
  "doc": null
}

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf','method':'HEAD','error-handling':'xxx=accept'})"
{
  "url": "http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf",
  "type": "video/x-ms-wmv",
  "headers": [
    "HTTP/1.1 200 OK",
    "Date: Sat, 31 Dec 2016 13:32:34 GMT",
    "Server: Apache/2.4.23 (Unix) PHP/5.6.26",
    "X-Powered-By: PHP/5.6.26",
    "Content-Length: 178",
    "Pragma: no-cache",
    "Cache-Control: no-cache",
    "X-WorkerInstancename: sapi2a",
    "Content-Type: video/x-ms-wmv",
    "X-ProxyInstancename: sapi1b",
    "Set-Cookie: balancer://sapi2cluster=balancer.sapi2a; path=/;",
    "Keep-Alive: timeout=1, max=100",
    "Connection: Keep-Alive",
    "",
    "\u0000\u0000"
  ],
  "raw": "",
  "doc": null
}

-------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'302')) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'40')) then () else url)"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (contains(headers[1],'200')) then url else if (contains(headers[1],'302')) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

xidel-0.9.6.exe -s --color=never -e "x:request({'data':'http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4','method':'HEAD','error-handling':'xxx=accept'})/(if (some $x in ('200','302') satisfies contains(headers[1],$x)) then url else ())"
http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4

-------------------------------------------------------------------------------------------------------------------------------

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else url)} return $a"
{
  "format": "mp4-3",
  "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"
}
{
  "format": "mp4-2",
  "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": "https://video.omroep.nl/secure/ba015198a1db78f6c4eaf1696c5fb33e/586662c4/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"
}
{
  "format": "mp4-2",
  "url": "https://video.omroep.nl/secure/7eb67accaf222a86ab36fca2ad5a9eb1/586662c5/nos/content-ip/ipod/2016/08/20/274109.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": "http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4"
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "mp4-3",
  "url": null
}
{
  "format": "mp4-2",
  "url": null
}

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "wmv-2",
  "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=58666396&wmhash=3ad17bb6"
}
{
  "format": "wmv-1",
  "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=58666396&wmhash=59bc589c"
}
{
  "format": "mp4-2",
  "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"
}

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
{
  "format": "wmv-2",
  "url": "mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=58666ccb&wmhash=4d5da383"
}

-------------------------------------------------------------------------------------------------------------------------------

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "let $a:=$json()/{'format':if (type) then concat('mp4-',max($json()/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else url)}[url] return if ($a) then if (count($a)=1) then v_url:=$a/url else (json:=[$a],let $b:=(for $x in $json()[contains(format,'wmv')]/format order by $x return $x,for $x in $json()[contains(format,'mp4')]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ()"
json := [{"format": "mp4-3", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/20/274108.mp4"}, {"format": "mp4-2", "url": "http://download.omroep.nl/nos/content/ipod/2016/08/20/274108.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/mp4/web03/2016/08/20/274109.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/nos/content-ip/ipod/2016/08/20/274109.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
json := [{"format": "mp4-3", "url": "https://video.omroep.nl/secure/ed64cb4aef309da7eac655c4a7207e99/585db2df/nos/content-ip/mp4/web03/2016/08/20/274109.mp4"}, {"format": "mp4-2", "url": "https://video.omroep.nl/secure/b4357506b4e714f8058bc7bffa27ba63/585db2df/nos/content-ip/ipod/2016/08/20/274109.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/portal/NPO/NPO3/Vanessa 1 minuut.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
v_url := http://download.omroep.nl/portal/NPO/NPO3/Vanessa%201%20minuut.mp4

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_high.mp4^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://download.omroep.nl/ncrv/video/zapplive_zapplive_escaperoom_jill_video_low.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"h264^"^, ^"kwaliteit^": 3^, ^"url^": ^"http://content1a.omroep.nl/urishieldv2/l27m79eb57e8082db2910058243e52000000.cb4aa61336292e4528b6440a973fdecc/ntr/educatie/npofocus/video/reacties_binnenhof_2001_web_20161103.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
...

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/bb.20060114.asf^"}^, {^"formaat^": ^"wmv^"^, ^"kwaliteit^": 1^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/tv/ncrv/willemwever/sb.20060114.asf^"}^, {^"formaat^": ^"h264^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
json := [{"format": "wmv-2", "url": "mms://hurley.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=585db375&wmhash=133cf8ce"}, {"format": "wmv-1", "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=585db375&wmhash=66f209f6"}, {"format": "mp4-2", "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]
formats := wmv-1, wmv-2, mp4-2
best := mp4-2

echo [{^"formaat^": ^"wmv^"^, ^"kwaliteit^": 2^, ^"url^": ^"http://cgi.omroep.nl/cgi-bin/streams?/vpro/39594888/windowsmedia.asf^"}] | xidel-0.9.6.exe -s --color=never - --xquery "..."
v_url := mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=585db3e1&wmhash=5abbdbb3

-------------------------------------------------------------------------------------------------------------------------------

--xquery "let $a:=$json()/{
            'format':if (type) then
              concat(
                'mp4-',
                max($json()/kwaliteit)+1
              )
            else
              concat(
                if (formaat='h264') then
                  'mp4'
                else
                  formaat,
                '-',
                kwaliteit
              ),
            'url':x:request(
              {
                'data':url,
                'method':'HEAD',
                'error-handling':'xxx=accept'
              }
            )[some $x in ('200','302') satisfies contains(headers[1],$x)]/(
              if (ends-with(url,'asf')) then
                doc(url)//@href
              else if (contains(url,'content-ip')) then
                x:request(
                  {
                    'post':serialize-json(
                      [
                        {
                          \"file\":url
                        }
                      ]
                    ),
                    'url':'http://nos.nl/video/resolve/'
                  }
                )//file
              else
                url
            )
          }[url] return
          if ($a) then
            if (count($a)=1) then
              v_url:=$a/url
            else (
              json:=[$a],
              let $b:=(
                for $x in $json()[contains(format,'wmv')]/format order by $x return $x,
                for $x in $json()[contains(format,'mp4')]/format order by $x return $x
              ) return (
                formats:=join($b,', '),
                best:=$b[last()]
              )
            )
          else
            ()"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]

http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html (artikel met 1 video)
http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html (1 video)
http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html (artikel met 1 beveiligde video)
http://nos.nl/video/2128675-het-eredivisieweekend-in-vogelvlucht.html (1 beveiligde video)
http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html (artikel met 2 losse video's)
http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html (artikel met 2 video's in slide)
http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html (artikel met 4 beveiligde video's)

xidel-0.9.6.exe -s --color=never "http://nos.nl/uitzending/18162-nos-journaal.html" --xquery "if (//div[@class='video-play']) then if (count(//div[@class='video-play'])=1) then doc(//div[@class='video-play']/a/@href)/(name:=concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]) else json:=[//div[@class='video-play']/a/doc(@href)/{position()||'e':{'name':concat('NOS - ',replace(//meta[@property='og:title']/@content,'[&quot;&apos;]',''''''),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats'://source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}}}] else (name:=concat('NOS - ',if (//meta[@property='og:title']) then replace(//meta[@property='og:title']/@content,'[&quot;&apos;]','''''') else substring-after(//h1,'NOS '),replace(//@datetime,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[//source/{'format':replace(@data-label,'.+?(\d+).','mp4-$1'),'url':if (contains(@src,'content-ip')) then x:request({'post':serialize-json([{\"file\":string(@src)}]),'url':'http://nos.nl/video/resolve/'})//file else @src}]),if ($json(1)/format) then let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()]) else videos:=join($json()(),', ')"
name := NOS - Journaal (29082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/mp4/web01/2016/08/29/18162/mp4_web01.mp4"}, {"format": "mp4-720", "url": "http://download.omroep.nl/nos/content/mp4/web02/2016/08/29/18162/mp4_web02.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/mp4/web03/2016/08/29/18162/mp4_web03.mp4"}]
formats := mp4-360, mp4-480, mp4-720
best := mp4-720

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2129259-nederlands-gasbesluit-kost-belgie-honderden-miljoenen.html" --xquery "..."
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/video/2129265-gasbesluit-nederland-kost-belgen-honderden-miljoenen.html" --xquery "..."
name := NOS - Gasbesluit Nederland kost Belgen honderden miljoenen (31082016)
json := [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/31/171583/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128692-het-eredivisieweekend-in-vogelvlucht.html" --xquery "..."
name := NOS - Het eredivisieweekend in vogelvlucht (29082016)
json := [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/4e9d66815ca103cc38e6aee137622a21/585e6b5f/nos/content-ip/video/2016/08/29/171451/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/dd18c8f172f6be0f17195be6b369a543/585e6b5f/nos/content-ip/video/2016/08/29/171451/web03.mp4"}]
formats := mp4-360, mp4-480
best := mp4-480

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128751-nabestaanden-tegen-doodrijder-a2-voor-ons-is-geen-straf-te-hoog.html" --xquery "..."
json := [{"1e": {"name": "NOS - Nabestaande: de kinderen zijn getekend voor het leven (29082016)", "
formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171475/web03.mp4"}]}}, {"2e": {"name": "NOS - Verklaring van verdachte dodelijk ongeluk A2: ''Ik moest gewoon hard rijden'' (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/29/171473/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128795-van-oostveen-vertrekt-als-directeur-bij-knvb.html" --xquery "..."
json := [{"1e": {"name": "NOS - 2015: Van Oostveen geeft aan Hiddink te willen behouden voor KNVB (29082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2015/07/14/120145/web03.mp4"}]}}, {"2e": {"name": "NOS - ''KNVB stapelt fout op fout'' (21082016)", "formats": [{"format": "mp4-360", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/vod01.mp4"}, {"format": "mp4-480", "url": "http://download.omroep.nl/nos/content/video/2016/08/21/171068/web03.mp4"}]}}]
videos := 1e, 2e

xidel-0.9.6.exe -s --color=never "http://nos.nl/artikel/2128783-net-als-bij-dafne-verwachten-we-ook-veel-van-kiki.html" --xquery "..."
json := [{"1e": {"name": "NOS - Bertens komt net tekort voor titel in Gstaad (17072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/97e014e44918d1ce0d4fbb6afe4a172a/585e6c6b/nos/content-ip/video/2016/07/17/168011/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/41166b2fbb769e23af44dafd26572b10/585e6c6b/nos/content-ip/video/2016/07/17/168011/web03.mp4"}]}}, {"2e": {"name": "NOS - Bertens niet opgewassen tegen Halep (02072016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/6fc13aad534188e85e69c92df24be43d/585e6c6b/nos/content-ip/video/2016/07/02/166777/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/c9733b44ea59b860f715cc50f6b83374/585e6c6b/nos/content-ip/video/2016/07/02/166777/web03.mp4"}]}}, {"3e": {"name": "NOS - Bertens in eerste ronde Rio onderuit (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/0182bea4ab8217d03cbfb6dc0126c419/585e6c6b/nos/content-ip/video/2016/08/06/169289/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/170ae8f74c109c4b647283d19c6e474c/585e6c6b/nos/content-ip/video/2016/08/06/169289/web03.mp4"}]}}, {"4e": {"name": "NOS - Bertens na snelle exit: zware omstandigheden (06082016)", "formats": [{"format": "mp4-360", "url": "https://video.omroep.nl/secure/2a65d3505c3086129bd9b32f214ae0e9/585e6c6b/nos/content-ip/video/2016/08/06/169295/vod01.mp4"}, {"format": "mp4-480", "url": "https://video.omroep.nl/secure/757c9d0af5af41d68b4a21ac4e62c86e/585e6c6b/nos/content-ip/video/2016/08/06/169295/web03.mp4"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "if (//div[@class='video-play']) then
            if (count(//div[@class='video-play'])=1) then
              doc(
                //div[@class='video-play']/a/@href
              )/(
                name:=concat(
                  'NOS - ',
                  replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                ),
                  replace(
                    //@datetime,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                json:=[
                  //source/{
                    'format':replace(
                      @data-label,
                      '.+?(\d+).',
                      'mp4-$1'
                    ),
                    'url':if (contains(@src,'content-ip')) then
                      x:request(
                        {
                          'post':serialize-json(
                            [
                              {
                                \"file\":string(@src)
                              }
                            ]
                          ),
                          'url':'http://nos.nl/video/resolve/'
                        }
                      )//file
                    else
                      @src
                  }
                ]
              )
            else
              json:=[
                //div[@class='video-play']/a/doc(@href)/{
                  position()||'e':{
                    'name':concat(
                      'NOS - ',
                      replace(
                        //meta[@property='og:title']/@content,
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        //@datetime,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats'://source/{
                      'format':replace(
                        @data-label,
                        '.+?(\d+).',
                        'mp4-$1'
                      ),
                      'url':if (contains(@src,'content-ip')) then
                        x:request(
                          {
                            'post':serialize-json(
                              [
                                {
                                  \"file\":string(@src)
                                }
                              ]
                            ),
                            'url':'http://nos.nl/video/resolve/'
                          }
                        )//file
                      else
                        @src
                    }
                  }
                }
              ]
          else (
            name:=concat(
              'NOS - ',
              if (//meta[@property='og:title']) then
                replace(
                  //meta[@property='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                )
              else
                substring-after(//h1,'NOS '),
              replace(
                //@datetime,
                '(\d+)-(\d+)-(\d+).+',
                ' ($3$2$1)'
              )
            ),
            json:=[
              //source/{
                'format':replace(
                  @data-label,
                  '.+?(\d+).',
                  'mp4-$1'
                ),
                'url':if (contains(@src,'content-ip')) then
                  x:request(
                    {
                      'post':serialize-json(
                        [
                          {
                            \"file\":string(@src)
                          }
                        ]
                      ),
                      'url':'http://nos.nl/video/resolve/'
                    }
                  )//file
                else
                  @src
              }
            ]
          ),
          if ($json(1)/format) then
            let $a:=for $x in $json()/format order by $x return $x return (
              formats:=join($a,', '),
              best:=$a[last()]
            )
          else
            videos:=join($json()(),', ')"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8f8798c92ced113028ddfb01a4b7dbd3dabfbd5a]
[https://github.com/Reino17/BatchGemist/commit/e38e7c24b240921304fc19832a1218d6ada89237]

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -e "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')"
http://c.brightcove.com/services/viewer/htmlFederated?isVid=1&isUI=1&publisherID=20318290001&playerID=2234112204001&autoStart=false&domain=embed&@videoPlayer=5095479777001&branding=sbs&playertitle=true&linkBaseURL=http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123?sbs_device=pc

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/5xVm3usXftaa/aflevering-123" -f "replace(replace(parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,'federated_f9','htmlFederated'),'videoId','@videoPlayer')" --xquery "json(extract(//body,'experienceJSON = (.+\});',1))/(if (.//mediaDTO) then .//mediaDTO/(name:=concat(if (customFields/sbs_station='veronicatv') then 'Veronica' else upper-case(customFields/sbs_station),' - ',displayName,replace(creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=if ((renditions)()[size=0]) then [let $a:=(renditions)()[size=0]/defaultURL return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}),json(concat('http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',id))/(videos)() ! {'format':replace(.,'.+-(\d+).*\.(.+)','$2-$1'),'url':.}] else [(renditions)()/{'format':concat('mp4_',encodingRate idiv 1000),'url':defaultURL}],let $b:=(for $x in $json()[contains(format,'mp4')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ())"
name := SBS6 - De Smaakpolitie: Aflevering 123 (23082016)
json := [{"format": "meta", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/sbs6_desmaakpolitie_S00E123_160823101909613418-hls-main.m3u8"}, {"format": "610", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r1/sbs6_desmaakpolitie_S00E123_160823101007613418-hls-350.m3u8"}, {"format": "928", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r2/sbs6_desmaakpolitie_S00E123_160823101038613418-hls-650.m3u8"}, {"format": "1288", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r3/sbs6_desmaakpolitie_S00E123_160823100125613418-hls-900.m3u8"}, {"format": "1643", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r4/sbs6_desmaakpolitie_S00E123_160823101148613418-hls-1200.m3u8"}, {"format": "2179", "url": "http://l3c.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/hls/r8/sbs6_desmaakpolitie_S00E123_160823100831613418-hls-1885.m3u8"}, {"format": "mp4-350", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101306613418-bg-350.mp4"}, {"format": "mp4-650", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823095841613418-bg-650.mp4"}, {"format": "mp4-900", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823101358613418-bg-900.mp4"}, {"format": "mp4-1200", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100603613418-bg-1200.mp4"}, {"format": "mp4-1885", "url": "http://stv.cdn.sbsnet.nl/ra/01/6134183b3c631f7e745097004a0ca5cb6edda0/mp4/sbs6_desmaakpolitie_S00E123_160823100449613418-bg-1885.mp4"}]
formats := mp4-350, mp4-650, mp4-900, mp4-1200, mp4-1885, meta, 610, 928, 1288, 1643, 2179
best := 2179

xidel-0.9.6.exe -s --color=never "http://www.kijk.nl/sbs6/desmaakpolitie/videos/KxsFnNTV9Njv/het-is-weer-smerig-vies" -f "..." --xquery "..."
name := SBS6 - Het is weer smerig vies (21122012)
json := [{"format": "mp4_287", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964412001_smerigvies.mp4"}, {"format": "mp4_975", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048962019001_smerigvies.mp4"}, {"format": "mp4_608", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964957001_smerigvies.mp4"}, {"format": "mp4_1611", "url": "http://sbsnl-apple-vod.adaptive.level3.net/bc/videos/585049245001/585049245001_2048964429001_smerigvies.mp4"}]
formats := mp4_287, mp4_608, mp4_975, mp4_1611
best := mp4_1611

-------------------------------------------------------------------------------------------------------------------------------
xidel-0.9.6.exe -s --color=never "http://embed.kijk.nl/video/QoULoMK4ulxd" -f "replace($url,'embed','www')" -f "..." --xquery "..."
name := SBS6 - Shownieuws (28012017)
json := [{"format": "meta", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/clip___170128221149061506-hls-main-pv.m3u8"}, {"format": "610", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r1/clip___170128221147061506-hls-350-pv.m3u8"}, {"format": "928", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r2/clip___170128220952061506-hls-650-pv.m3u8"}, {"format": "1288", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r3/clip___170128220905061506-hls-900-pv.m3u8"}, {"format": "1643", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r4/clip___170128220804061506-hls-1200-pv.m3u8"}, {"format": "2179", "url": "http://temp-l3c-e3.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/hls/r8/clip___170128221106061506-hls-1885-pv.m3u8"}, {"format": "mp4-350", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220649061506-bg-350-pv.mp4"}, {"format": "mp4-650", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220550061506-bg-650-pv.mp4"}, {"format": "mp4-900", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220528061506-bg-900-pv.mp4"}, {"format": "mp4-1200", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220459061506-bg-1200-pv.mp4"}, {"format": "mp4-1885", "url": "http://temp-stv.cdn.sbsnet.nl/ra/02/0615067aa2ba7de3f4ee2e9ad7cfe015b93115/mp4/clip___170128220607061506-bg-1885-pv.mp4"}]
formats := mp4-350, mp4-650, mp4-900, mp4-1200, mp4-1885, meta, 610, 928, 1288, 1643, 2179
best := 2179
-------------------------------------------------------------------------------------------------------------------------------

-f "replace(
      $url,
      'embed',
      'www'
    )"
-f "replace(
      replace(
        parse-html('<html>'||substring-after($raw,'<![endif]>'))//meta[@name='video_src']/@content,
        'federated_f9',
        'htmlFederated'
      ),
      'videoId',
      '@videoPlayer'
    )"
--xquery "json(
            extract(
              //body,
              'experienceJSON = (.+\});',1
            )
          )/(
            if (.//mediaDTO) then
              .//mediaDTO/(
                name:=concat(
                  if (customFields/sbs_station='veronicatv') then
                    'Veronica'
                  else
                    upper-case(customFields/sbs_station),
                  ' - ',
                  displayName,
                  replace(
                    creationDate div 1000 * dayTimeDuration('PT1S') + date('1970-01-01'),
                    '(\d+)-(\d+)-(\d+)',
                    ' ($3$2$1)'
                  )
                ),
                json:=if ((renditions)()[size=0]) then [
                  let $a:=(renditions)()[size=0]/defaultURL return (
                    {
                      'format':'meta',
                      'url':$a
                    },
                    tail(
                      tokenize(
                        unparsed-text($a),
                        '#EXT-X-STREAM-INF:'
                      )
                    ) ! {
                      'format':string(
                        extract(
                          .,
                          'BANDWIDTH=(\d+)',1
                        ) idiv 1000
                      ),
                      'url':concat(
                        resolve-uri('.',$a),
                        extract(
                          .,'(.+m3u8)',1
                        )
                      )
                    }
                  ),
                  json(
                    concat(
                      'http://hbb.sbs6.nl/backend/veamerapi/index/method/video/brightCoveId/',
                      id
                    )
                  )/(videos)() ! {
                    'format':replace(
                      .,
                      '.+-(\d+).*\.(.+)',
                      '$2-$1'
                    ),
                    'url':.
                  }
                ] else [
                  (renditions)()/{
                    'format':concat('mp4_',
                      encodingRate idiv 1000
                    ),
                    'url':defaultURL
                  }
                ],
                let $b:=(
                  for $x in $json()[contains(format,'mp4')]/format order by $x return $x,
                  $json()[format='meta']/format,
                  for $x in $json()[format castable as int]/format order by $x return $x
                ) return (
                  formats:=join($b,', '),
                  best:=$b[last()]
                )
              )
            else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8252ce0275f281dcc32fa0c3be397061c0b83386]

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -e "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]"
http://video.disney.nl/embed/54637ca563d5fc6b66f3ba8d

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "json(//script/extract(.,'(\{.+);',1)[.])/(.//externals)[1]/(concat('Disney - ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),.//dataUrl)"
Disney - Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "json(//script/extract(.,'(\{.+);',1)[.])//flavors/join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),',')"
1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" -e "let $ref:=string-to-base64Binary(concat('http://',$host)) return json(//script/extract(.,'(\{.+\})',1)[.])/((.//externals)()[1]/(name:=concat('Disney- ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),dataUrl:=.//dataUrl),m3u8:=.//flavors/concat(substring-before($dataUrl,'format'),'flavorIds/',join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),','),'/format/applehttp/protocol/http?referrer=',$ref))"
name := Disney- Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
dataUrl := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http
m3u8 := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/flavorIds/1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1/format/applehttp/protocol/http?referrer=aHR0cDovL3ZpZGVvLmRpc25leS5ubA==

xidel-0.9.6.exe -s --color=never "http://video.disney.nl/videos/bizaardvark-aflevering-5-seizoen-1-54637ca563d5fc6b66f3ba8d" -f "json(//script/extract(.,'burger=(.+):\(',1)[.])/(.//embedURL)[1]" --xquery "let $ref:=string-to-base64Binary(concat('http://',$host)) return json(//script/extract(.,'(\{.+\})',1)[.])/((.//externals)()[1]/(name:=concat('Disney- ',.//name,replace(.//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),dataUrl:=.//dataUrl),json:=[let $a:=.//flavors/concat(substring-before($dataUrl,'format'),'flavorIds/',join(.()[height!=0][format='mp4']/extract(url,'flavorId/(.+?)/',1),','),'/format/applehttp/protocol/http?referrer=',$ref) return ({'format':'meta','url':x:request({'data':$a,'method':'HEAD','error-handling':'4xx=accept'})/(if (contains($headers[1],'404')) then () else url)},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8.+)',1)},(.//flavors)()[height!=0]/{'format':concat(replace(format,'.+-(.+)','$1'),'-',bitrate),'url':url})]),let $b:=(for $x in $json()[contains(format,'-')]/format order by $x return $x,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])"
name := Disney - Bizaardvark - Aflevering 5 - Seizoen 1 (16012017)
dataUrl := http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/format/url/protocol/http
json := [
  {
    "format": "meta",
    "url": "http://cdnapi.kaltura.com/p/1068292/sp/106829200/playManifest/entryId/1_9hfe9n0i/flavorIds/1_7ld4699f,1_eu7j68yl,1_moncky45,1_d5k3i98r,1_6m6mp318,1_f2ezpjq1/format/applehttp/protocol/http?referrer=aHR0cDovL3ZpZGVvLmRpc25leS5ubA=="
  },
  {
    "format": "480",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "684",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "987",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "1667",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "2691",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "3815",
    "url": "http://kaltura.akamaized.net/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/name/a.mp4/index.m3u8?__hdnea__=st=1485541096~exp=1485562696~acl=/s/enc/fhls/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_*~hmac=d267672f8aae3faae0afd49c02142281bb48cfcbd579c6f585b038e33cb86ba6"
  },
  {
    "format": "mp4-469",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_400)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_7ld4699f/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_400)).mp4/forceproxy/true/name/a.mp4*~hmac=b7994c830ddc54aa2688dbd016d6f237df33483cabdaf9ba98fdca54b4192577"
  },
  {
    "format": "mp4-668",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_600)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_eu7j68yl/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Basic_Small_-_WEB_MBL_(H264_600)).mp4/forceproxy/true/name/a.mp4*~hmac=39a797cc2194e0a0a44bac7e72840d64bbcab6be48f34e83ec3590aee81d5a97"
  },
  {
    "format": "webm-834",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_affrsao7/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(WebM).webm/forceproxy/true/name/a.webm?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_affrsao7/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(WebM).webm/forceproxy/true/name/a.webm*~hmac=e1e3f9704e1e79bbdec1109d6e76a47f1645c67072b1ad66cce52468275aa689"
  },
  {
    "format": "mp4-964",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Small_-_WEB_MBL_(H264_900)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_moncky45/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Small_-_WEB_MBL_(H264_900)).mp4/forceproxy/true/name/a.mp4*~hmac=ad039eeedc3bf5f7697c4e0095611a9d710ff79f5a1fea0624081ff863d3f3a8"
  },
  {
    "format": "mp4-1628",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Large_-_WEB_MBL_(H264_1500)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_d5k3i98r/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(SD_Large_-_WEB_MBL_(H264_1500)).mp4/forceproxy/true/name/a.mp4*~hmac=119a7594c8d70c2b24f89ddf465fb0b3d16447aa0dfabe0a2e688f54cf29aeee"
  },
  {
    "format": "mp4-2628",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_720_-_WEB_(H264_2500)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_6m6mp318/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_720_-_WEB_(H264_2500)).mp4/forceproxy/true/name/a.mp4*~hmac=f4015c4df2aaeaf3d3b569741a2c32341d9430a5562a8bb1289c85b65023cf55"
  },
  {
    "format": "mp4-3726",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_1080_-_WEB_(H264_4000)).mp4/forceproxy/true/name/a.mp4?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_f2ezpjq1/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(HD_1080_-_WEB_(H264_4000)).mp4/forceproxy/true/name/a.mp4*~hmac=06fc4547c43f622518f0f3e3b860a034daedd30b88b5ae7449d1bbc61c21d1f2"
  },
  {
    "format": "3gp-369",
    "url": "http://kaltura.akamaized.net/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_sqmco8lx/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Mobile_(3GP)).3gp/forceproxy/true/name/a.3gp?__hdnea__=st=1484739094~exp=1484760694~acl=/s/p/1068292/sp/106829200/serveFlavor/entryId/1_9hfe9n0i/v/1/flavorId/1_sqmco8lx/fileName/Bizaardvark_-_Aflevering_5_-_Seizoen_1_(Mobile_(3GP)).3gp/forceproxy/true/name/a.3gp*~hmac=5034bec57496766f84df309fd3ccafa1712939d3863e0c89c63f97b900c57877"
  }
]
formats := 3gp-369, mp4-469, mp4-668, mp4-964, mp4-1628, mp4-2628, mp4-3726, webm-834, meta, 480, 684, 987, 1667, 2691, 3815
best := 3815

-f "json(
      //script/extract(
        .,
        'burger=(.+):\(',1
      )[.]
    )/(.//embedURL)[1]"
--xquery "let $ref:=string-to-base64Binary(
            concat(
              'http://',
              $host
            )
          ) return
          json(
            //script/extract(
              .,
              '(\{.+\})',1
            )[.]
          )/(
            (.//externals)()[1]/(
              name:=concat(
                'Disney- ',
                .//name,
                replace(
                  .//createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
                  '(\d+)-(\d+)-(\d+)',
                  ' ($3$2$1)'
                )
              ),
              dataUrl:=.//dataUrl
            ),
            json:=[
              let $a:=.//flavors/concat(
                substring-before(
                  $dataUrl,
                  'format'
                ),
                'flavorIds/',
                join(
                  .()[height!=0][format='mp4']/extract(
                    url,
                    'flavorId/(.+?)/',1
                  ),
                  ','
                ),
                '/format/applehttp/protocol/http?referrer=',
                $ref
              ) return (
                {
                  'format':'meta',
                  'url':x:request(
                    {
                      'data':$a,
                      'method':'HEAD',
                      'error-handling':'4xx=accept'
                    }
                  )/(
                    if (contains($headers[1],'404')) then
                      ()
                    else
                      url
                  )
                },
                tail(
                  tokenize(
                    unparsed-text($a),
                    '#EXT-X-STREAM-INF:'
                  )
                ) ! {
                  'format':string(
                    extract(
                      .,
                      'BANDWIDTH=(\d+)',1
                    ) idiv 1000
                  ),
                  'url':extract(
                    .,
                    '(.+m3u8.+)',1
                  )
                },
                (.//flavors)()[height!=0]/{
                  'format':concat(
                    replace(
                      format,
                      '.+-(.+)',
                      '$1'
                    ),
                    '-',
                    bitrate
                  ),
                  'url':url
                }
              )
            ]
          ),
          let $b:=(
            for $x in $json()[contains(format,'-')]/format order by $x return $x,
            $json()[format='meta']/format,
            for $x in $json()[format castable as int]/format order by $x return $x
          ) return (
            formats:=join($b,', '),
            best:=$b[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/81962742f028bf76946fb9ea8f3dc7c7819964bd]

xidel-0.9.6.exe -s --color=never "http://www.cartoonnetwork.nl/videos/intro-lied" -f "concat('http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',//@data-partner-id,'&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',//@data-video-id,'&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',//@data-video-id)" --xquery "name:=$json(2)/concat('Cartoon Network - ',name,replace(createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),json:=[$json(3)()/{'format':if (isOriginal='true') then 'mp4-source' else concat(fileExt,'-',bitrate),'url':x:request({'data':concat(substring-before($json(2)/downloadUrl,'raw'),'playManifest/entryId/',$json(2)/id,'/flavorId/',id,'/format/url/protocol/http/a.',fileExt),'method':'HEAD','error-handling':'4xx=accept'})/(if (contains(headers[1],'404')) then () else url)}[url]],let $a:=for $x in $json()/format order by $x return $x return (formats:=join($a,', '),best:=$a[last()])"
name := Cartoon Network - OTGW - Intro Song - NL (27102015)
json := [{"format": "mp4-source", "url": "http://cfvod.kaltura.com/pd/p/1745101/sp/174510100/serveFlavor/entryId/1_wcq8svyb/v/11/flavorId/1_vmo6w5me/name/a.mp4"}, {"format": "mp4-468", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_4yxhgjqf_1.mp4"}, {"format": "mp4-665", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_hrfcq5kv_1.mp4"}, {"format": "mp4-808", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_157xchqy_1.mp4"}, {"format": "mp4-1410", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_t1sgf7sq_1.mp4"}, {"format": "mp4-2297", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_y4zh6jf7_1.mp4"}, {"format": "mp4-3805", "url": "http://ht.cdn.turner.com/tbseurope/big/CN3.0/20151027/1745/1_wcq8svyb_1_7vssax6s_1.mp4"}]
formats := mp4-468, mp4-665, mp4-808, mp4-1410, mp4-2297, mp4-3805, mp4-source
best := mp4-source

-f "concat(
      'http://cdnapi.kaltura.com/api_v3/index.php?service=multirequest&format=1&1:service=session&1:action=startWidgetSession&1:widgetId=_',
      //@data-partner-id,
      '&2:ks={1:result:ks}&2:service=baseentry&2:action=get&2:entryId=',
      //@data-video-id,
      '&3:ks={1:result:ks}&3:service=flavorAsset&3:action=getByEntryId&3:entryId=',
      //@data-video-id
    )"
--xquery "name:=$json(2)/concat(
            'Cartoon Network - ',
            name,
            replace(
              createdAt * dayTimeDuration('PT1S') + date('1970-01-01'),
              '(\d+)-(\d+)-(\d+)',
              ' ($3$2$1)'
            )
          ),
          json:=[
            $json(3)()/{
              'format':if (isOriginal='true') then
                'mp4-source'
              else 
                concat(
                  fileExt,
                  '-',
                  bitrate
                ),
              'url':x:request(
                {
                  'data':concat(
                    substring-before(
                      $json(2)/downloadUrl,
                      'raw'
                    ),
                    'playManifest/entryId/',
                    $json(2)/id,
                    '/flavorId/',
                    id,
                    '/format/url/protocol/http/a.',
                    fileExt
                  ),
                  'method':'HEAD',
                  'error-handling':'4xx=accept'
                }
              )/(
                if (contains(headers[1],'404')) then
                  ()
                else
                  url
              )
            }[url]
          ],
          let $a:=for $x in $json()/format order by $x return $x return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/c6ce4400b6d335af7e9196703dfb45087e95a8e7]

xidel-0.9.6.exe -s --color=never "http://vtm.be/belgiums-got-talent/monden-vallen-open-bij-de-knalprestatie-van-2sdc-crew" --xquery "let $a:=concat(//meta[@property='og:site_name']/@content,if (//meta[@itemprop='articleProgram']) then concat(' - ',//meta[@itemprop='articleProgram']/@content) else ()) return let $b:=[{'1e':{'name':replace(concat($a,' - ',//meta[@property='og:title']/@content,replace((//@datetime[1],//meta[@property='article:published_time']/@content),'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]',''''''),'url'://source/@src}},//script/json(extract(.,'vmmaplayer=(.+);',1)[.])/{position()+1||'e':{'name':concat($a,' - ',title,replace(videoUrl,'.+?(\d+)/(\d+)/(\d+).+',' ($3$2$1)')),'url':videoUrl}}] return if ($b()('2e')) then (json:=$b,videos:=join($json()(),', ')) else $b()('1e') ! (name:=name,v_url:=url)"
name := VTM - Belgium''s Got Talent - Monden vallen open bij de knalprestatie van 2SDC Crew! (23122016)
v_url := http://flvpd.vtm.be/videocms/vmma/2016/12/23/201612231323275010034065084005056B7305C0000004916B00000D0F059198.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217811-rechters-snoeihard-na-uitspraken-de-wever" --xquery "..."
name := VTM NIEUWS - Rechters snoeihard na uitspraken De Wever (10122016)
v_url := http://flvpd.vtm.be/videocms/nieuws/2016/12/10/201612101312391010034065084005056B7305C0000004916B00000D0F034975.mp4

xidel-0.9.6.exe -s --color=never "http://nieuws.vtm.be/politiek/217669-de-wever-haalt-uit-naar-rechters" --xquery "..."
json := [{"1e": {"name": "VTM NIEUWS - De Wever haalt uit naar rechters (09122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/09/201612091914374010034065084005056B7305C0000004916B00000D0F034130.mp4"}}, {"2e": {"name": "VTM NIEUWS - Video: Theo Francken stapt naar Cassatie (08122016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/12/08/201612081921518010034065084005056B7305C0000004916B00000D0F032052.mp4"}}, {"3e": {"name": "VTM NIEUWS - Video: België betaalt dwangsom voor Syrische familie (26102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/26/201610261943566010034065084005056B7305C0000005076B00000D0F089298.mp4"}}, {"4e": {"name": "VTM NIEUWS - Video: Francken in beroep na heisa rond dwangsom (27102016)", "url": "http://flvpd.vtm.be/videocms/nieuws/2016/10/27/201610271318187010034065084005056B7305C0000005076B00000D0F090649.mp4"}}]
videos := 1e, 2e, 3e, 4e

--xquery "let $a:=concat(
            //meta[@property='og:site_name']/@content,
            if (//meta[@itemprop='articleProgram']) then
              concat(
                ' - ',
                //meta[@itemprop='articleProgram']/@content
              )
            else
              ()
          ) return
          let $b:=[
            {
              '1e':{
                'name':replace(
                  concat(
                    $a,
                    ' - ',
                    //meta[@property='og:title']/@content,
                    replace(
                      (
                        //@datetime[1],
                        //meta[@property='article:published_time']/@content
                      ),
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  '[&quot;&apos;]',
                  ''''''
                ),
                'url'://source/@src
              }
            },
            //script/json(
              extract(
                .,
                'vmmaplayer=(.+);',1
              )[.]
            )/{
              position()+1||'e':{
                'name':concat(
                  $a,
                  ' - ',
                  title,
                  replace(
                    videoUrl,
                    '.+?(\d+)/(\d+)/(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                'url':videoUrl
              }
            }
          ] return
          if ($b()('2e')) then (
            json:=$b,
            videos:=join($json()(),', ')
          ) else
            $b()('1e') ! (
              name:=name,
              v_url:=url
            )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/6629f05abc5f8a27eea61ef967241a4bd880e98c]

xidel-0.9.6.exe -s --color=never "http://www.foxtv.nl/programmas/fox/the-simpsons/videos/inglorious-bastards-the-simpsons-seizoen-24-aflevering-8" -e "date:=replace(extract($raw,'publishingDate=(\d{8})',1),'(\d{4})(\d{2})(\d{2})',' ($3$2$1)')" -f "extract($raw,'tp:releaseUrl=\"(.+^)\"',1)" --xquery "name:=concat('FOX - ',replace(//param[@name='fullTitle']/@value,'[&quot;&apos;]',''''''),$date),s_url:=//textstream[@lang='nl'][@type='text/srt']/@src" -f "//video/@src" --xquery "json:=[{'format':'meta','url':$url},tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8)',1)}],let $a:=($json()[format='meta']/format,for $x in $json()[format!='meta']/format order by $x return $x) return (formats:=join($a,', '),best:=$a[last()])"
date :=  (16122016)
name := FOX - Inglorious Bastards - The Simpsons - S24E8 (16122016)
s_url := http://sire-foxnl-pmd.fichub.com/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~nl~~~1.srt
json := [{"format": "meta", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/master.m3u8?__b__=1200"}, {"format": "1281", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_3_av.m3u8"}, {"format": "4033", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_0_av.m3u8"}, {"format": "2493", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_1_av.m3u8"}, {"format": "1870", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_2_av.m3u8"}, {"format": "655", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_4_av.m3u8"}, {"format": "458", "url": "http://sireclipsfoxnl-vh.akamaihd.net/i/mpx/FIC_SIRE_Fox/117/964/Inglorious_Bastards~~105338~24~8~en~~~1_en_752860851,70_mp4_video_1920x0_4016000_primary_audio_6,69_mp4_video_1280x0_2432000_primary_audio_5,68_mp4_video_1280x0_1800000_primary_audio_4,67_mp4_video_960x0_1200000_primary_audio_3,66_mp4_video_640x0_568000_primary_audio_2,65_mp4_video_480x0_400000_primary_audio_1,.mp4.csmil/index_5_av.m3u8"}]
formats := meta, 458, 655, 1281, 1870, 2493, 4033
best := 4033

-e "date:=replace(
      extract(
        $raw,
        'publishingDate=(\d{8})',1
      ),
      '(\d{4})(\d{2})(\d{2})',
      ' ($3$2$1)'
    )"
-f "extract(
      $raw,
      'tp:releaseUrl=\"(.+^)\"',1
    )"
--xquery "name:=concat(
            'FOX - ',
            replace(
              //param[@name='fullTitle']/@value,
              '[&quot;&apos;]',
              ''''''
            ),
            $date
          ),
          s_url:=//textstream[@lang='nl'][@type='text/srt']/@src"
-f "//video/@src"
--xquery "json:=[
            {
              'format':'meta',
              'url':$url
            },
            tail(
              tokenize(
                $raw,
                '#EXT-X-STREAM-INF:'
              )
            ) ! {
              'format':string(
                extract(
                  .,
                  'BANDWIDTH=(\d+)',1
                ) idiv 1000
              ),
              'url':extract(
                .,
                '(.+m3u8)',1
              )
            }
          ],
          let $a:=(
            $json()[format='meta']/format,
            for $x in $json()[format!='meta']/format order by $x return $x
          ) return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/8980d9b6732eac5e7f031645353c03a0d5ac1691]

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-opc-2012/" -e "let $a:=[//script/reverse(extract(.,'(http.+mp4)',1,'*')[.]) ! {'format':concat('mp4-',position()),'url':.}] return (name:=concat('ABHD - ',//div[@id='playerObject']//a,replace($a(1)/url,'.+?/(\d+)/(\d{2})(\d{2}).+',' ($3$2$1)')),if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := ABHD - Opel Astra OPC 2012 (25062012)
v_url := http://static.autojunk.nl/flv/2012/0625/120055_hq.mp4

xidel-0.9.6.exe -s --color=never "http://www.abhd.nl/video/opel-astra-j-2009-2015-occasion/" -e "..."
name := ABHD - Opel Astra J (2009-2015) occasion (10112016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1110/095704_hq.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1110/095704_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

-e "let $a:=[
      //script/reverse(
        extract(
          .,
          '(http.+mp4)',1,'*'
        )[.]
      ) !
        {
          'format':concat(
            'mp4-',
            position()
          ),
          'url':.
        }
    ] return (
      name:=concat(
        'ABHD - ',
        //div[@id='playerObject']//a,
        replace(
          $a(1)/url,
          '.+?/(\d+)/(\d{2})(\d{2}).+',
          ' ($3$2$1)'
        )
      ),
      if (count($a()/url)=1) then
        v_url:=$a()/url
      else (
        json:=$a,
        let $b:=$a()/format return (
          formats:=join($b,', '),
          best:=$b[last()]
        )
      )
    )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/1f8593bf0c029471086af9c3c4c9a5a35a941dcc]

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/the-fate-of-the-furious" -e "name:=concat('Autojunk - ',//meta[@property='og:title']/@content,replace(//span[@class='posted'],'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),//div[@id='playerWrapper']/(if (iframe) then v_url:=replace(iframe/@src,'.+/(.+)','https://youtu.be/$1') else let $a:=[script/extract(.,'myfile = ''(.+)''',1,'*')[.] ! {'format':concat(replace(.,'.+\.(.+)','$1-'),position()),'url':.}] return if (count($a()/url)=1) then v_url:=$a()/url else (json:=$a,let $b:=$a()/format return (formats:=join($b,', '),best:=$b[last()])))"
name := Autojunk - The Fate of the Furious (09122016)
json := [{"format": "mp4-1", "url": "http://static.autojunk.nl/flv/2016/1209/185214.mp4"}, {"format": "mp4-2", "url": "http://static.autojunk.nl/flv/2016/1209/185214_720p.mp4"}]
formats := mp4-1, mp4-2
best := mp4-2

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2016/12/ferrari-488-gtb-by-xxx-performance-w-capristo-exhaust" -e "..."
name := Autojunk - Ferrari 488 GTB by xXx Performance w/ Capristo Exhaust (10122016)
v_url := https://youtu.be/Y9snaArzog8

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2009/11/peugeot-206-rally-crash" -e "..."
name := Autojunk - Peugeot 206 rally crash (15112009)
v_url := http://static.autojunk.nl/flv/2009/1115/135833.mp4

xidel-0.9.6.exe -s --color=never "http://www.autojunk.nl/2007/03/7-seconden-op-de-ring" -e "..."
name := Autojunk - 7 seconden op de ring (23032007)
v_url := http://static.autojunk.nl/flv/2007/0323/120040.flv

-e "name:=concat(
      'Autojunk - ',
      //meta[@property='og:title']/@content,
      replace(
        //span[@class='posted'],
        '.+?(\d+)-(\d+)-(\d+).+',
        ' ($1$2$3)'
      )
    ),
    //div[@id='playerWrapper']/(
      if (iframe) then
        v_url:=replace(
          iframe/@src,
          '.+/(.+)',
          'https://youtu.be/$1'
        )
      else
        let $a:=[
          script/extract(
            .,'myfile = ''(.+)''',1,'*'
          )[.] !
            {
              'format':concat(
                replace(
                  .,
                  '.+\.(.+)',
                  '$1-'
                ),
                position()
              ),
              'url':.
            }
        ] return
        if (count($a()/url)=1) then
          v_url:=$a()/url
        else (
          json:=$a,
          let $b:=$a()/format return (
            formats:=join($b,', '),
            best:=$b[last()]
          )
        )
    )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/0f871ca56ff739fddadd408904bfa1c6998bb451]

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://e.omroep.nl/tt888/VPWON_1269922" -t 14 "VPWON_1269922-frag.srt"
1
00:00:00,000 --> 00:00:03,013
En in lenigheid zijn ze hun grote neef zeker de baas.

2
00:00:38,005 --> 00:00:44,000
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

3
00:00:44,005 --> 00:00:47,004
en leniger is dan die machtige roofdieren.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://e.omroep.nl/tt888/VPWON_1269922" -ss 642 -t 14 "VPWON_1269922-frag.srt"
1
00:00:03,014 --> 00:00:09,009
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

2
00:00:09,014 --> 00:00:12,013
en leniger is dan die machtige roofdieren.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 630 -i "http://e.omroep.nl/tt888/VPWON_1269922" -ss 12 -t 14 "VPWON_1269922-frag.srt"
1
00:00:03,014 --> 00:00:09,009
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

2
00:00:09,014 --> 00:00:12,013
en leniger is dan die machtige roofdieren.

--------------------------------------------------------------------------------------------------------------------------------

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://e.omroep.nl/tt888/VPWON_1269922" -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922-frag.mp4"
Met --ss 642 vóór de eerste input krijg je wel het juiste videofragment, maar de ondertiteling wordt niks mee gedaan en start vanaf het begin.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 642 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -ss 642 -i "http://e.omroep.nl/tt888/VPWON_1269922" -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922-frag.mp4"
Met -ss 642 vóór elke input krijg je:
[mp4 @ 0373e180] Application provided duration: -34986 / timestamp: 9014 is out of range for mov/mp4 format
[mp4 @ 0373e180] pts has no value
Je krijgt wel het juiste videofragment, maar de tijdsduur klopt niks van. De ondertiteling loopt wel synchroon, maar toch gaat ook hier iets mis, want de regel vóór #1 (#86 in de hele video) is vanaf het begin van het videofragment in beeld.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://e.omroep.nl/tt888/VPWON_1269922" -ss 642 -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922_url-frag.mp4"
Met -ss 642 ná de laatste input krijg je het juiste videofragment én ondertiteling die synchroon loopt, maar omdat er nu nauwkeurig gezocht moet worden, kost het enige tijd voordat 00:10:42 bereikt is. Niet optimaal dus.

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -ss 630 -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -ss 630 -i "http://e.omroep.nl/tt888/VPWON_1269922" -ss 12 -t 14 -c copy -bsf:a aac_adtstoasc -c:s mov_text -metadata:s:s language=dut "VPWON_1269922_url-frag.mp4"
Met -ss 630 vóór elke input én -ss 12 ná de laatste input krijg je het juiste videofragment én ondertiteling die synchroon loopt.
Er wordt eerst snel gezocht naar 00:10:30 en daarna nauwkeurig naar 00:10:42. Hierdoor gaat het dus ook lekker snel.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Vervolgens doemt het volgende probleem op:
De ondertiteling in deze mp4-bestanden wordt, i.t.t. Media Player Classic - HC/BE op mijn pc, door mijn Samsung SMART TV (en waarschijnlijk veel meer modellen) niet goed weergegeven. Lijnen worden maar willekeurig getoond, of gewoon voor een lange tijd niet.
I.t.t. FFMpeg genereert MP4Box tx3g-ondertitelingstreams wel volgens de specificaties:

mp4box.exe -add "VPWON_1269922.srt:lang=dut:name=" "NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mp4"
Timed Text (SRT) import - text track 1024 x 576, font Serif (size 18)
Saving NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mp4: 0.500 secs Interleaving

ffmpeg-x86-N-82759-g1f5630a.exe -hide_banner -i "http://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m65ec697756843b9300586e4698000000.cd7143b54f96a68505305f4c1caf51bd/p/32/10/10/19/VPWON_1269922/VPWON_1269922.ism/VPWON_1269922-audio=128000-video=1002000.m3u8" -i "http://e.omroep.nl/tt888/VPWON_1269922" -c copy -bsf:a aac_adtstoasc -c:s srt -metadata:s:s language=dut "NTR - Het verborgen leven van de kat - De leeuw op jouw schoot (03012017).mkv"
Ondertitelingstreams in Matroska daarentegen zijn voor mijn smart tv (en voor de meeste smart tv's waarschijnlijk) geen enkel probleem.

--------------------------------------------------------------------------------------------------------------------------------

Nu moet de (ingevoerde) begintijd opgesplitst worden in een voor FFMpeg -ss parameter voor vóór de input en een voor ná de input.

Invoer al dan niet converteren naar tijd en d.m.v. de 'from-time'-functies ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='642' return let $a:=if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00') return (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60,ss2:=seconds-from-time($a))"
ss1 := 600
ss2 := 42

Invoer al dan niet converteren naar tijd en d.m.v. tokenize ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='00:10:42' return let $a:=tokenize(if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00'),':') return (ss1:=$a[1]*3600+$a[2]*60,ss2:=$a[3])"
ss1 := 600
ss2 := 42

Invoer al dan niet converteren naar seconden en rekenkundig ontleden:
xidel-0.9.6.exe -s --color=never -e "let $a:='00:10:42' return let $a:=if ($a castable as time) then hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) else $a return (ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 600
ss2 := 42

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Speciale gevallen verder uitwerken:

xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00') return (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60,ss2:=seconds-from-time($a))"
xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=tokenize(if ($a castable as time) then $a else $a * dayTimeDuration('PT1S') + time('00:00:00'),':') return (ss1:=$a[1]*3600+$a[2]*60,ss2:=$a[3])"
xidel-0.9.6.exe -s --color=never -e "let $a:='00:00:59' return let $a:=if ($a castable as time) then hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) else $a return (ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 0		// ffmpeg.exe -ss 0 -i "..." is NIET hetzelfde als ffmpeg.exe -i "..." en moet dus niet worden toegekend!
ss2 := 59

xidel-0.9.6.exe ... '00:00:59' ... return ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:00:59' ... return (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:00:59' ... return (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss2 := 59

xidel-0.9.6.exe ... '00:01:00' ... return ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 60
ss2 := 00		// DEZE zou dus juist 60 moeten zijn voor de -ss ná de input

xidel-0.9.6.exe ... '00:01:00' ... return if (seconds-from-time($a)=0) then (ss1:=hours-from-time($a)*3600+minutes-from-time($a)*60-60,ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return if (($a[2]*60+$a[3]) mod 60=0) then (ss1:=$a[1]*3600+$a[2]*60-60,ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return if ($a mod 60=0) then (ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 0		// ffmpeg.exe -ss 0 -i "..." is NIET hetzelfde als ffmpeg.exe -i "..." en moet dus niet toegekend worden!
ss2 := 60

xidel-0.9.6.exe ... '00:01:00' ... return if (seconds-from-time($a)=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
xidel-0.9.6.exe ... '00:01:00' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
xidel-0.9.6.exe ... '00:01:00' ... return if ($a mod 60=0) then (if ($a=60) then () else ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss2 := 60

xidel-0.9.6.exe ... '00:01:01' ... return if (seconds-from-time($a)=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else ((hours-from-time($a)*3600+minutes-from-time($a)*60) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a))"
ss1 := 60
ss2 := 1
xidel-0.9.6.exe ... '00:01:01' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=$a[3])"
ss1 := 60
ss2 := 01		// Alleen bij deze methode moet de 0 bij 1 t/m 9 nog weg
xidel-0.9.6.exe ... '00:01:01' ... return if ($a mod 60=0) then (if ($a=60) then () else ss1:=$a - 60,ss2:=60) else (if ($a<60) then () else ss1:=$a - ($a mod 60),ss2:=$a mod 60)"
ss1 := 60
ss2 := 1

xidel-0.9.6.exe ... '00:01:01' ... return if (($a[2]*60+$a[3]) mod 60=0) then (($a[1]*3600+$a[2]*60-60) ! (if (.=0) then () else ss1:=.),ss2:=60) else (($a[1]*3600+$a[2]*60) ! (if (.=0) then () else ss1:=.),ss2:=float($a[3]))"
ss1 := 60
ss2 := 1

'00:59:59'     --> ss1:=3540 ss2:=59
'01:00:00'     --> ss1:=3540 ss2:=60
'01:00:01'     --> ss1:=3600 ss2:=1
'01:00:01.317' --> ss1:=3600 ss2:=1.317

Op 30 seconden opsplitsen (zoals FFMpeg voorbeeld hierboven) i.p.v. op de hele minuut:

xidel-0.9.6.exe ... '01:00:00' ... return if (seconds-from-time($a) mod 30=0) then ((hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)-30) ! (if (.=0) then () else ss1:=.),ss2:=30) else ((hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)-(seconds-from-time($a) mod 30)) ! (if (.=0) then () else ss1:=.),ss2:=seconds-from-time($a) mod 30)"
xidel-0.9.6.exe ... '01:00:00' ... return if (($a[2]*60+$a[3]) mod 30=0) then (($a[1]*3600+$a[2]*60+$a[3]-30) ! (if (.=0) then () else ss1:=.),ss2:=30) else (($a[1]*3600+$a[2]*60+$a[3]-($a[3] mod 30)) ! (if (.=0) then () else ss1:=.),ss2:=$a[3] mod 30)"		// float() kan ook weg hierdoor
xidel-0.9.6.exe ... '01:00:00' ... return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
ss1 := 3570
ss2 := 30

De laatste methode is duidelijk de kortste en efficiëntste, helemaal als er voor deze laatste stap geen extra code aan toegevoegd hoeft te worden.

-e "let $a:='01:00:00' return
    let $a:=if ($a castable as time) then
      hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)
    else
      $a
    return
    if ($a mod 30=0) then (
      if ($a=30) then
        ()
      else
        ss1:=$a - 30,
      ss2:=30
    ) else (
      if ($a<30) then
        ()
      else
        ss1:=$a - ($a mod 30),
      ss2:=$a mod 30
    )"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

M.b.v. read() kan stdin uitgelezen worden:
xidel-0.9.6.exe -s --color=never -e "let $a:=read() return let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
01:00:00		// Prompt, dus zelf in moeten vullen
ss1 := 3570
ss2 := 30

Dit werkt niet in een for-loop in batch, omdat alle uitvoer pas aan het einde wordt verwerkt, terwijl de tekst tussentijds moet worden weergeven:
xidel-0.9.6.exe -s --color=never -e "'Voer begintijd in (in seconden, of als uu:mm:ss[.xxx]): '" -e "let $a:=read() return let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30)"
Voer begintijd in (in seconden, of als uu:mm:ss[.xxx]): 01:00:00		// Prompt, dus zelf in moeten vullen

ss1 := 3570
ss2 := 30

Extra checks toevoegen voor :Download bij geen invoer, of als invoer 0 is:
xidel-0.9.6.exe -s --color=never -e "let $a:=read() return if ($a) then let $a:=if ($a castable as time) then (hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)) else $a return if ($a=0) then () else if ($a mod 30=0) then (if ($a=30) then () else ss1:=$a - 30,ss2:=30) else (if ($a<30) then () else ss1:=$a - ($a mod 30),ss2:=$a mod 30) else ()"

-e "let $a:=read() return
    if ($a) then
      let $a:=if ($a castable as time) then
        hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a)
      else
        $a
      return
      if ($a=0) then
        ()
      else
        if ($a mod 30=0) then (
          if ($a=30) then
            ()
          else
            ss1:=$a - 30,
          ss2:=30
        ) else (
          if ($a<30) then
            ()
          else
            ss1:=$a - ($a mod 30),
          ss2:=$a mod 30
        )
    else
      ()"

Bij ECHO !json! ^| %xidel% - (:Formats) komt de json al via stdin. Dus read() gaat hier niet werken.

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://e.omroep.nl/tt888/POW_00942206')"		// ANSI (1252)
false

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://e.omroep.nl/tt888/POW_00942206','LATIN1')"
true

In dit geval is -sub_charenc CP1252 nodig voor FFMpeg, maar ondanks dat gaat het hier om een coderingsfout bij de NPO, omdat 'München' niet goed wordt weergegeven:
xidel-0.9.6.exe -s --color=never -e "unparsed-text-lines('http://e.omroep.nl/tt888/POW_00942206','LATIN1')[9]"
Op de veiligheidsconferentie in MEunchen klinkt duidelijke taal over het Oekraiense conflict.

xidel-0.9.6.exe -s --color=never -e "unparsed-text-available('http://e.omroep.nl/tt888/VPWON_1269922')"		// UTF-8
true

Hier is uiteraard geen -sub_charenc CP1252 nodig:
xidel-0.9.6.exe -s --color=never -e "unparsed-text-lines('http://e.omroep.nl/tt888/VPWON_1269922')[349]"
Deze röntgenopnamen laten zien dat je huiskat de houding heeft van een tijger of leeuw...

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never "http://e.omroep.nl/metadata/POMS_VARA_6868273" --xquery "json(extract($raw,'\((.+)\)',1))/(name:=replace(concat(if (count(.//naam)=1) then .//naam else join(.//naam,' en '),' - ',if (ptype='episode') then (if (aflevering_titel) then (if (contains(titel,aflevering_titel)) then titel else (if (contains(aflevering_titel,titel)) then aflevering_titel else concat(titel,' - ',aflevering_titel))) else titel) else concat(.//serie_titel,' - ',titel),if (matches('%date%','^\d')) then ' (%date%)' else replace(x:request({'data':concat('http://www.npo.nl/',prid),'method':'HEAD'})/url,'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),'[&quot;&apos;]',''''''),prid:=prid,pubopties:=pubopties,streams:=streams,t:=if (tijdsduur instance of string) then hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur) else (),(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind),if (tt888='ja') then (s_url:=concat('http://e.omroep.nl/tt888/',prid),if (unparsed-text-available($s_url)) then () else s_charenc:='-sub_charenc CP1252') else ())"
name := VARA - De Wereld Draait Door - De TV Draait Door (10012017)
prid := VARA_101381724
pubopties := ["adaptive", "h264_bb", "h264_sb", "h264_std"]
streams :=
t := 189
ss1 := 1920
ss2 := 16
to := 2125
s_url := http://e.omroep.nl/tt888/VARA_101381724

xidel-0.9.6.exe -s --color=never "http://e.omroep.nl/metadata/POW_00942206" --xquery "..."
name := NOS - NOS Journaal (07022015)
prid := POW_00942206
pubopties := ["adaptive", "h264_bb", "h264_sb", "h264_std"]
streams :=
t := 1355
to :=
s_url := http://e.omroep.nl/tt888/POW_00942206
s_charenc := -sub_charenc CP1252

--xquery "json(
            extract(
              $raw,
              '\((.+)\)',1
            )
          )/(
            name:=replace(
              concat(
                if (count(.//naam)=1) then
                  .//naam
                else
                  join(.//naam,' en '),
                ' - ',
                if (ptype='episode') then (
                  if (aflevering_titel) then (
                    if (contains(titel,aflevering_titel)) then
                      titel
                    else (
                      if (contains(aflevering_titel,titel)) then
                        aflevering_titel
                      else
                        concat(
                          titel,
                          ' - ',
                          aflevering_titel
                        )
                    )
                  ) else
                    titel
                ) else
                  concat(
                    .//serie_titel,
                    ' - ',
                    titel
                  ),
                if (matches('%date%','^\d')) then
                  ' (%date%)'
                else
                  replace(
                    x:request(
                      {
                        'data':concat(
                          'http://www.npo.nl/',
                          prid
                        ),
                        'method':'HEAD'
                      }
                    )/url,
                    '.+?(\d+)-(\d+)-(\d+).+',
                    ' ($1$2$3)'
                  )
              ),
              '[&quot;&apos;]',
              ''''''
            ),
            prid:=prid,
            pubopties:=pubopties,
            streams:=streams,
            t:=if (tijdsduur instance of string) then
              hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur)
            else
              (),
            (hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (
              if (. mod 30=0) then (
                if (.=30) then
                  ()
                else
                  ss1:=. - 30,
                ss2:=30
              ) else (
                if (.<30) then
                  ()
                else
                  ss1:=. - (. mod 30),
                ss2:=. mod 30
              )
            ),
            to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind),
            if (tt888='ja') then (
              s_url:=concat(
                'http://e.omroep.nl/tt888/',
                prid
              ),
              if (unparsed-text-available($s_url)) then
                ()
              else
                s_charenc:='-sub_charenc CP1252'
            ) else 
              ()
          )"

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.6.exe -s --color=never "http://www.eenvandaag.nl/broadcast/5567" --xquery "prid:=//script/extract(.,'prid: \"(.+)\"',1)[.],if (contains($url,'broadcast')) then () else (name:=concat('EenVandaag - ',replace(//meta[@name='twitter:title']/@content,'[&quot;&apos;]',''''''),replace(//meta[@name='twitter:player:stream']/@content,'.+std\.(\d{4})(\d{2})(\d{2}).+',' ($3$2$1)')),//script/json(extract(.,'options: (.+?\})',1,'s'))/(t:=endAt - startAt,startAt ! (if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),to:=endAt),json(extract(unparsed-text(concat('http://e.omroep.nl/metadata/',$prid)),'\((.+)\)',1))/(pubopties:=pubopties,if (tt888='ja') then (s_url:=concat('http://e.omroep.nl/tt888/',prid),if (unparsed-text-available($s_url)) then () else s_charenc:='-sub_charenc CP1252') else ()))"
prid := AT_2064397

xidel-0.9.6.exe -s --color=never "http://buitenland.eenvandaag.nl/tv-items/71453/tanks_in_europa_terug_naar_de_koude_oorlog_" --xquery "..."
prid := AT_2064397
name := EenVandaag - Tanks in Europa, terug naar de Koude Oorlog? (10012017)
t := 275
ss1 := 1020
ss2 := 18
to := 1313
pubopties := ["adaptive", "h264_bb", "h264_sb", "h264_std"]
s_url := http://e.omroep.nl/tt888/AT_2064397

--xquery "prid:=//script/extract(
            .,
            'prid: \"(.+)\"',1
          )[.],
          if (contains($url,'broadcast')) then
            ()
          else (
            name:=concat(
              'EenVandaag - ',
              replace(
                //meta[@name='twitter:title']/@content,
                '[&quot;&apos;]',
                ''''''
              ),
              replace(
                //meta[@name='twitter:player:stream']/@content,
                '.+std\.(\d{4})(\d{2})(\d{2}).+',
                ' ($3$2$1)'
              )
            ),
            //script/json(
              extract(
                .,
                'options: (.+?\})',1,'s'
              )
            )/(
              t:=endAt - startAt,
              startAt ! (
                if (. mod 30=0) then (
                  if (.=30) then
                    ()
                  else
                    ss1:=. - 30,
                  ss2:=30
                ) else (
                  if (.<30) then
                    ()
                  else
                    ss1:=. - (. mod 30),
                  ss2:=. mod 30
                )
              ),
              to:=endAt
            ),
            json(
              extract(
                unparsed-text(
                  concat(
                    'http://e.omroep.nl/metadata/',
                    $prid
                  )
                ),
                '\((.+)\)',1
              )
            )/(
              pubopties:=pubopties,
              if (tt888='ja') then (
                s_url:=concat(
                  'http://e.omroep.nl/tt888/',
                  prid
                ),
                if (unparsed-text-available($s_url)) then
                  ()
                else
                  s_charenc:='-sub_charenc CP1252'
              ) else
                ()
            )
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/a18a79b733631d8d173190fce6c28d9599965484]

Prettification:

xidel-0.9.6.exe -s --color=never ^
-e ^"let $a:='01:00:00' return ^
     let $a:=if ($a castable as time) then ^
       hours-from-time($a)*3600+minutes-from-time($a)*60+seconds-from-time($a) ^
     else ^
       $a ^
     return ^
     if ($a mod 30=0) then ( ^
       if ($a=30) then ^
         () ^
       else ^
         ss1:=$a - 30, ^
       ss2:=30 ^
     ) else ( ^
       if ($a^<30) then ^
         () ^
       else ^
         ss1:=$a - ($a mod 30), ^
       ss2:=$a mod 30 ^
     )^"

Het einde van elke regel moet ge-escaped worden met een caret. Als elke opeenvolgende regel aan het begin begint (zoals de 2e regel hierboven), dan moet er een spatie vóór de laatste caret.
Ook < en " moeten hier ge-escaped worden.

--------------------------------------------------------------------------------------------------------------------------------

SET xidel="D:\Storage\Media\Binaries\xidel-0.9.6.exe"

FOR /F "delims=" %%A IN ('^"%xidel% -s --color^=never
-e ^"let $a:^='01:00:00' return
     let $a:^=if ($a castable as time^) then
       hours-from-time($a^)*3600+minutes-from-time($a^)*60+seconds-from-time($a^)
     else
       $a
     return
     if ($a mod 30^=0^) then (
       if ($a^=30^) then
         (^)
       else
         ss1:^=$a - 30^,
       ss2:^=30
     ^) else (
       if ($a^<30^) then
         (^)
       else
         ss1:^=$a - ($a mod 30^)^,
       ss2:^=$a mod 30
     ^)^" --output-format^=cmd^"') DO %%A

Ik dacht altijd dat het in een for-loop nooit mogelijk was, maar blijkbaar toch wel. :)
Het escapen van elke regel is hier niet nodig, maar die van alle escape-characters wel! Hier zijn dat " = ) , en <

De Xidel commando wordt nog steeds ontleed als één lange regel, waardoor de limiet van 8192 tekens ook hier van kracht is.

--------------------------------------------------------------------------------------------------------------------------------

Ontleed een specifiek gedeelte van een tekstbestand en escape alle escape-characters:
xidel-0.9.6.exe -s --color=never -e "file:read-text-lines('batchgemist-1.52_notes.txt')[position()>1261][position()<88] ! replace(.,'([\^&<>|\"\",;=)])','^$1')" | clip

Officieel zijn dit de escape-characters: [^&<>|",;()=], maar...
- Een ^ vooraan moet worden ge-escaped.
- De " moeten worden ge-escaped, maar ook verdubbeld, omdat één " in Batch problemen geeft.
- De ( kan achterwege gelaten worden, omdat het escapen van een ( in een for-loop in Batch, i.t.t. een ), niet noodzakelijk is.

I.p.v. de " te moeten verdubbelen, kan ook xquery gebruikt worden (denk wel om de eerste & ):
xidel-0.9.6.exe -s --color=never --xquery "file:read-text-lines('batchgemist-1.52_notes.txt')[position()>1261][position()<88] ! replace(.,'([\^&amp;<>|&quot;,;=)])','^$1')" | clip

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/5a6d0bf7b023ad1a7263c3a4fe846f800bedd6e8]

xidel-0.9.6.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=b052eb4a-238b-35c6-b16a-774c2ece9a73/fmt=adaptive/" --xquery "$json/(name:=replace(concat(.//station,' - ',abstracts/name,' - ',if (.//classname='uitzending') then episodes/name else .//title,replace(.//original_date * dayTimeDuration('PT1S') + date('1970-01-01'),'(\d+)-(\d+)-(\d+)',' ($3$2$1)')),'[&quot;&apos;]',''''''),q:=.//quality)" -f "$json/(if (meta/nr_of_videos_total=0) then () else concat(meta/videohost,material/videopath))" --xquery "json:=[{'format':'meta','url':$url},tail(tokenize($raw,'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':extract(.,'(.+m3u8)',1)},let $a:='http://pg.us.rtl.nl/rtlxl/network/' return replace($url,'.+(/comp.+)\.m3u8','$1.mp4') ! ({'format':'mp4-a2t','url':concat($a,'a2t/progressive',.)},{'format':'mp4-a3t','url':concat($a,'a3t/progressive',.)},if ($q='HD') then {'format':'mp4-nettv','url':concat($a,'nettv/progressive',.)} else ())],let $a:=($json()[contains(format,'mp4')]/format,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($a,', '),best:=$a[last()])"
name := RTL4 - RTL Nieuws - 19:30 uur (12012017)
q := HD
json := [{"format": "meta", "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.m3u8"}, {"format": "1136", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.ism/b052eb4a-238b-35c6-b16a-774c2ece9a73-audio=125440-video=947000.m3u8"}, {"format": "2409", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.ism/b052eb4a-238b-35c6-b16a-774c2ece9a73-audio=125440-video=2148000.m3u8"}, {"format": "4291", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.ism/b052eb4a-238b-35c6-b16a-774c2ece9a73-audio=125440-video=3923000.m3u8"}, {"format": "132", "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.ism/b052eb4a-238b-35c6-b16a-774c2ece9a73-audio=125440.m3u8"}, {"format": "mp4-a2t", "url": "http://pg.us.rtl.nl/rtlxl/network/a2t/progressive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.mp4"}, {"format": "mp4-a3t", "url": "http://pg.us.rtl.nl/rtlxl/network/a3t/progressive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.mp4"}, {"format": "mp4-nettv", "url": "http://pg.us.rtl.nl/rtlxl/network/nettv/progressive/components/actueel/rtlnieuws/376457/2017w02/b052eb4a-238b-35c6-b16a-774c2ece9a73.ssm/b052eb4a-238b-35c6-b16a-774c2ece9a73.mp4"}]
formats := mp4-a2t, mp4-a3t, mp4-nettv, meta, 132, 1136, 2409, 4291
best := 4291

--xquery "$json/(
            name:=replace(
              concat(
                .//station,
                ' - ',
                abstracts/name,
                ' - ',
                if (.//classname='uitzending') then
                  episodes/name
                else
                  .//title,
                replace(
                  .//original_date * dayTimeDuration('PT1S') + date('1970-01-01'),
                  '(\d+)-(\d+)-(\d+)',
                  ' ($3$2$1)'
                )
              ),
              '[&quot;&apos;]',
              ''''''
            ),
            q:=.//quality
          )"
-f "$json/(
      if (meta/nr_of_videos_total=0) then
        ()
      else
        concat(
          meta/videohost,
          material/videopath
        )
    )"
--xquery "json:=[
            {
              'format':'meta',
              'url':$url
            },
            tail(
              tokenize(
                $raw,
                '#EXT-X-STREAM-INF:'
              )
            ) ! {
              'format':string(
                extract(
                  .,
                  'BANDWIDTH=(\d+)',1
                ) idiv 1000
              ),
              'url':extract(
                .,
                '(.+m3u8)',1
              )
            },
            let $a:='http://pg.us.rtl.nl/rtlxl/network/' return
            replace(
              $url,
              '.+(/comp.+)\.m3u8',
              '$1.mp4'
            ) ! (
              {
                'format':'mp4-a2t',
                'url':concat(
                  $a,
                  'a2t/progressive',
                  .
                )
              },
              {
                'format':'mp4-a3t',
                'url':concat(
                  $a,
                  'a3t/progressive',
                  .
                )
              },
              if ($q='HD') then {
                'format':'mp4-nettv',
                'url':concat(
                  $a,
                  'nettv/progressive',
                  .
                )
              } else
                ()
            )
          ],
          let $a:=(
            $json()[contains(format,'mp4')]/format,
            $json()[format='meta']/format,
            for $x in $json()[format castable as int]/format order by $x return $x
          ) return (
            formats:=join($a,', '),
            best:=$a[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/dca7a6c88b583d02d6ec25a70495b4a2f4b2abf2]

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return head($a)"
a

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return tail($a)"
b
c
d
e
f

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return ($a)[last()]"
f

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return ($a)[position()<count($a)]"
a
b
c
d
e

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return remove($a,count($a))"
a
b
c
d
e

xidel-0.9.6.exe -s --color=never -e "let $a:=('a','b','c','d','e','f') return reverse(tail(reverse($a)))"
a
b
c
d
e

--------------------------------------------------------------------------------------------------------------------------------

[https://github.com/Reino17/BatchGemist/commit/dca7a6c88b583d02d6ec25a70495b4a2f4b2abf2]

xidel-0.9.6.exe -s --color=never "http://www.omroepflevoland.nl/kijken/nieuws/01-10-2016/17-00" --xquery "let $a:=//div[@class='jwplayercontainer'] return if (count($a)=2) then (name:=concat('Omroep Flevoland - ',if (contains($url,'kijken')) then //meta[@name='keywords']/@content else extract($a[1]/@data-video-name,'.+?- (.+) -',1),replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[for $x in json(//script/extract(.,concat($a[1]/div/@id,'.+sources:(.+?\])'),1,'s')[.])()[starts-with(file,'http')] return (if (ends-with($x/file,'m3u8')) then ({'format':'meta','url':$x/file},tail(tokenize(unparsed-text($x/file),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$x/file),extract(.,'(.+m3u8)',1))}) else ('laag','middel','hoog') ! {'format':concat('mp4-',.),'url':replace($x/file,'middel',.)})],let $b:=($json()[contains(format,'mp4')]/format,$json()[format='meta']/format,for $x in $json()[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else (json:=[for $x at $i in remove($a,count($a)) return {$i||'e':{'name':concat('Omroep Flevoland - ',extract($x/@data-video-name,'.+?- (.+) -',1),replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':for $y in json(//script/extract(.,concat($x/div/@id,'.+sources:(.+?\])'),1,'s')[.])()[starts-with(file,'http')] return (if (ends-with($y/file,'m3u8')) then ({'format':'meta','url':$y/file},tail(tokenize(unparsed-text($y/file),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$y/file),extract(.,'(.+m3u8)',1))}) else ('laag','middel','hoog') ! {'format':concat('mp4-',.),'url':replace($y/file,'middel',.)})}}],videos:=join($json()(),', '))"
name := Omroep Flevoland - Nieuws (01102016)
json := [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/playlist.m3u8"}, {"format": "1536", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b1536000_t64SG9vZw==.m3u8"}, {"format": "1024", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b1024000_t64TWlkZGVs.m3u8"}, {"format": "819", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/161001_NW.smil/chunklist_w97334277_b819200_t64TGFhZw==.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/161001_NW.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/161001_NW.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/161001_NW.mp4"}]
formats := mp4-laag, mp4-middel, mp4-hoog, meta, 819, 1024, 1536
best := 1536

xidel-0.9.6.exe -s --color=never "http://www.omroepflevoland.nl/nieuws/138485/dronten-meerpaaldagen-een-grote-reunie" --xquery "..."
json := [{"1e": {"name": "Omroep Flevoland - Meerpaaldagen: ''Een grote reünie'' - Meerpaaldagen: ''Een grote reünie'' (12082016)", "formats": [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4/playlist.m3u8"}, {"format": "1697", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4/chunklist_w321678006.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/160813_Meerpaaldagen_00000G1Z.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/160813_Meerpaaldagen_00000G1Z.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/160813_Meerpaaldagen_00000G1Z.mp4"}]}}, {"2e": {"name": "Omroep Flevoland - Meerpaaldagen: ''Een grote reünie'' - Optreden op het Meerpaalplein (12082016)", "formats": [{"format": "meta", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/playlist.m3u8"}, {"format": "1536", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b1536000_t64SG9vZw==.m3u8"}, {"format": "1024", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b1024000_t64TWlkZGVs.m3u8"}, {"format": "819", "url": "http://videostream.flevolandstreaming.nl/vod/_definst_/ondemand/streams/transfer/160813_meerpaaldagen_Int.mp4.smil/chunklist_w1093632719_b819200_t64TGFhZw==.m3u8"}, {"format": "mp4-laag", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/laag/160813_meerpaaldagen_Int.mp4"}, {"format": "mp4-middel", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/middel/160813_meerpaaldagen_Int.mp4"}, {"format": "mp4-hoog", "url": "http://progressivestream.flevolandstreaming.nl/ondemand/streams/transfer/hoog/160813_meerpaaldagen_Int.mp4"}]}}]
videos := 1e, 2e

--xquery "let $a:=//div[@class='jwplayercontainer'] return
          if (count($a)=2) then (
            name:=concat(
              'Omroep Flevoland - ',
              if (contains($url,'kijken')) then
                //meta[@name='keywords']/@content
              else
                extract(
                  $a[1]/@data-video-name,
                  '.+?- (.+) -',1
                ),
              replace(
                //meta[@property='article:published_time']/@content,
                '(\d+)-(\d+)-(\d+).+',
                ' ($3$2$1)'
              )
            ),
            json:=[
              for $x in json(
                //script/extract(
                  .,
                  concat(
                    $a[1]/div/@id,
                    '.+sources:(.+?\])'
                  ),
                  1,'s'
                )[.]
              )()[starts-with(file,'http')] return (
                if (ends-with($x/file,'m3u8')) then (
                  {
                    'format':'meta',
                    'url':$x/file
                  },
                  tail(
                    tokenize(
                      unparsed-text($x/file),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':string(
                      extract(
                        .,
                        'BANDWIDTH=(\d+)',1
                      ) idiv 1000
                    ),
                    'url':concat(
                      resolve-uri(
                        '.',
                        $x/file
                      ),
                      extract(
                        .,
                        '(.+m3u8)',1
                      )
                    )
                  }
                ) else
                  ('laag','middel','hoog') ! {
                    'format':concat('mp4-',.),
                    'url':replace(
                      $x/file,
                      'middel',
                      .
                    )
                  }
              )
            ],
            let $b:=(
              $json()[contains(format,'mp4')]/format,
              $json()[format='meta']/format,
              for $x in $json()[format castable as int]/format order by $x return $x
            ) return (
              formats:=join($b,', '),
              best:=$b[last()]
            )
          ) else (
            json:=[
              for $x at $i in remove(
                $a,
                count($a)
              ) return {
                $i||'e':{
                  'name':concat(
                    'Omroep Flevoland - ',
                    extract(
                      $x/@data-video-name,
                      '.+?- (.+) -',1
                    ),
                    replace(
                      //meta[@property='article:published_time']/@content,
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  'formats':for $y in json(
                    //script/extract(
                      .,
                      concat(
                        $x/div/@id,
                        '.+sources:(.+?\])'
                      ),
                      1,'s'
                    )[.]
                  )()[starts-with(file,'http')] return (
                    if (ends-with($y/file,'m3u8')) then (
                      {
                        'format':'meta',
                        'url':$y/file
                      },
                      tail(
                        tokenize(
                          unparsed-text($y/file),
                          '#EXT-X-STREAM-INF:'
                        )
                      ) ! {
                        'format':string(
                          extract(
                            .,
                            'BANDWIDTH=(\d+)',1
                          ) idiv 1000
                        ),
                        'url':concat(
                          resolve-uri(
                            '.',
                            $y/file
                          ),
                          extract(
                            .,
                            '(.+m3u8)',1
                          )
                        )
                      }
                    ) else
                      ('laag','middel','hoog') ! {
                        'format':concat('mp4-',.),
                        'url':replace(
                          $y/file,
                          'middel',
                          .
                        )
                      }
                  )
                }
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/f4267b67035242bbcf02f21c93eddaa9454b65fc]

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/gemist/uitzending/rtvutrecht/u-vandaag/20161006-1210/8106766" --xquery "let $a:=//script/extract(.,'(http.+mp4)',1)[.] return if (count($a)=1) then (name:=concat('RTV Utrecht - ',if (contains($url,'gemist')) then substring-before(//h2[@class='h2-large-met-grijs border-top'][1],' -') else replace(if (//p[@class='margin-bottom-5 fragment-bijschrift']) then //p[@class='margin-bottom-5 fragment-bijschrift'] else //meta[@name='og:title']/@content,'[&quot;&apos;]',''''''),replace($a,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')),v_url:=$a) else (json:=[for $x at $i in $a return {$i||'e':{'name':concat('RTV Utrecht - ',replace(//p[@class='margin-bottom-5 fragment-bijschrift'][$i],'[&quot;&apos;]',''''''),replace($x,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')),'url':$x}}],videos:=join($json()(),', '))"
name := RTV Utrecht - U Vandaag (06102016)
v_url := https://content.omroep.nl/rtvutrecht/uitzendinggemist/rtvutrecht/2016/10/06/RTV1514348_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528141/hippe-frietwinkels-en-hamburgertenten-zijn-blijvertje.html" --xquery "..."
name := RTV Utrecht - ''''Consumenten willen weten waar voedsel vandaan komt'' (05102016)
v_url := https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/875160_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528134/docent-verliest-weddenschap-en-springt-in-oudegracht.html" --xquery "..."
name := RTV Utrecht - Docent verliest weddenschap en springt in Oudegracht (05102016)
v_url := https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/876228_MQ.mp4

xidel-0.9.6.exe -s --color=never "http://www.rtvutrecht.nl/nieuws/1528065/opas-en-omas-in-het-zonnetje-tijdens-de-kinderboekenweek.html" --xquery "..."
json := [{"1e": {"name": "RTV Utrecht - Kinderen verkleed als opa''s en oma''s tijdens Kinderboekenweek (05102016)", "url": "https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/05/875042_MQ.mp4"}}, {"2e": {"name": "RTV Utrecht - De Utrechtse kinderboekenschrijver Marcel van Driel over de Kinderboekenweek. (06102016)", "url": "https://content.omroep.nl/rtvutrecht/reportages/video/2016/10/06/876461_MQ.mp4"}}]
videos := 1e, 2e

--xquery "let $a:=//script/extract(
            .,
            '(http.+mp4)',1
          )[.] return
          if (count($a)=1) then (
            name:=concat(
              'RTV Utrecht - ',
              if (contains($url,'gemist')) then
                substring-before(
                  //h2[@class='h2-large-met-grijs border-top'][1],
                  ' -'
                )
              else
                replace(
                  if (//p[@class='margin-bottom-5 fragment-bijschrift']) then
                    //p[@class='margin-bottom-5 fragment-bijschrift']
                  else
                    //meta[@name='og:title']/@content,
                  '[&quot;&apos;]',
                  ''''''
                ),
                replace(
                  $a,
                  '.+(\d{4})/(\d{2})/(\d{2}).+',
                  ' ($3$2$1)'
                )
            ),
            v_url:=$a
          ) else (
            json:=[
              for $x at $i in $a return {
                $i||'e':{
                  'name':concat(
                    'RTV Utrecht - ',
                    replace(
                      //p[@class='margin-bottom-5 fragment-bijschrift'][$i],
                      '[&quot;&apos;]',
                      ''''''
                    ),
                    replace(
                      $x,
                      '.+(\d{4})/(\d{2})/(\d{2}).+',
                      ' ($3$2$1)'
                    )
                  ),
                  'url':$x
                }
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/aef9c6676c5098ccc652545159d7f488a10ba351]

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/Portal.aspx?type=tv" --xquery "if (count((//@data-url,//@data-script))=1) then json(extract(unparsed-text((//@data-url,//@data-script)),'var opts = (.+);',1))/clipData/(if (contains($url,'Portal')) then (name:=replace('%date%','.+?(\d+)-(\d+)-(\d+)','Omroep Brabant - Livestream ($1$2$3)'),let $a:=substring-before((assets)(1)/src,'?') return json:=[{'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'.+/(.+m3u8)',1))}]) else (name:=concat('Omroep Brabant - ',replace(title,'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[(assets)()/{'format':concat('mp4-',bandwidth),'url':src}]),let $b:=($json()[format='meta']/format,for $x in $json()[format!='meta']/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else (if (//@data-script) then (json:=[//@data-script ! {position()||'e':json(extract(unparsed-text(.),'var opts = (.+);',1))/clipData/{'name':concat('Omroep Brabant - ',replace(title,'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':[(assets)()/{'format':concat('mp4-',bandwidth),'url':src}]}}],videos:=join($json()(),', ')) else ())"
name := Omroep Brabant - Livestream (30012017)
json := [{"format": "meta", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/index.m3u8"}, {"format": "3029", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-1920-1080-2750000-index.m3u8"}, {"format": "1822", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-640-360-1600000-index.m3u8"}, {"format": "982", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-480-272-800000-index.m3u8"}, {"format": "457", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-fast-320-180-300000-index.m3u8"}, {"format": "142", "url": "http://omroepbrabant.rr.kpnstreaming.nl/b2b/live/omroepbrabant/omroepbrabant_tv/1478947334-au-index.m3u8"}]
formats := meta, 142, 457, 982, 1822, 3029
best := 3029

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/?epg/17761652/Brabant+Nieuws.aspx" --xquery "..."
name := Omroep Brabant - Brabant Nieuws (30012017)
json := [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2017/video/2372819_elq.mp4"}]
formats := mp4-500, mp4-1100, mp4-1700, mp4-2300, mp4-2900, mp4-3500
best := mp4-3500

xidel-0.9.6.exe -s --color=never "http://www.omroepbrabant.nl/?news/2558441033/Nieuw+persoonlijk+record+en+tiende+plek+voor+Harm+Sengers+in+zijn+laatste+marathon.aspx" --xquery "..."
json := [{"1e": {"name": "Omroep West - Snelste Nederlander op Marathon Eindhoven Harm Sengers maandag weer gewoon aan het werk bij ASML  (10102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2371135_elq.mp4"}]}}, {"2e": {"name": "Omroep West - Keniaan Festus Talam wint 33e Eindhoven Marathon; Harm Sengers uit Eindhoven beste Nederlander. (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370738_elq.mp4"}]}}, {"3e": {"name": "Omroep West - Ontlading bij Harm Sengers na de finish in de Eindhovense marathon (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370826_elq.mp4"}]}}, {"4e": {"name": "Omroep West - Harm Sengers liep een nieuw persoonlijk record in de marathon van Eindhoven (09102016)", "formats": [{"format": "mp4-500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_ulq.mp4"}, {"format": "mp4-1700", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_lq.mp4"}, {"format": "mp4-2900", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_hq.mp4"}, {"format": "mp4-2300", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_mq.mp4"}, {"format": "mp4-3500", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_ehq.mp4"}, {"format": "mp4-1100", "url": "http://omroepbrabantvod.download.kpnstreaming.nl/omroepbrabant/2016/video/2370822_elq.mp4"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "if (count((//@data-url,//@data-script))=1) then
            json(
              extract(
                unparsed-text(
                  (
                    //@data-url,
                    //@data-script
                  )
                ),
                'var opts = (.+);',1
              )
            )/clipData/(
              if (contains($url,'Portal')) then (
                name:=replace(
                  '%date%',
                  '.+?(\d+)-(\d+)-(\d+)',
                  'Omroep Brabant - Livestream ($1$2$3)'
                ),
                let $a:=substring-before(
                  (assets)(1)/src,
                  '?'
                ) return
                json:=[
                  {
                    'format':'meta',
                    'url':$a
                  },
                  tail(
                    tokenize(
                      unparsed-text($a),
                      '#EXT-X-STREAM-INF:'
                    )
                  ) ! {
                    'format':string(
                      extract(
                        .,
                        'BANDWIDTH=(\d+)',1
                      ) idiv 1000
                    ),
                    'url':concat(
                      resolve-uri('.',$a),
                      extract(
                        .,
                        '.+/(.+m3u8)',1
                      )
                    )
                  }
                ]
              ) else (
                name:=concat(
                  'Omroep Brabant - ',
                  replace(
                    title,
                    '[&quot;&apos;]',
                    ''''''
                  ),
                  replace(
                    publisheddate,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
                json:=[
                  (assets)()/{
                    'format':concat(
                      'mp4-',
                      bandwidth
                    ),
                    'url':src
                  }
                ]
              ),
              let $b:=(
                $json()[format='meta']/format,
                for $x in $json()[format!='meta']/format order by $x return $x
              ) return (
                formats:=join($b,', '),
                best:=$b[last()]
              )
            )
          else (
            if (//@data-script) then (
              json:=[
                //@data-script ! {
                  position()||'e':json(
                    extract(
                      unparsed-text(.),
                      'var opts = (.+);',1
                    )
                  )/clipData/{
                    'name':concat(
                      'Omroep Brabant - ',
                      replace(
                        title,
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        publisheddate,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats':[
                      (assets)()/{
                        'format':concat(
                          'mp4-',
                          bandwidth
                        ),
                        'url':src
                      }
                    ]
                  }
                }
              ],
              videos:=join($json()(),', ')
            ) else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/fdc37f89740f0ebb90860ba2e9af14bbc2059489]

xidel-0.9.6.exe -s --color=never "https://l1.nl/l1nws-29-jan-2017-126340/" --xquery "let $a:=//div/script[contains(@src,'video')]/@src return if (count($a)=1) then json(extract(unparsed-text($a),'var opts = (.+);',1))/(if (clipData) then let $b:=.//defaultMediaAssetPath return clipData/(name:=concat('L1 - ',replace(replace(title,'(.+) -.+','$1'),'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),json:=[(assets)()/{'format':concat('mp4-',bandwidth),'url':concat($b,src)}],let $c:=for $x in $json()/format order by $x return $x return (formats:=join($c,', '),best:=$c[last()])) else ()) else (json:=[for $x at $i in $a return {$i||'e':json(extract(unparsed-text($x),'var opts = (.+);',1))/(let $b:=.//defaultMediaAssetPath return clipData/{'name':concat('L1 - ',replace(replace(title,'(.+) -.+','$1'),'[&quot;&apos;]',''''''),replace(publisheddate,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'formats':[(assets)()/{'format':concat('mp4-',bandwidth),'url':concat($b,src)}]})}],videos:=join($json()(),', '))"
name := L1 - L1NWS (29012017)
json := [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170129181408-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170129181853-IPOD.m4v"}]
formats := mp4-600, mp4-1000
best := mp4-1000

xidel-0.9.6.exe -s --color=never "https://l1.nl/bij-l1-treinschoonmaker-danny-wordt-een-dagje-een-conducteur-126353/" --xquery "..."
name := L1 - L1NWS: Droom komt uit voor treinschoonmaker van het jaar? (30012017)
json := [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170130131826-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170130131907-IPOD.m4v"}]
formats := mp4-600, mp4-1000
best := mp4-1000

xidel-0.9.6.exe -s --color=never "https://l1.nl/spik-en-span-katja-henz-en-fer-naus-in-vastelaovendgaste-126359/" --xquery "..."
json := [{"1e": {"name": "L1 - VastelaovendGaste (30012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170130195603-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170130200959-IPOD.m4v"}]}}, {"2e": {"name": "L1 - Hukske fastelaovend (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115033-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115155-IPOD.m4v"}]}}, {"3e": {"name": "L1 - VastelaovendGaste - Spik en Span (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115244-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115354-IPOD.m4v"}]}}, {"4e": {"name": "L1 - VastelaovendGaste - Katja Henz (31012017)", "formats": [{"format": "mp4-1000", "url": "http://content.omroep.nl/l1/bbw/video/20170131115555-MAIN.m4v"}, {"format": "mp4-600", "url": "http://content.omroep.nl/l1/bbw/video/20170131115640-IPOD.m4v"}]}}]
videos := 1e, 2e, 3e, 4e

--xquery "let $a:=//div/script[contains(@src,'video')]/@src return
          if (count($a)=1) then
            json(
              extract(
                unparsed-text($a),
                'var opts = (.+);',1
              )
            )/(
              if (clipData) then
                let $b:=.//defaultMediaAssetPath return
                clipData/(
                  name:=concat(
                    'L1 - ',
                    replace(
                      replace(
                        title,
                        '(.+) -.+',
                        '$1'
                      ),
                      '[&quot;&apos;]',
                      ''''''
                    ),
                    replace(
                      publisheddate,
                      '(\d+)-(\d+)-(\d+).+',
                      ' ($3$2$1)'
                    )
                  ),
                  json:=[
                    (assets)()/{
                      'format':concat(
                        'mp4-',
                        bandwidth
                      ),
                      'url':concat(
                        $b,
                        src
                      )
                    }
                  ],
                  let $c:=for $x in $json()/format order by $x return $x return (
                    formats:=join($c,', '),
                    best:=$c[last()]
                  )
                )
              else
                ()
            )
          else (
            json:=[
              for $x at $i in $a return {
                $i||'e':json(
                  extract(
                    unparsed-text($x),
                    'var opts = (.+);',1
                  )
                )/(
                  let $b:=.//defaultMediaAssetPath return
                  clipData/{
                    'name':concat(
                      'L1 - ',
                      replace(
                        replace(
                          title,
                          '(.+) -.+',
                          '$1'
                        ),
                        '[&quot;&apos;]',
                        ''''''
                      ),
                      replace(
                        publisheddate,
                        '(\d+)-(\d+)-(\d+).+',
                        ' ($3$2$1)'
                      )
                    ),
                    'formats':[
                      (assets)()/{
                        'format':concat(
                          'mp4-',
                          bandwidth
                        ),
                        'url':concat(
                          $b,
                          src
                        )
                      }
                    ]
                  }
                )
              }
            ],
            videos:=join($json()(),', ')
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/a5765908f40ea52a300fa7df4eb463c7d9cee695]

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/gemist/tv/123/25320/-" --xquery "name:=concat('AT5 - ',replace(if (contains($url,'gemist')) then concat(if (contains(//div[@class='banner_label'],'Nieuws')) then 'Nieuws' else concat(//div[@class='banner_label'],'- ',//div[@class='banner_title']),replace(//a[@class='video-player']/@href,'.+(\d{4})/(\d{2})/(\d{2}).+',' ($3$2$1)')) else concat(//meta[@property='og:title']/@content,replace(//meta[@property='article:published_time']/@content,'(\d+)-(\d+)-(\d+).+',' ($3$2$1)')),'[&quot;&apos;]','''''')),if (//iframe) then () else (let $a:=json(concat('http://www.at5.nl/video/json?m=',(//div[@class='video-container']/substring-after(@id,'video'),//div/@data-video)))/source return json:=[('low','medium','hi') ! {'format':concat('mp4-',.),'url':replace($a/(fb)(1)/file,'(hi)',.)},for $x in ('low','medium','hi') ! replace($a/(def)()[type='hls']/file,'(hi)',.) return tail(tokenize(unparsed-text($x),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$x),extract(.,'(.+m3u8)',1))}],formats:=join($json()/format,', '),best:=$json()[last()]/format)"
name := AT5 - Nieuws (30012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_hi.mp4"}, {"format": "533", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_low.mp4/chunklist_w704258857.m3u8"}, {"format": "1597", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_medium.mp4/chunklist_w1300114578.m3u8"}, {"format": "2523", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/30/9a21205756b228e620b4389fb902f7c6_hi.mp4/chunklist_w329487467.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 533, 1597, 2523
best := 2523

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/gemist/tv/76/25309/-" --xquery "..."
name := AT5 - Het Verkeer- Valkenburgerstraat (27012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_hi.mp4"}, {"format": "409", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_low.mp4/chunklist_w1116493247.m3u8"}, {"format": "1137", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_medium.mp4/chunklist_w462340801.m3u8"}, {"format": "2077", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/27/0ef7cc784724a6487fc95bcd3803b731_hi.mp4/chunklist_w363490560.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 409, 1137, 2077
best := 2077

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/artikelen/165092/auto-botst-met-politieauto-in-oost" --xquery "..."
name := AT5 - Auto botst met politieauto in Oost (28012017)
json := [{"format": "mp4-low", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_low.mp4"}, {"format": "mp4-medium", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_medium.mp4"}, {"format": "mp4-hi", "url": "http://rtvnh-dl1.streamgate.nl/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_hi.mp4"}, {"format": "389", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_low.mp4/chunklist_w314958199.m3u8"}, {"format": "1057", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_medium.mp4/chunklist_w1691483806.m3u8"}, {"format": "1803", "url": "http://lb-at5-vod.cdn.streamgate.nl/vod/_definst_/content2/at5/at5/2017/01/28/2f9031b0e956132d92816c06498c08ed_hi.mp4/chunklist_w1032020203.m3u8"}]
formats := mp4-low, mp4-medium, mp4-hi, 389, 1057, 1803
best := 1803

xidel-0.9.6.exe -s --color=never "http://www.at5.nl/artikelen/165100/bekende-voetballers-kopen-massaal-huizen-op-in-amsterdam" --xquery "..."	//artikel met 1 embedded Kijk.nl video
name := AT5 - ''Bekende voetballers kopen massaal huizen op in Amsterdam'' (28012017)

--xquery "name:=concat(
            'AT5 - ',
            replace(
              if (contains($url,'gemist')) then
                concat(
                  if (contains(//div[@class='banner_label'],'Nieuws')) then
                    'Nieuws'
                  else
                    concat(
                      //div[@class='banner_label'],
                      '- ',
                      //div[@class='banner_title']
                    ),
                  replace(
                    //a[@class='video-player']/@href,
                    '.+(\d{4})/(\d{2})/(\d{2}).+',
                    ' ($3$2$1)'
                  )
                )
              else
                concat(
                  //meta[@property='og:title']/@content,
                  replace(
                    //meta[@property='article:published_time']/@content,
                    '(\d+)-(\d+)-(\d+).+',
                    ' ($3$2$1)'
                  )
                ),
              '[&quot;&apos;]',
              ''''''
            )
          ),
          if (//iframe) then
            ()
          else (
            let $a:=json(
              concat(
                'http://www.at5.nl/video/json?m=',
                (
                  //div[@class='video-container']/substring-after(@id,'video'),
                  //div/@data-video
                )
              )
            )/source return
            json:=[
              ('low','medium','hi') ! {
                'format':concat('mp4-',.),
                'url':replace(
                  $a/(fb)(1)/file,
                  '(hi)',
                  .
                )
              },
              for $x in ('low','medium','hi') ! replace(
                $a/(def)()[type='hls']/file,
                '(hi)',
                .
              ) return
              tail(
                tokenize(
                  unparsed-text($x),
                  '#EXT-X-STREAM-INF:'
                )
              ) ! {
                'format':string(
                  extract(
                    .,
                    'BANDWIDTH=(\d+)',1
                  ) idiv 1000
                ),
                'url':concat(
                  resolve-uri('.',$x),
                  extract(
                    .,
                    '(.+m3u8)',1
                  )
                )
              }
            ],
            formats:=join($json()/format,', '),
            best:=$json()[last()]/format
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/e9b1a15d92b26b518770012bde1815f9f86697d8]

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[name!='demo']/concat(id,': ',name)"
1: NPO Radio 1
2: NPO Radio 2
3: NPO 3FM
4: NPO Radio 4
5: NPO Radio 5
7: NPO FunX
6: NPO Soul & Jazz
37: NPO SterrenNL
11: NPO 3FM KX Radio
14: NPO 3FM Alternative
16: NPO Radio 4 Concerten
40: NPO FunX Amsterdam Arab
41: NPO FunX Dance
44: NPO FunX Utrecht Latin
45: NPO FunX Rotterdam Reggae
46: NPO FunX Slow Jamz
62: NPO FunX Amsterdam
63: NPO FunX Rotterdam
64: NPO FunX Den Haag
65: NPO FunX Utrecht
66: NPO FunX Den Haag Hip Hop

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]"
{
  "id": 1,
  "name": "NPO Radio 1",
  "sitestat": "radio1",
  "comscore_name": "nporadio1",
  "type": "main",
  "parent_id": null,
  "url": "http://nporadio1.nl/popup-live",
  "audiostreams": [
    {
      "id": 258,
      "name": "icecast-mp3-high",
      "url": "http://icecast.omroep.nl/radio1-bb-mp3",
      "audiocodec": "mp3",
      "bitrate": 192,
      "protocol": "http",
      "audiosamplerate": 48000
    },
    {
      "id": 270,
      "name": "icecast-aac-high",
      "url": "http://icecast.omroep.nl/radio1-bb-aac",
      "audiocodec": "aac",
      "bitrate": 64,
      "protocol": "http",
      "audiosamplerate": 48000
    },
    {
      "id": 318,
      "name": "icecast-mp3-low",
      "url": "http://icecast.omroep.nl/radio1-sb-mp3",
      "audiocodec": "mp3",
      "bitrate": 96,
      "protocol": "http",
      "audiosamplerate": 4800
    },
    {
      "id": 463,
      "name": "NPO Player",
      "url": "LI_RA1_837059",
      "audiocodec": "npoplayer",
      "bitrate": 192,
      "protocol": "prid",
      "audiosamplerate": null
    }
  ],
  "videostreams": [
    {
      "id": 47,
      "name": "smoothstream",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8",
      "audiocodec": "aac",
      "videocodec": "H.264",
      "container": "mp4",
      "minbitrate": 0,
      "maxbitrate": 0,
      "protocol": "http"
    },
    {
      "id": 52,
      "name": "hasp-hls",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "m3u8",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 57,
      "name": "hasp-sms",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/Manifest",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "mp4",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 58,
      "name": "hasp-hds",
      "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.f4m",
      "audiocodec": "aac",
      "videocodec": "h264",
      "container": "f4m",
      "minbitrate": 200,
      "maxbitrate": 1800,
      "protocol": "http"
    },
    {
      "id": 74,
      "name": "NPO Player",
      "url": "LI_RADIO1_300877",
      "audiocodec": "",
      "videocodec": "",
      "container": "",
      "minbitrate": 0,
      "maxbitrate": 0,
      "protocol": "prid"
    }
  ],
  "comscore_configuration": {
    "id": 1
  },
  "npw": {
    "url": "http://radioplayer.npo.nl/radio1",
    "name": "radio1",
    "base_color": "white",
    "background": "http://radio-app.omroep.nl/player/css/images/bg/radio1.jpg",
    "config": "http://radio-app.omroep.nl/player/config/radio1.js",
    "favicon": "http://radio-app.omroep.nl/player/css/images/favicon/radio1.ico"
  }
}

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]/(audiostreams)()[protocol='http']"
{
  "id": 258,
  "name": "icecast-mp3-high",
  "url": "http://icecast.omroep.nl/radio1-bb-mp3",
  "audiocodec": "mp3",
  "bitrate": 192,
  "protocol": "http",
  "audiosamplerate": 48000
}
{
  "id": 270,
  "name": "icecast-aac-high",
  "url": "http://icecast.omroep.nl/radio1-bb-aac",
  "audiocodec": "aac",
  "bitrate": 64,
  "protocol": "http",
  "audiosamplerate": 48000
}
{
  "id": 318,
  "name": "icecast-mp3-low",
  "url": "http://icecast.omroep.nl/radio1-sb-mp3",
  "audiocodec": "mp3",
  "bitrate": 96,
  "protocol": "http",
  "audiosamplerate": 4800
}

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]/[(audiostreams)()[protocol='http']/{'format':concat(audiocodec,'-',bitrate),'url':url}]"
[
  {
    "format": "mp3-192",
    "url": "http://icecast.omroep.nl/radio1-bb-mp3"
  },
  {
    "format": "aac-64",
    "url": "http://icecast.omroep.nl/radio1-bb-aac"
  },
  {
    "format": "mp3-96",
    "url": "http://icecast.omroep.nl/radio1-sb-mp3"
  }
]

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]/[(audiostreams)()[protocol='http']/{'format':concat(audiocodec,'-',bitrate),'url':url},let $a:=(videostreams)()[name='hasp-hls']/url return if ($a) then ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}) else ()]"
[
  {
    "format": "mp3-192",
    "url": "http://icecast.omroep.nl/radio1-bb-mp3"
  },
  {
    "format": "aac-64",
    "url": "http://icecast.omroep.nl/radio1-bb-aac"
  },
  {
    "format": "mp3-96",
    "url": "http://icecast.omroep.nl/radio1-sb-mp3"
  },
  {
    "format": "meta",
    "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8"
  },
  {
    "format": "347",
    "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=200000.m3u8"
  },
  {
    "format": "665",
    "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=500000.m3u8"
  },
  {
    "format": "877",
    "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=700000.m3u8"
  },
  {
    "format": "1195",
    "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=1000000.m3u8"
  }
]

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" -e "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=4]/[(audiostreams)()[protocol='http']/{'format':concat(audiocodec,'-',bitrate),'url':url},let $a:=(videostreams)()[name='hasp-hls']/url return if ($a) then ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}) else ()]"
[
  {
    "format": "mp3-192",
    "url": "http://icecast.omroep.nl/radio4-bb-mp3"
  },
  {
    "format": "aac-64",
    "url": "http://icecast.omroep.nl/radio4-bb-aac"
  },
  {
    "format": "mp3-96",
    "url": "http://icecast.omroep.nl/radio4-sb-mp3"
  }
]

xidel-0.9.6.exe -s --color=never "http://radio-app.omroep.nl/player/script/player.js" --xquery "json(extract($raw,'NPW.config.channels=(.+),NPW.config.comscore_configurations',1))()[id=1]/(name:=concat(name,replace('%date%','.+?(\d+)-(\d+)-(\d+)',' - Livestream ($1$2$3)')),json:=[(audiostreams)()[protocol='http']/{'format':concat(audiocodec,'-',bitrate),'url':url},let $b:=(videostreams)()[name='hasp-hls']/url return if ($b) then ({'format':'meta','url':$b},tail(tokenize(unparsed-text($b),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$b),extract(.,'(.+m3u8)',1))}) else ()]),let $c:=(for $x in $json()[contains(format,'-')]/format order by $x return $x,$json()[format='meta']/format,$json()[format castable as int]/format) return (formats:=join($c,', '),best:=$c[last()])"
name := NPO Radio 1 - Livestream (01022017)
json := [{"format": "mp3-192", "url": "http://icecast.omroep.nl/radio1-bb-mp3"}, {"format": "aac-64", "url": "http://icecast.omroep.nl/radio1-bb-aac"}, {"format": "mp3-96", "url": "http://icecast.omroep.nl/radio1-sb-mp3"}, {"format": "meta", "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1.m3u8"}, {"format": "347", "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=200000.m3u8"}, {"format": "665", "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=500000.m3u8"}, {"format": "877", "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=700000.m3u8"}, {"format": "1195", "url": "http://livestreams.omroep.nl/live/npo/visualradio/radio1/radio1.isml/radio1-audio_2=128000-video=1000000.m3u8"}]
formats := aac-64, mp3-96, mp3-192, meta, 347, 665, 877, 1195
best := 1195

--xquery "json(
            extract(
              $raw,
              'NPW.config.channels=(.+),NPW.config.comscore_configurations',1
            )
          )()[id=1]/(
            name:=concat(
              name,
              replace(
                '%date%',
                '.+?(\d+)-(\d+)-(\d+)',
                ' - Livestream ($1$2$3)'
              )
            ),
            json:=[
              (audiostreams)()[protocol='http']/{
                'format':concat(
                  audiocodec,
                  '-',
                  bitrate
                ),
                'url':url
              },
              let $b:=(videostreams)()[name='hasp-hls']/url return
              if ($b) then (
                {
                  'format':'meta',
                  'url':$b
                },
                tail(
                  tokenize(
                    unparsed-text($b),
                    '#EXT-X-STREAM-INF:'
                  )
                ) ! {
                  'format':string(
                    extract(
                      .,
                      'BANDWIDTH=(\d+)',1
                    ) idiv 1000
                  ),
                  'url':concat(
                    resolve-uri('.',$b),
                    extract(
                      .,
                      '(.+m3u8)',1
                    )
                  )
                }
              ) else
                ()
            ]
          ),
          let $c:=(
            for $x in $json()[contains(format,'-')]/format order by $x return $x,
            $json()[format='meta']/format,
            $json()[format castable as int]/format
          ) return (
            formats:=join($c,', '),
            best:=$c[last()]
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/65a431dc6c933e41934b389faddbd464211f40eb]
[https://github.com/Reino17/BatchGemist/commit/128a49f1c24796df01967f41981a883410b6ac59]

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/POW_03375473?token=',json('http://ida.omroep.nl/app.php/auth')/token))"
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Adaptive",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/adaptive/e322a23c32794e472337db870017de9f/58ceb65e/POW_03375473/1?extension=m3u8&type=jsonp&callback=?",
        "format": "hls"
      },
      {
        "label": "Hoog",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_std/550783bfd04d5ccabe53d0afef5e3318/58ceb65e/POW_03375473/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Normaal",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_bb/69f2f687d9d5819aff8a9a0b0dda78e2/58ceb65e/POW_03375473/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Laag",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_sb/5c6c5cce1ed1f84437fc60a9d3821ed5/58ceb65e/POW_03375473/1?type=jsonp&callback=?",
        "format": "mp4"
      }
    ]
  ]
}

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/POW_03375473?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! replace(.,'jsonp','json')"
https://odis.omroep.nl/video/ida/adaptive/784987522462209f0aaf5d9809e4957f/58ceb7c7/POW_03375473/1?extension=m3u8&type=json&callback=?
https://odis.omroep.nl/video/ida/h264_std/4234c300141f959c59d842f09b154480/58ceb7c7/POW_03375473/1?type=json&callback=?
https://odis.omroep.nl/video/ida/h264_bb/3446c82fdec0afd885ac1579585ff3db/58ceb7c7/POW_03375473/1?type=json&callback=?
https://odis.omroep.nl/video/ida/h264_sb/6c6be968ddb97cc10b386700155e368d/58ceb7c7/POW_03375473/1?type=json&callback=?

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/POW_03375473?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! json(replace(.,'jsonp','json'))"
{
  "errorcode": 0,
  "family": "adaptive",
  "path": "/urishieldv2/l27m5b363f4253913a510058ceb7fe000000.a16938c557e80f080844b3d080e736cb/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473.m3u8",
  "protocol": "https",
  "server": "adaptive-e10c1a.npostreaming.nl",
  "wait": 0,
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m5b363f4253913a510058ceb7fe000000.a16938c557e80f080844b3d080e736cb/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473.m3u8"
}
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m01c83c1d085006a00058ceb7fe000000.60bb14f0cb5d59895541ee10ef22fbfd/ceresodi/h264/p/03/10/10/42/std_POW_03375473.m4v",
  "protocol": "https",
  "server": "content10c1b.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_std/eb470360800742c5586a18492a54a5fb/58ceb7fe/POW_03375473/1?type=json&callback=?"
  },
  "url": "https://content10c1b.omroep.nl/urishieldv2/l27m01c83c1d085006a00058ceb7fe000000.60bb14f0cb5d59895541ee10ef22fbfd/ceresodi/h264/p/03/10/10/42/std_POW_03375473.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_std%2Feb470360800742c5586a18492a54a5fb%2F58ceb7fe%2FPOW_03375473%2F1%3Ftype%3Djson%26callback%3D%3F"
}
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m49664c6357c8d1140058ceb7fe000000.085d219f799561434c58adbce4c77c0c/ceresodi/h264/p/03/10/10/42/bb_POW_03375473.m4v",
  "protocol": "https",
  "server": "content10c1c.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_bb/80e4a8af25e894ea01c13b54b6c00ad0/58ceb7fe/POW_03375473/1?type=json&callback=?"
  },
  "url": "https://content10c1c.omroep.nl/urishieldv2/l27m49664c6357c8d1140058ceb7fe000000.085d219f799561434c58adbce4c77c0c/ceresodi/h264/p/03/10/10/42/bb_POW_03375473.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_bb%2F80e4a8af25e894ea01c13b54b6c00ad0%2F58ceb7fe%2FPOW_03375473%2F1%3Ftype%3Djson%26callback%3D%3F"
}
{
  "errorcode": 0,
  "family": "download",
  "path": "/urishieldv2/l27m145df1c25e31ca3e0058ceb7fe000000.ce5a66f15f97b75c7298d07ccc1b1a16/ceresodi/h264/p/03/10/10/42/sb_POW_03375473.m4v",
  "protocol": "https",
  "server": "content10c1b.omroep.nl",
  "wait": 0,
  "querystring": {
    "odiredirecturl": "/video/ida/h264_sb/a88dae0d70a213dcf758c65a8ce05312/58ceb7fe/POW_03375473/1?type=json&callback=?"
  },
  "url": "https://content10c1b.omroep.nl/urishieldv2/l27m145df1c25e31ca3e0058ceb7fe000000.ce5a66f15f97b75c7298d07ccc1b1a16/ceresodi/h264/p/03/10/10/42/sb_POW_03375473.m4v?odiredirecturl=%2Fvideo%2Fida%2Fh264_sb%2Fa88dae0d70a213dcf758c65a8ce05312%2F58ceb7fe%2FPOW_03375473%2F1%3Ftype%3Djson%26callback%3D%3F"
}

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "for $x in json(concat('http://ida.omroep.nl/app.php/POW_03375473?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! replace(.,'jsonp','json') return if (unparsed-text-available($x)) then if (contains($x,'m3u8')) then let $a:=json($x)/url return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}) else json($x)/{'format':concat('mp4-',extract(url,'.+/([a-z]+)',1)),'url':substring-before(url,'?')} else ()"
{
  "format": "meta",
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0d923c3d0c55fbad0058ceba65000000.04620d778b54ed98a5917dce0f38d1a8/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473.m3u8"
}
{
  "format": "284",
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0d923c3d0c55fbad0058ceba65000000.04620d778b54ed98a5917dce0f38d1a8/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=64000-video=204000.m3u8"
}
{
  "format": "673",
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0d923c3d0c55fbad0058ceba65000000.04620d778b54ed98a5917dce0f38d1a8/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=507000.m3u8"
}
{
  "format": "887",
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0d923c3d0c55fbad0058ceba65000000.04620d778b54ed98a5917dce0f38d1a8/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=709000.m3u8"
}
{
  "format": "1314",
  "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0d923c3d0c55fbad0058ceba65000000.04620d778b54ed98a5917dce0f38d1a8/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=1112000.m3u8"
}
{
  "format": "mp4-std",
  "url": "https://content10c1c.omroep.nl/urishieldv2/l27m6cc8ca5706074f0f0058ceba65000000.3b2ea7ed89e22046902a3894510b4e83/ceresodi/h264/p/03/10/10/42/std_POW_03375473.m4v"
}
{
  "format": "mp4-bb",
  "url": "https://content10c1c.omroep.nl/urishieldv2/l27m72fa6431141de5110058ceba66000000.a75ea9ad941be491240bcb38ea48601f/ceresodi/h264/p/03/10/10/42/bb_POW_03375473.m4v"
}
{
  "format": "mp4-sb",
  "url": "https://content10c1d.omroep.nl/urishieldv2/l27m5a0da9cf74fe99b90058ceba66000000.3c12379e97e0afcef4268b2065ecc609/ceresodi/h264/p/03/10/10/42/sb_POW_03375473.m4v"
}

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5391.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/LI_NL1_4188102?token=',json('http://ida.omroep.nl/app.php/auth')/token))"
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Live",
        "contentType": "live",
        "url": "http://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=74d6d79ce8187d3d302630e80c13d72c&type=jsonp&protection=url",
        "format": "hls"
      }
    ]
  ]
}

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/LI_NL1_4188102?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! replace(.,'jsonp','json')"
https://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=94e5b4f8c2a28f401177774a8f57b0ca&type=json&protection=url

XS4ALL (KPN netwerk):
xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/LI_NL1_4188102?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! json(replace(.,'jsonp','json'))"
https://pedgewarer22b.video.kpnstreaming.nl/session/f335b464-0cd2-11e7-9129-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=685978f55d15bfa5c5fbeb83cd1d2962_1490034982_1490034982

Ziggo (niet KPN netwerk):
xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "json(concat('http://ida.omroep.nl/app.php/LI_NL1_4188102?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! json(replace(.,'jsonp','json'))"
https://smoote2c.omroep.nl/urishieldv2/l2cme32486b49b0058cc5afc000000.f81914eb9104e6d6/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8

xidel-0.9.7.5447-openssl.exe -s --color=never --xquery "for $x in json(concat('http://ida.omroep.nl/app.php/LI_NL1_4188102?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! replace(.,'jsonp','json') return if (unparsed-text-available($x)) then if (contains($x,'m3u8')) then let $a:=if (contains($x,'live')) then json($x) else json($x)/url return ({'format':'meta','url':$a},tail(tokenize(unparsed-text($a),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$a),extract(.,'(.+m3u8)',1))}) else json($x)/{'format':concat('mp4-',extract(url,'.+/([a-z]+)',1)),'url':substring-before(url,'?')} else ()"
{
  "format": "meta",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=49d410be2c8173458ef490d04931ff56_1490035228_1490035228"
}
{
  "format": "348",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"
}
{
  "format": "666",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=500000.m3u8"
}
{
  "format": "878",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=700000.m3u8"
}
{
  "format": "1196",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"
}
{
  "format": "1620",
  "url": "https://pedgewarer25b.video.kpnstreaming.nl/session/85d67362-0cd3-11e7-a22a-1458d0420170/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1400000.m3u8"
}

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POW_03375473" --xquery "json(extract($raw,'\((.+)\)',1)) ! (name:=if (medium='live') then concat(titel,replace('%date%','.+?(\d+)-(\d+)-(\d+)',' - Livestream ($1$2$3)')) else replace(concat(if (count(.//naam)=1) then .//naam else join(.//naam,' en '),' - ',if (ptype='episode') then (if (aflevering_titel) then (if (contains(titel,aflevering_titel)) then titel else (if (contains(aflevering_titel,titel)) then aflevering_titel else concat(titel,' - ',aflevering_titel))) else titel) else concat(.//serie_titel,' - ',titel),if (matches('%date%','^\d')) then ' (%date%)' else replace(x:request({'data':concat('http://www.npo.nl/',prid),'method':'HEAD'})/url,'.+?(\d+)-(\d+)-(\d+).+',' ($1$2$3)')),'[&quot;&apos;]',''''''),if (start) then (t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30, ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30), ss2:=. mod 30)),to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)) else (),if (tt888='ja') then (s_url:=concat('http://tt888.omroep.nl/tt888/',prid),if (unparsed-text-available($s_url)) then () else s_charenc:='-sub_charenc CP1252') else (),let $a:=(if (medium='live' or pubopties) then for $x in json(concat('http://ida.omroep.nl/app.php/',prid,'?token=',json('http://ida.omroep.nl/app.php/auth')/token))//url ! replace(.,'jsonp','json') return if (unparsed-text-available($x)) then if (contains($x,'m3u8')) then let $b:=if (contains($x,'live')) then json($x) else json($x)/url return ({'format':'meta','url':$b},tail(tokenize(unparsed-text($b),'#EXT-X-STREAM-INF:')) ! {'format':string(extract(.,'BANDWIDTH=(\d+)',1) idiv 1000),'url':concat(resolve-uri('.',$b),extract(.,'(.+m3u8)',1))}) else json($x)/{'format':concat('mp4-',extract(url,'.+/([a-z]+)',1)),'url':substring-before(url,'?')} else () else (),if (medium!='live' and streams) then let $b:=(streams)() return $b/{'format':if (type) then concat('mp4-',max($b/kwaliteit)+1) else concat(if (formaat='h264') then 'mp4' else formaat,'-',kwaliteit),'url':x:request({'data':url,'method':'HEAD','error-handling':'xxx=accept'})[some $x in ('200','302') satisfies contains(headers[1],$x)]/(if (ends-with(url,'asf')) then doc(url)//@href else if (contains(url,'content-ip')) then x:request({'post':serialize-json([{\"file\":url}]),'url':'http://nos.nl/video/resolve/'})//file else url)}[url] else ()) return if ($a) then if (count($a)=1) then v_url:=$a/url else (json:=[$a],let $b:=(for $x in $a[contains(format,'wmv')]/format order by $x return $x,for $x in $a[matches(format,'mp4-\d')]/format order by $x return $x,reverse($a[matches(format,'mp4-[a-z]')]/format),$a[format='meta']/format,for $x in $a[format castable as int]/format order by $x return $x) return (formats:=join($b,', '),best:=$b[last()])) else ())"
name := NOS - NOS Journaal (18032017)
s_url := http://tt888.omroep.nl/tt888/POW_03375473
json := [{"format": "meta", "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0cc3c6300211fdb40058ced1e6000000.14ebc4b830a858e195761185115a28f5/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473.m3u8"}, {"format": "284", "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0cc3c6300211fdb40058ced1e6000000.14ebc4b830a858e195761185115a28f5/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=64000-video=204000.m3u8"}, {"format": "673", "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0cc3c6300211fdb40058ced1e6000000.14ebc4b830a858e195761185115a28f5/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=507000.m3u8"}, {"format": "887", "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0cc3c6300211fdb40058ced1e6000000.14ebc4b830a858e195761185115a28f5/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=709000.m3u8"}, {"format": "1314", "url": "https://adaptive-e10c1a.npostreaming.nl/urishieldv2/l27m0cc3c6300211fdb40058ced1e6000000.14ebc4b830a858e195761185115a28f5/p/03/10/10/20/POW_03375473/POW_03375473.ism/POW_03375473-audio=128000-video=1112000.m3u8"}, {"format": "mp4-std", "url": "https://content10c1b.omroep.nl/urishieldv2/l27m02f087475cba633a0058ced1e6000000.c5e4c925936ac22fe053293d39fcd9b7/ceresodi/h264/p/03/10/10/42/std_POW_03375473.m4v"}, {"format": "mp4-bb", "url": "https://content10c1a.omroep.nl/urishieldv2/l27m5502702769c1f6070058ced1e6000000.6eff0dfad4e5526203e115f9b7fd2e99/ceresodi/h264/p/03/10/10/42/bb_POW_03375473.m4v"}, {"format": "mp4-sb", "url": "https://content10c1d.omroep.nl/urishieldv2/l27m7c9af6b4573993c70058ced1e6000000.6f8e9d1ac7ee7c34ab2a0eed453b7af5/ceresodi/h264/p/03/10/10/42/sb_POW_03375473.m4v"}]
formats := mp4-sb, mp4-bb, mp4-std, meta, 284, 673, 887, 1314
best := 1314

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/LI_NL1_4188102" --xquery "..."
name := NPO 1 - Livestream (19032017)
json := [{"format": "meta", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?token=995bc2d679a345867cd43ffb8e08d82f_1490035613_1490035613"}, {"format": "348", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"}, {"format": "666", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=500000.m3u8"}, {"format": "878", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=700000.m3u8"}, {"format": "1196", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"}, {"format": "1620", "url": "https://pedgewarer21a.video.kpnstreaming.nl/session/6b898b4c-0cd4-11e7-99ff-9cb654975bc0/fqimjj/b2b/live/npo/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1400000.m3u8"}]
formats := meta, 348, 666, 878, 1196, 1620
best := 1620

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_NOS_7583066" --xquery "..."
name := NOS - Verwarring over nieuwe personeelsnorm verpleeghuizen (22022017)
json := [{"format": "mp4-3", "url": "http://download.omroep.nl/nos/content/mp4/web03/2017/02/22/284989.mp4"}, {"format": "mp4-2", "url": "http://download.omroep.nl/nos/content/ipod/2017/02/22/284989.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_NOS_7303921" --xquery "..."
name := NOS - Li Jie voor het eerst winnares Top-16 na opgave Solja (05022017)
json := [{"format": "mp4-3", "url": "https://video.omroep.nl/secure/f0604f4669956d624ffc736e7f38f6aa/58b8a024/nos/content-ip/mp4/web03/2017/02/05/284055.mp4"}, {"format": "mp4-2", "url": "https://video.omroep.nl/secure/b885de0468bbabeade5f209aa82ec9ab/58b8a024/nos/content-ip/ipod/2017/02/05/284055.mp4"}]
formats := mp4-2, mp4-3
best := mp4-3

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_NTR_429477" --xquery "..."
name := NTR - Ademhaling - De hele dag haal je adem. Maar wat gebeurt er dan eigenlijk in je lichaam? (04112002)
json := [{"format": "meta", "url": "https://adaptive-e99c1b.npostreaming.nl/urishieldv2/l27m3d88198459ef1c1a0058ced2a2000000.80d072b6812e959855d915db415c6bb7/5/ntr/rest/2013/WO_NTR_429477/WO_NTR_429477.ism/WO_NTR_429477.m3u8"}, {"format": "255", "url": "https://adaptive-e99c1b.npostreaming.nl/urishieldv2/l27m3d88198459ef1c1a0058ced2a2000000.80d072b6812e959855d915db415c6bb7/5/ntr/rest/2013/WO_NTR_429477/WO_NTR_429477.ism/WO_NTR_429477-audio_eng=42282-video_eng=199000.m3u8"}, {"format": "597", "url": "https://adaptive-e99c1b.npostreaming.nl/urishieldv2/l27m3d88198459ef1c1a0058ced2a2000000.80d072b6812e959855d915db415c6bb7/5/ntr/rest/2013/WO_NTR_429477/WO_NTR_429477.ism/WO_NTR_429477-audio_eng=61584-video_eng=502000.m3u8"}, {"format": "1059", "url": "https://adaptive-e99c1b.npostreaming.nl/urishieldv2/l27m3d88198459ef1c1a0058ced2a2000000.80d072b6812e959855d915db415c6bb7/5/ntr/rest/2013/WO_NTR_429477/WO_NTR_429477.ism/WO_NTR_429477-audio_eng=87882-video_eng=912000.m3u8"}, {"format": "93", "url": "https://adaptive-e99c1b.npostreaming.nl/urishieldv2/l27m3d88198459ef1c1a0058ced2a2000000.80d072b6812e959855d915db415c6bb7/5/ntr/rest/2013/WO_NTR_429477/WO_NTR_429477.ism/WO_NTR_429477-audio_eng=87882.m3u8"}, {"format": "mp4-3", "url": "http://video.omroep.nl/ntr/schooltv/beeldbank/video/20021104_ademhaling01.mp4"}]
formats := mp4-3, meta, 93, 255, 597, 1059
best := 1059

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POMS_VARA_7595022" --xquery "..."
name := VARA - De Wereld Draait Door - De TV Draait Door (23022017)
t := 157
ss1 := 1950
ss2 := 27
to := 2134
s_url := http://tt888.omroep.nl/tt888/VARA_101381686
json := [{"format": "meta", "url": "https://adaptive-e10c2b.npostreaming.nl/urishieldv2/l27m62a124e50890073d0058ced2da000000.d8af1f24e5ab2cc3a74278485e03fdb9/p/26/10/10/1e/VARA_101381686/VARA_101381686.ism/VARA_101381686.m3u8"}, {"format": "280", "url": "https://adaptive-e10c2b.npostreaming.nl/urishieldv2/l27m62a124e50890073d0058ced2da000000.d8af1f24e5ab2cc3a74278485e03fdb9/p/26/10/10/1e/VARA_101381686/VARA_101381686.ism/VARA_101381686-audio=64000-video=201000.m3u8"}, {"format": "667", "url": "https://adaptive-e10c2b.npostreaming.nl/urishieldv2/l27m62a124e50890073d0058ced2da000000.d8af1f24e5ab2cc3a74278485e03fdb9/p/26/10/10/1e/VARA_101381686/VARA_101381686.ism/VARA_101381686-audio=128000-video=502000.m3u8"}, {"format": "880", "url": "https://adaptive-e10c2b.npostreaming.nl/urishieldv2/l27m62a124e50890073d0058ced2da000000.d8af1f24e5ab2cc3a74278485e03fdb9/p/26/10/10/1e/VARA_101381686/VARA_101381686.ism/VARA_101381686-audio=128000-video=703000.m3u8"}, {"format": "1305", "url": "https://adaptive-e10c2b.npostreaming.nl/urishieldv2/l27m62a124e50890073d0058ced2da000000.d8af1f24e5ab2cc3a74278485e03fdb9/p/26/10/10/1e/VARA_101381686/VARA_101381686.ism/VARA_101381686-audio=128000-video=1104000.m3u8"}, {"format": "mp4-std", "url": "https://content50c2a.omroep.nl/urishieldv2/l27m0192e23907a75cf70058ced2da000000.eae4099bb0c7e8bcc92338e52c0fc6f3/s01/ceresodi/h264/p/26/10/10/3b/std_VARA_101381686.m4v"}, {"format": "mp4-bb", "url": "https://content50c1a.omroep.nl/urishieldv2/l27m46d7ed53685baaaa0058ced2da000000.a8b1f438cd1a537e12834dccb14e55fc/s04/ceresodi/h264/p/26/10/10/3b/bb_VARA_101381686.m4v"}, {"format": "mp4-sb", "url": "https://content50c1a.omroep.nl/urishieldv2/l27m1004131e3f29571f0058ced2da000000.d25782bb562c28aef56ed7b943e13ee9/s03/ceresodi/h264/p/26/10/10/3b/sb_VARA_101381686.m4v"}]
formats := mp4-sb, mp4-bb, mp4-std, meta, 280, 667, 880, 1305
best := 1305

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_AT_4993516" --xquery "..."
name := AVROTROS en TROS - Promo Opgelicht?! (06-09-2016) (06092016)
json := [{"format": "mp4-2", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/640x360_1000.m4v"}, {"format": "mp4-1", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/320x180_180.m4v"}, {"format": "mp4-3", "url": "http://content.omroep.nl/avrotros/transcoding/opgelicht/1473070014300/854x480_1500.m4v"}]
formats := mp4-1, mp4-2, mp4-3
best := mp4-3

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/POMS_NCRV_090735" --xquery "..."
name := NCRV - Willem Wever - Hoe gaat geluid door een telefoon? (14012006)
t := 144
ss1 := 330
ss2 := 12
to := 486
json := [{"format": "wmv-2", "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/bb.20060114.asf?wmt=58b8b8ab&wmhash=7d746b0d"}, {"format": "wmv-1", "url": "mms://blaster.omroep.nl/public/ug-od/ms4/08/media/tv/ncrv/willemwever/sb.20060114.asf?wmt=58b8b8ab&wmhash=15467dda"}, {"format": "mp4-2", "url": "http://content.omroep.nl/tv/ncrv/willemwever/bb.20060114.mp4"}]
formats := wmv-1, wmv-2, mp4-2
best := mp4-2

xidel-0.9.7.5447-openssl.exe -s --color=never "http://e.omroep.nl/metadata/WO_VPRO_043833" --xquery "..."
name := VPRO - Zigeunermuziek doet pijn - Bob Entrop, VPRO, 2008 (58 min.) (21072010)
v_url := mms://hurley.omroep.nl/public/ug-od/ms5/14/media/vpro/39594888/windowsmedia.asf?wmt=58bbebc8&wmhash=5bb334ff

--xquery "json(
            extract(
              $raw,
              '\((.+)\)',1
            )
          ) ! (
            name:=if (medium='live') then
              concat(
                titel,
                replace(
                  '%date%',
                  '.+?(\d+)-(\d+)-(\d+)',
                  ' - Livestream ($1$2$3)'
                )
              )
            else
              replace(
                concat(
                  if (count(.//naam)=1) then
                    .//naam
                  else
                    join(
                      .//naam,
                      ' en '
                    ),
                  ' - ',
                  if (ptype='episode') then (
                    if (aflevering_titel) then (
                      if (contains(titel,aflevering_titel)) then
                        titel
                      else (
                        if (contains(aflevering_titel,titel)) then
                          aflevering_titel
                        else
                          concat(
                            titel,
                            ' - ',
                            aflevering_titel
                          )
                      )
                    ) else
                      titel
                  ) else
                    concat(
                      .//serie_titel,
                      ' - ',
                      titel
                    ),
                  if (matches('%date%','^\d')) then
                    ' (%date%)'
                  else
                    replace(
                      x:request(
                        {
                          'data':concat(
                            'http://www.npo.nl/',
                            prid
                          ),
                          'method':'HEAD'
                        }
                      )/url,
                      '.+?(\d+)-(\d+)-(\d+).+',
                      ' ($1$2$3)'
                    )
                ),
                '[&quot;&apos;]',
                ''''''
              ),
            if (start) then (
              t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),
              (hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (
                if (. mod 30=0) then (
                  if (.=30) then
                    ()
                  else
                    ss1:=. - 30,
                  ss2:=30
                ) else (
                  if (.<30) then
                    ()
                  else
                    ss1:=. - (. mod 30),
                  ss2:=. mod 30
                )
              ),
              to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind)
            ) else
              (),
            if (tt888='ja') then (
              s_url:=concat(
                'http://tt888.omroep.nl/tt888/',
                prid
              ),
              if (unparsed-text-available($s_url)) then
                ()
              else
                s_charenc:='-sub_charenc CP1252'
            ) else
              (),
            let $a:=(
              if (medium='live' or pubopties) then
                for $x in json(
                  concat(
                    'http://ida.omroep.nl/app.php/',
                    prid,
                    '?token=',
                    json(
                      'http://ida.omroep.nl/app.php/auth'
                    )/token
                  )
                )//url ! replace(
                  .,
                  'jsonp',
                  'json'
                ) return
                if (unparsed-text-available($x)) then
                  if (contains($x,'m3u8')) then
                    let $b:=if (contains($x,'live')) then
                      json($x)
                    else
                      json($x)/url
                    return (
                      {
                        'format':'meta',
                        'url':$b
                      },
                      tail(
                        tokenize(
                          unparsed-text($b),
                          '#EXT-X-STREAM-INF:'
                        )
                      ) ! {
                        'format':string(
                          extract(
                            .,
                            'BANDWIDTH=(\d+)',1
                          ) idiv 1000
                        ),
                        'url':concat(
                          resolve-uri('.',$b),
                          extract(
                            .,
                            '(.+m3u8)',1
                          )
                        )
                      }
                    )
                  else
                    json($x)/{
                      'format':concat(
                        'mp4-',
                        extract(
                          url,
                          '.+/([a-z]+)',1
                        )
                      ),
                      'url':substring-before(
                        url,
                        '?'
                      )
                    }
                else
                  ()
              else
                (),
              if (medium!='live' and streams) then
                let $b:=(streams)() return
                $b/{
                  'format':if (type) then
                    concat(
                      'mp4-',
                      max($b/kwaliteit)+1
                    )
                  else
                    concat(
                      if (formaat='h264') then
                        'mp4'
                      else
                        formaat,
                      '-',
                      kwaliteit
                    ),
                  'url':x:request(
                    {
                      'data':url,
                      'method':'HEAD',
                      'error-handling':'xxx=accept'
                    }
                  )[some $x in ('200','302') satisfies contains(headers[1],$x)]/(
                    if (ends-with(url,'asf')) then
                      doc(url)//@href
                    else if (contains(url,'content-ip')) then
                      x:request(
                        {
                          'post':serialize-json(
                            [
                              {
                                \"file\":url
                              }
                            ]
                          ),
                          'url':'http://nos.nl/video/resolve/'
                        }
                      )//file
                    else
                      url
                  )
                }[url]
              else
                ()
            ) return
            if ($a) then
              if (count($a)=1) then
                v_url:=$a/url
              else (
                json:=[$a],
                let $b:=(
                  for $x in $a[contains(format,'wmv')]/format order by $x return $x,
                  for $x in $a[matches(format,'mp4-\d')]/format order by $x return $x,
                  reverse(
                    $a[matches(format,'mp4-[a-z]')]/format
                  ),
                  $a[format='meta']/format,
                  for $x in $a[format castable as int]/format order by $x return $x
                ) return (
                  formats:=join($b,', '),
                  best:=$b[last()]
                )
              )
            else
              ()
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/d95e3374cfd6c8550908e6dd0571b7f4d0c64cd7]

xidel-0.9.7.5391.exe -s --color=never "http://e.omroep.nl/metadata/POMS_BNN_7200256" -e "json(extract($raw,'\((.+)\)',1)) ! (if (environment-variable('name')) then () else if (tijdsduur) then (duur:=tijdsduur,t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),start:=start,(hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (ss:=.,if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),eind:=eind,to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind),if (publicatie_eind) then (let $a:=dateTime(publicatie_eind) - current-dateTime() return tot:=concat(replace(publicatie_eind,'(\d+)-(\d+)-(\d+)T(.+)\+.+','$3-$2-$1 $4'),' (nog ',days-from-duration($a) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($a) ! (if (.=0) then () else .||'u'),minutes-from-duration($a) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($a)),'s)')) else ()) else ())"
duur := 00:00:57
t := 57
start := 00:36:26
ss := 2186
ss1 := 2160
ss2 := 26
eind := 00:37:23
to := 2243
tot := 17-03-2017 21:21:13 (nog 11 dagen en 5u2m46s)

--xquery "json(
            extract(
              $raw,
              '\((.+)\)',1
            )
          ) ! (
            if (environment-variable('name')) then
              ()
            else
              if (tijdsduur) then (
                duur:=tijdsduur,
                t:=hours-from-time(tijdsduur)*3600+minutes-from-time(tijdsduur)*60+seconds-from-time(tijdsduur),
                start:=start,
                (hours-from-time(start)*3600+minutes-from-time(start)*60+seconds-from-time(start)) ! (
                  ss:=.,
                  if (. mod 30=0) then (
                    if (.=30) then
                      ()
                    else
                      ss1:=. - 30,
                    ss2:=30
                  ) else (
                    if (.<30) then
                      ()
                    else
                      ss1:=. - (. mod 30),
                    ss2:=. mod 30
                  )
                ),
                eind:=eind,
                to:=hours-from-time(eind)*3600+minutes-from-time(eind)*60+seconds-from-time(eind),
                if (publicatie_eind) then (
                  let $a:=dateTime(publicatie_eind) - current-dateTime() return
                  tot:=concat(
                    replace(
                      publicatie_eind,
                      '(\d+)-(\d+)-(\d+)T(.+)\+.+',
                      '$3-$2-$1 $4'
                    ),
                    ' (nog ',
                    days-from-duration($a) ! (
                      if (.=0) then
                        ()
                      else if (.=1) then
                        .||' dag en '
                      else
                        .||' dagen en '
                    ),
                    hours-from-duration($a) ! (
                      if (.=0) then
                        ()
                      else
                        .||'u'
                    ),
                    minutes-from-duration($a) ! (
                      if (.=0) then
                        ()
                      else
                        .||'m'
                    ),
                    floor(seconds-from-duration($a)),
                    's)'
                  )
                ) else
                  ()
              ) else
                (),
          )"

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5391.exe -s --color=never "http://buitenland.eenvandaag.nl/tv-items/71453/tanks_in_europa_terug_naar_de_koude_oorlog_" --xquery "prid:=//script/extract(.,'prid: \"(.+)\"',1)[.],if (contains($url,'broadcast')) then () else (name:=concat('EenVandaag - ',replace(//meta[@name='twitter:title']/@content,'[&quot;&apos;]',''''''),replace(//meta[@name='twitter:player:stream']/@content,'.+std\.(\d{4})(\d{2})(\d{2}).+',' ($3$2$1)')),//script/json(extract(.,'options: (.+?\})',1,'s'))/(t:=endAt - startAt,duur:=$t * dayTimeDuration('PT1S') + time('00:00:00'),startAt ! (ss:=.,start:=. * dayTimeDuration('PT1S') + time('00:00:00'),if (. mod 30=0) then (if (.=30) then () else ss1:=. - 30,ss2:=30) else (if (.<30) then () else ss1:=. - (. mod 30),ss2:=. mod 30)),to:=endAt,eind:=$to * dayTimeDuration('PT1S') + time('00:00:00')))"
prid := AT_2064397
name := EenVandaag - Tanks in Europa, terug naar de Koude Oorlog? (10012017)
t := 275
duur := 00:04:35
ss := 1038
start := 00:17:18
ss1 := 1020
ss2 := 18
to := 1313
eind := 00:21:53

--xquery "prid:=//script/extract(
            .,
            'prid: \"(.+)\"',1
          )[.],
          if (contains($url,'broadcast')) then
            ()
          else (
            name:=concat(
              'EenVandaag - ',
              replace(
                //meta[@name='twitter:title']/@content,
                '[&quot;&apos;]',
                ''''''
              ),
              replace(
                //meta[@name='twitter:player:stream']/@content,
                '.+std\.(\d{4})(\d{2})(\d{2}).+',
                ' ($3$2$1)'
              )
            ),
            //script/json(
              extract(
                .,
                'options: (.+?\})',1,
                's'
              )
            )/(
              t:=endAt - startAt,
              duur:=$t * dayTimeDuration('PT1S') + time('00:00:00'),
              startAt ! (
                ss:=.,
                start:=. * dayTimeDuration('PT1S') + time('00:00:00'),
                if (. mod 30=0) then (
                  if (.=30) then
                    ()
                  else
                    ss1:=. - 30,
                  ss2:=30
                ) else (
                  if (.<30) then
                    ()
                  else
                    ss1:=. - (. mod 30),
                  ss2:=. mod 30
                )
              ),
              to:=endAt,
              eind:=$to * dayTimeDuration('PT1S') + time('00:00:00')
            )
          )"

--------------------------------------------------------------------------------------------------------------------------------

xidel-0.9.7.5391.exe -s --color=never "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=52009553-3547-3298-88f9-4619441d9aa5/fmt=adaptive/" --xquery "$json/(material)()/(duur:=substring-before(duration,'.'),t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00') let $b:=$a - current-dateTime() return tot:=concat(replace($a,'(\d+)-(\d+)-(\d+)T(.+)','$3-$2-$1 $4'),' (nog ',days-from-duration($b) ! (if (.=0) then () else if (.=1) then .||' dag en ' else .||' dagen en '),hours-from-duration($b) ! (if (.=0) then () else .||'u'),minutes-from-duration($b) ! (if (.=0) then () else .||'m'),floor(seconds-from-duration($b)),'s)'))"
duur := 01:01:43
t := 3703
tot := 11-03-2017 20:35:44 (nog 5 dagen en 6u5m4s)

--xquery "$json/(material)()/(
            duur:=substring-before(duration,'.'),
            t:=hours-from-time(duration)*3600+minutes-from-time(duration)*60+floor(seconds-from-time(duration)),
            let $a:=(.//ddr_timeframes)()[model='AVOD']/stop * dayTimeDuration('PT1S') + dateTime('1970-01-01T00:00:00')
            let $b:=$a - current-dateTime() return
            tot:=concat(
              replace(
                $a,
                '(\d+)-(\d+)-(\d+)T(.+)',
                '$3-$2-$1 $4'
              ),
              ' (nog ',
              days-from-duration($b) ! (
                if (.=0) then
                  ()
                else if (.=1) then
                  .||' dag en '
                else
                  .||' dagen en '
              ),
              hours-from-duration($b) ! (
                if (.=0) then
                  ()
                else
                  .||'u'
              ),
              minutes-from-duration($b) ! (
                if (.=0) then
                  ()
                else
                  .||'m'
              ),
              floor(
                seconds-from-duration($b)
              ),
              's)'
            )
          )"

================================================================================================================================

[https://github.com/Reino17/BatchGemist/commit/128a49f1c24796df01967f41981a883410b6ac59]

xidel-0.9.7.5447-openssl.exe -s -e "let $a:=extract(system('cmd /c "FFMpeg\ffmpeg-x86-N-83034-gf48b6b8.exe" -i \"http://download.omroep.nl/nos/content/mp4/web03/2017/02/27/285337.mp4\" 2>&1'),'Duration: (.+?), start',1) return if ($a castable as time) then (duur:=substring-before($a,'.'),t:=hours-from-time($a)*3600+minutes-from-time($a)*60+floor(seconds-from-time($a))) else ()"
duur := 00:07:51
t := 471

-e "let $a:=extract(
      system('cmd /c "FFMpeg\ffmpeg-x86-N-83034-gf48b6b8.exe" -i \"http://download.omroep.nl/nos/content/mp4/web03/2017/02/27/285337.mp4\" 2>&1'),
      'Duration: (.+?), start',1
    ) return
    if ($a castable as time) then (
      duur:=substring-before($a,'.'),
      t:=hours-from-time($a)*3600+minutes-from-time($a)*60+floor(seconds-from-time($a))
    ) else
      ()"
